/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.yjy.apcs.rpc.server.report;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2016-07-06")
public class TRequestReportDetailVo implements org.apache.thrift.TBase<TRequestReportDetailVo, TRequestReportDetailVo._Fields>, java.io.Serializable, Cloneable, Comparable<TRequestReportDetailVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TRequestReportDetailVo");

  private static final org.apache.thrift.protocol.TField INVOICENUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("invoicenumber", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField BUYER_COMPANYNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("buyerCompanyname", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField BUYER_LINKMAN_FIELD_DESC = new org.apache.thrift.protocol.TField("buyerLinkman", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField IS_SUM_FIELD_DESC = new org.apache.thrift.protocol.TField("isSum", org.apache.thrift.protocol.TType.BOOL, (short)4);
  private static final org.apache.thrift.protocol.TField SALERID_FIELD_DESC = new org.apache.thrift.protocol.TField("salerid", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField PARENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("parentId", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField CURRENT_PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("currentPage", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField PAGE_SIZE_FIELD_DESC = new org.apache.thrift.protocol.TField("pageSize", org.apache.thrift.protocol.TType.I32, (short)8);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TRequestReportDetailVoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TRequestReportDetailVoTupleSchemeFactory());
  }

  public String invoicenumber; // optional
  public String buyerCompanyname; // optional
  public String buyerLinkman; // optional
  public boolean isSum; // optional
  public int salerid; // optional
  public int parentId; // optional
  public int currentPage; // optional
  public int pageSize; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    INVOICENUMBER((short)1, "invoicenumber"),
    BUYER_COMPANYNAME((short)2, "buyerCompanyname"),
    BUYER_LINKMAN((short)3, "buyerLinkman"),
    IS_SUM((short)4, "isSum"),
    SALERID((short)5, "salerid"),
    PARENT_ID((short)6, "parentId"),
    CURRENT_PAGE((short)7, "currentPage"),
    PAGE_SIZE((short)8, "pageSize");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // INVOICENUMBER
          return INVOICENUMBER;
        case 2: // BUYER_COMPANYNAME
          return BUYER_COMPANYNAME;
        case 3: // BUYER_LINKMAN
          return BUYER_LINKMAN;
        case 4: // IS_SUM
          return IS_SUM;
        case 5: // SALERID
          return SALERID;
        case 6: // PARENT_ID
          return PARENT_ID;
        case 7: // CURRENT_PAGE
          return CURRENT_PAGE;
        case 8: // PAGE_SIZE
          return PAGE_SIZE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ISSUM_ISSET_ID = 0;
  private static final int __SALERID_ISSET_ID = 1;
  private static final int __PARENTID_ISSET_ID = 2;
  private static final int __CURRENTPAGE_ISSET_ID = 3;
  private static final int __PAGESIZE_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.INVOICENUMBER,_Fields.BUYER_COMPANYNAME,_Fields.BUYER_LINKMAN,_Fields.IS_SUM,_Fields.SALERID,_Fields.PARENT_ID,_Fields.CURRENT_PAGE,_Fields.PAGE_SIZE};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.INVOICENUMBER, new org.apache.thrift.meta_data.FieldMetaData("invoicenumber", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUYER_COMPANYNAME, new org.apache.thrift.meta_data.FieldMetaData("buyerCompanyname", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUYER_LINKMAN, new org.apache.thrift.meta_data.FieldMetaData("buyerLinkman", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_SUM, new org.apache.thrift.meta_data.FieldMetaData("isSum", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.SALERID, new org.apache.thrift.meta_data.FieldMetaData("salerid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PARENT_ID, new org.apache.thrift.meta_data.FieldMetaData("parentId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CURRENT_PAGE, new org.apache.thrift.meta_data.FieldMetaData("currentPage", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PAGE_SIZE, new org.apache.thrift.meta_data.FieldMetaData("pageSize", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TRequestReportDetailVo.class, metaDataMap);
  }

  public TRequestReportDetailVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TRequestReportDetailVo(TRequestReportDetailVo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetInvoicenumber()) {
      this.invoicenumber = other.invoicenumber;
    }
    if (other.isSetBuyerCompanyname()) {
      this.buyerCompanyname = other.buyerCompanyname;
    }
    if (other.isSetBuyerLinkman()) {
      this.buyerLinkman = other.buyerLinkman;
    }
    this.isSum = other.isSum;
    this.salerid = other.salerid;
    this.parentId = other.parentId;
    this.currentPage = other.currentPage;
    this.pageSize = other.pageSize;
  }

  public TRequestReportDetailVo deepCopy() {
    return new TRequestReportDetailVo(this);
  }

  @Override
  public void clear() {
    this.invoicenumber = null;
    this.buyerCompanyname = null;
    this.buyerLinkman = null;
    setIsSumIsSet(false);
    this.isSum = false;
    setSaleridIsSet(false);
    this.salerid = 0;
    setParentIdIsSet(false);
    this.parentId = 0;
    setCurrentPageIsSet(false);
    this.currentPage = 0;
    setPageSizeIsSet(false);
    this.pageSize = 0;
  }

  public String getInvoicenumber() {
    return this.invoicenumber;
  }

  public TRequestReportDetailVo setInvoicenumber(String invoicenumber) {
    this.invoicenumber = invoicenumber;
    return this;
  }

  public void unsetInvoicenumber() {
    this.invoicenumber = null;
  }

  /** Returns true if field invoicenumber is set (has been assigned a value) and false otherwise */
  public boolean isSetInvoicenumber() {
    return this.invoicenumber != null;
  }

  public void setInvoicenumberIsSet(boolean value) {
    if (!value) {
      this.invoicenumber = null;
    }
  }

  public String getBuyerCompanyname() {
    return this.buyerCompanyname;
  }

  public TRequestReportDetailVo setBuyerCompanyname(String buyerCompanyname) {
    this.buyerCompanyname = buyerCompanyname;
    return this;
  }

  public void unsetBuyerCompanyname() {
    this.buyerCompanyname = null;
  }

  /** Returns true if field buyerCompanyname is set (has been assigned a value) and false otherwise */
  public boolean isSetBuyerCompanyname() {
    return this.buyerCompanyname != null;
  }

  public void setBuyerCompanynameIsSet(boolean value) {
    if (!value) {
      this.buyerCompanyname = null;
    }
  }

  public String getBuyerLinkman() {
    return this.buyerLinkman;
  }

  public TRequestReportDetailVo setBuyerLinkman(String buyerLinkman) {
    this.buyerLinkman = buyerLinkman;
    return this;
  }

  public void unsetBuyerLinkman() {
    this.buyerLinkman = null;
  }

  /** Returns true if field buyerLinkman is set (has been assigned a value) and false otherwise */
  public boolean isSetBuyerLinkman() {
    return this.buyerLinkman != null;
  }

  public void setBuyerLinkmanIsSet(boolean value) {
    if (!value) {
      this.buyerLinkman = null;
    }
  }

  public boolean isIsSum() {
    return this.isSum;
  }

  public TRequestReportDetailVo setIsSum(boolean isSum) {
    this.isSum = isSum;
    setIsSumIsSet(true);
    return this;
  }

  public void unsetIsSum() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISSUM_ISSET_ID);
  }

  /** Returns true if field isSum is set (has been assigned a value) and false otherwise */
  public boolean isSetIsSum() {
    return EncodingUtils.testBit(__isset_bitfield, __ISSUM_ISSET_ID);
  }

  public void setIsSumIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISSUM_ISSET_ID, value);
  }

  public int getSalerid() {
    return this.salerid;
  }

  public TRequestReportDetailVo setSalerid(int salerid) {
    this.salerid = salerid;
    setSaleridIsSet(true);
    return this;
  }

  public void unsetSalerid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SALERID_ISSET_ID);
  }

  /** Returns true if field salerid is set (has been assigned a value) and false otherwise */
  public boolean isSetSalerid() {
    return EncodingUtils.testBit(__isset_bitfield, __SALERID_ISSET_ID);
  }

  public void setSaleridIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SALERID_ISSET_ID, value);
  }

  public int getParentId() {
    return this.parentId;
  }

  public TRequestReportDetailVo setParentId(int parentId) {
    this.parentId = parentId;
    setParentIdIsSet(true);
    return this;
  }

  public void unsetParentId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PARENTID_ISSET_ID);
  }

  /** Returns true if field parentId is set (has been assigned a value) and false otherwise */
  public boolean isSetParentId() {
    return EncodingUtils.testBit(__isset_bitfield, __PARENTID_ISSET_ID);
  }

  public void setParentIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PARENTID_ISSET_ID, value);
  }

  public int getCurrentPage() {
    return this.currentPage;
  }

  public TRequestReportDetailVo setCurrentPage(int currentPage) {
    this.currentPage = currentPage;
    setCurrentPageIsSet(true);
    return this;
  }

  public void unsetCurrentPage() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CURRENTPAGE_ISSET_ID);
  }

  /** Returns true if field currentPage is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrentPage() {
    return EncodingUtils.testBit(__isset_bitfield, __CURRENTPAGE_ISSET_ID);
  }

  public void setCurrentPageIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CURRENTPAGE_ISSET_ID, value);
  }

  public int getPageSize() {
    return this.pageSize;
  }

  public TRequestReportDetailVo setPageSize(int pageSize) {
    this.pageSize = pageSize;
    setPageSizeIsSet(true);
    return this;
  }

  public void unsetPageSize() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAGESIZE_ISSET_ID);
  }

  /** Returns true if field pageSize is set (has been assigned a value) and false otherwise */
  public boolean isSetPageSize() {
    return EncodingUtils.testBit(__isset_bitfield, __PAGESIZE_ISSET_ID);
  }

  public void setPageSizeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAGESIZE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case INVOICENUMBER:
      if (value == null) {
        unsetInvoicenumber();
      } else {
        setInvoicenumber((String)value);
      }
      break;

    case BUYER_COMPANYNAME:
      if (value == null) {
        unsetBuyerCompanyname();
      } else {
        setBuyerCompanyname((String)value);
      }
      break;

    case BUYER_LINKMAN:
      if (value == null) {
        unsetBuyerLinkman();
      } else {
        setBuyerLinkman((String)value);
      }
      break;

    case IS_SUM:
      if (value == null) {
        unsetIsSum();
      } else {
        setIsSum((Boolean)value);
      }
      break;

    case SALERID:
      if (value == null) {
        unsetSalerid();
      } else {
        setSalerid((Integer)value);
      }
      break;

    case PARENT_ID:
      if (value == null) {
        unsetParentId();
      } else {
        setParentId((Integer)value);
      }
      break;

    case CURRENT_PAGE:
      if (value == null) {
        unsetCurrentPage();
      } else {
        setCurrentPage((Integer)value);
      }
      break;

    case PAGE_SIZE:
      if (value == null) {
        unsetPageSize();
      } else {
        setPageSize((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case INVOICENUMBER:
      return getInvoicenumber();

    case BUYER_COMPANYNAME:
      return getBuyerCompanyname();

    case BUYER_LINKMAN:
      return getBuyerLinkman();

    case IS_SUM:
      return isIsSum();

    case SALERID:
      return getSalerid();

    case PARENT_ID:
      return getParentId();

    case CURRENT_PAGE:
      return getCurrentPage();

    case PAGE_SIZE:
      return getPageSize();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case INVOICENUMBER:
      return isSetInvoicenumber();
    case BUYER_COMPANYNAME:
      return isSetBuyerCompanyname();
    case BUYER_LINKMAN:
      return isSetBuyerLinkman();
    case IS_SUM:
      return isSetIsSum();
    case SALERID:
      return isSetSalerid();
    case PARENT_ID:
      return isSetParentId();
    case CURRENT_PAGE:
      return isSetCurrentPage();
    case PAGE_SIZE:
      return isSetPageSize();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TRequestReportDetailVo)
      return this.equals((TRequestReportDetailVo)that);
    return false;
  }

  public boolean equals(TRequestReportDetailVo that) {
    if (that == null)
      return false;

    boolean this_present_invoicenumber = true && this.isSetInvoicenumber();
    boolean that_present_invoicenumber = true && that.isSetInvoicenumber();
    if (this_present_invoicenumber || that_present_invoicenumber) {
      if (!(this_present_invoicenumber && that_present_invoicenumber))
        return false;
      if (!this.invoicenumber.equals(that.invoicenumber))
        return false;
    }

    boolean this_present_buyerCompanyname = true && this.isSetBuyerCompanyname();
    boolean that_present_buyerCompanyname = true && that.isSetBuyerCompanyname();
    if (this_present_buyerCompanyname || that_present_buyerCompanyname) {
      if (!(this_present_buyerCompanyname && that_present_buyerCompanyname))
        return false;
      if (!this.buyerCompanyname.equals(that.buyerCompanyname))
        return false;
    }

    boolean this_present_buyerLinkman = true && this.isSetBuyerLinkman();
    boolean that_present_buyerLinkman = true && that.isSetBuyerLinkman();
    if (this_present_buyerLinkman || that_present_buyerLinkman) {
      if (!(this_present_buyerLinkman && that_present_buyerLinkman))
        return false;
      if (!this.buyerLinkman.equals(that.buyerLinkman))
        return false;
    }

    boolean this_present_isSum = true && this.isSetIsSum();
    boolean that_present_isSum = true && that.isSetIsSum();
    if (this_present_isSum || that_present_isSum) {
      if (!(this_present_isSum && that_present_isSum))
        return false;
      if (this.isSum != that.isSum)
        return false;
    }

    boolean this_present_salerid = true && this.isSetSalerid();
    boolean that_present_salerid = true && that.isSetSalerid();
    if (this_present_salerid || that_present_salerid) {
      if (!(this_present_salerid && that_present_salerid))
        return false;
      if (this.salerid != that.salerid)
        return false;
    }

    boolean this_present_parentId = true && this.isSetParentId();
    boolean that_present_parentId = true && that.isSetParentId();
    if (this_present_parentId || that_present_parentId) {
      if (!(this_present_parentId && that_present_parentId))
        return false;
      if (this.parentId != that.parentId)
        return false;
    }

    boolean this_present_currentPage = true && this.isSetCurrentPage();
    boolean that_present_currentPage = true && that.isSetCurrentPage();
    if (this_present_currentPage || that_present_currentPage) {
      if (!(this_present_currentPage && that_present_currentPage))
        return false;
      if (this.currentPage != that.currentPage)
        return false;
    }

    boolean this_present_pageSize = true && this.isSetPageSize();
    boolean that_present_pageSize = true && that.isSetPageSize();
    if (this_present_pageSize || that_present_pageSize) {
      if (!(this_present_pageSize && that_present_pageSize))
        return false;
      if (this.pageSize != that.pageSize)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_invoicenumber = true && (isSetInvoicenumber());
    list.add(present_invoicenumber);
    if (present_invoicenumber)
      list.add(invoicenumber);

    boolean present_buyerCompanyname = true && (isSetBuyerCompanyname());
    list.add(present_buyerCompanyname);
    if (present_buyerCompanyname)
      list.add(buyerCompanyname);

    boolean present_buyerLinkman = true && (isSetBuyerLinkman());
    list.add(present_buyerLinkman);
    if (present_buyerLinkman)
      list.add(buyerLinkman);

    boolean present_isSum = true && (isSetIsSum());
    list.add(present_isSum);
    if (present_isSum)
      list.add(isSum);

    boolean present_salerid = true && (isSetSalerid());
    list.add(present_salerid);
    if (present_salerid)
      list.add(salerid);

    boolean present_parentId = true && (isSetParentId());
    list.add(present_parentId);
    if (present_parentId)
      list.add(parentId);

    boolean present_currentPage = true && (isSetCurrentPage());
    list.add(present_currentPage);
    if (present_currentPage)
      list.add(currentPage);

    boolean present_pageSize = true && (isSetPageSize());
    list.add(present_pageSize);
    if (present_pageSize)
      list.add(pageSize);

    return list.hashCode();
  }

  @Override
  public int compareTo(TRequestReportDetailVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetInvoicenumber()).compareTo(other.isSetInvoicenumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInvoicenumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.invoicenumber, other.invoicenumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBuyerCompanyname()).compareTo(other.isSetBuyerCompanyname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuyerCompanyname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buyerCompanyname, other.buyerCompanyname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBuyerLinkman()).compareTo(other.isSetBuyerLinkman());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuyerLinkman()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buyerLinkman, other.buyerLinkman);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIsSum()).compareTo(other.isSetIsSum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIsSum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isSum, other.isSum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSalerid()).compareTo(other.isSetSalerid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalerid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salerid, other.salerid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetParentId()).compareTo(other.isSetParentId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetParentId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.parentId, other.parentId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCurrentPage()).compareTo(other.isSetCurrentPage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrentPage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.currentPage, other.currentPage);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPageSize()).compareTo(other.isSetPageSize());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPageSize()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageSize, other.pageSize);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TRequestReportDetailVo(");
    boolean first = true;

    if (isSetInvoicenumber()) {
      sb.append("invoicenumber:");
      if (this.invoicenumber == null) {
        sb.append("null");
      } else {
        sb.append(this.invoicenumber);
      }
      first = false;
    }
    if (isSetBuyerCompanyname()) {
      if (!first) sb.append(", ");
      sb.append("buyerCompanyname:");
      if (this.buyerCompanyname == null) {
        sb.append("null");
      } else {
        sb.append(this.buyerCompanyname);
      }
      first = false;
    }
    if (isSetBuyerLinkman()) {
      if (!first) sb.append(", ");
      sb.append("buyerLinkman:");
      if (this.buyerLinkman == null) {
        sb.append("null");
      } else {
        sb.append(this.buyerLinkman);
      }
      first = false;
    }
    if (isSetIsSum()) {
      if (!first) sb.append(", ");
      sb.append("isSum:");
      sb.append(this.isSum);
      first = false;
    }
    if (isSetSalerid()) {
      if (!first) sb.append(", ");
      sb.append("salerid:");
      sb.append(this.salerid);
      first = false;
    }
    if (isSetParentId()) {
      if (!first) sb.append(", ");
      sb.append("parentId:");
      sb.append(this.parentId);
      first = false;
    }
    if (isSetCurrentPage()) {
      if (!first) sb.append(", ");
      sb.append("currentPage:");
      sb.append(this.currentPage);
      first = false;
    }
    if (isSetPageSize()) {
      if (!first) sb.append(", ");
      sb.append("pageSize:");
      sb.append(this.pageSize);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TRequestReportDetailVoStandardSchemeFactory implements SchemeFactory {
    public TRequestReportDetailVoStandardScheme getScheme() {
      return new TRequestReportDetailVoStandardScheme();
    }
  }

  private static class TRequestReportDetailVoStandardScheme extends StandardScheme<TRequestReportDetailVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TRequestReportDetailVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // INVOICENUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.invoicenumber = iprot.readString();
              struct.setInvoicenumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // BUYER_COMPANYNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.buyerCompanyname = iprot.readString();
              struct.setBuyerCompanynameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // BUYER_LINKMAN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.buyerLinkman = iprot.readString();
              struct.setBuyerLinkmanIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // IS_SUM
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.isSum = iprot.readBool();
              struct.setIsSumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SALERID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.salerid = iprot.readI32();
              struct.setSaleridIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PARENT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.parentId = iprot.readI32();
              struct.setParentIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CURRENT_PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.currentPage = iprot.readI32();
              struct.setCurrentPageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PAGE_SIZE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pageSize = iprot.readI32();
              struct.setPageSizeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TRequestReportDetailVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.invoicenumber != null) {
        if (struct.isSetInvoicenumber()) {
          oprot.writeFieldBegin(INVOICENUMBER_FIELD_DESC);
          oprot.writeString(struct.invoicenumber);
          oprot.writeFieldEnd();
        }
      }
      if (struct.buyerCompanyname != null) {
        if (struct.isSetBuyerCompanyname()) {
          oprot.writeFieldBegin(BUYER_COMPANYNAME_FIELD_DESC);
          oprot.writeString(struct.buyerCompanyname);
          oprot.writeFieldEnd();
        }
      }
      if (struct.buyerLinkman != null) {
        if (struct.isSetBuyerLinkman()) {
          oprot.writeFieldBegin(BUYER_LINKMAN_FIELD_DESC);
          oprot.writeString(struct.buyerLinkman);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIsSum()) {
        oprot.writeFieldBegin(IS_SUM_FIELD_DESC);
        oprot.writeBool(struct.isSum);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSalerid()) {
        oprot.writeFieldBegin(SALERID_FIELD_DESC);
        oprot.writeI32(struct.salerid);
        oprot.writeFieldEnd();
      }
      if (struct.isSetParentId()) {
        oprot.writeFieldBegin(PARENT_ID_FIELD_DESC);
        oprot.writeI32(struct.parentId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCurrentPage()) {
        oprot.writeFieldBegin(CURRENT_PAGE_FIELD_DESC);
        oprot.writeI32(struct.currentPage);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPageSize()) {
        oprot.writeFieldBegin(PAGE_SIZE_FIELD_DESC);
        oprot.writeI32(struct.pageSize);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TRequestReportDetailVoTupleSchemeFactory implements SchemeFactory {
    public TRequestReportDetailVoTupleScheme getScheme() {
      return new TRequestReportDetailVoTupleScheme();
    }
  }

  private static class TRequestReportDetailVoTupleScheme extends TupleScheme<TRequestReportDetailVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TRequestReportDetailVo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetInvoicenumber()) {
        optionals.set(0);
      }
      if (struct.isSetBuyerCompanyname()) {
        optionals.set(1);
      }
      if (struct.isSetBuyerLinkman()) {
        optionals.set(2);
      }
      if (struct.isSetIsSum()) {
        optionals.set(3);
      }
      if (struct.isSetSalerid()) {
        optionals.set(4);
      }
      if (struct.isSetParentId()) {
        optionals.set(5);
      }
      if (struct.isSetCurrentPage()) {
        optionals.set(6);
      }
      if (struct.isSetPageSize()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetInvoicenumber()) {
        oprot.writeString(struct.invoicenumber);
      }
      if (struct.isSetBuyerCompanyname()) {
        oprot.writeString(struct.buyerCompanyname);
      }
      if (struct.isSetBuyerLinkman()) {
        oprot.writeString(struct.buyerLinkman);
      }
      if (struct.isSetIsSum()) {
        oprot.writeBool(struct.isSum);
      }
      if (struct.isSetSalerid()) {
        oprot.writeI32(struct.salerid);
      }
      if (struct.isSetParentId()) {
        oprot.writeI32(struct.parentId);
      }
      if (struct.isSetCurrentPage()) {
        oprot.writeI32(struct.currentPage);
      }
      if (struct.isSetPageSize()) {
        oprot.writeI32(struct.pageSize);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TRequestReportDetailVo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.invoicenumber = iprot.readString();
        struct.setInvoicenumberIsSet(true);
      }
      if (incoming.get(1)) {
        struct.buyerCompanyname = iprot.readString();
        struct.setBuyerCompanynameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.buyerLinkman = iprot.readString();
        struct.setBuyerLinkmanIsSet(true);
      }
      if (incoming.get(3)) {
        struct.isSum = iprot.readBool();
        struct.setIsSumIsSet(true);
      }
      if (incoming.get(4)) {
        struct.salerid = iprot.readI32();
        struct.setSaleridIsSet(true);
      }
      if (incoming.get(5)) {
        struct.parentId = iprot.readI32();
        struct.setParentIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.currentPage = iprot.readI32();
        struct.setCurrentPageIsSet(true);
      }
      if (incoming.get(7)) {
        struct.pageSize = iprot.readI32();
        struct.setPageSizeIsSet(true);
      }
    }
  }

}

