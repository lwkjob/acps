/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.yjy.apcs.rpc.server.report;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2016-07-06")
public class ReportDetailRpcService {

  public interface Iface {

    public TReportDetailPaginationVo findGoodsOutPagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException;

    public TReportDetailPaginationVo findGoodsBalancePagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException;

    public TReportDetailPaginationVo findGoodsReceiptPagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException;

    public TReportDetailPaginationVo findGoodsRefundPagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException;

    public TReportDetailPaginationVo findFundsBalancePagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException;

    public TReportDetailPaginationVo findFundsMarkupPagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException;

    public TReportDetailPaginationVo findFundsReceiptPagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException;

    public TReportDetailPaginationVo findFundsSettlePagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException;

    public TReportDetailPaginationVo findFundsWriteBackPagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException;

  }

  public interface AsyncIface {

    public void findGoodsOutPagination(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void findGoodsBalancePagination(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void findGoodsReceiptPagination(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void findGoodsRefundPagination(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void findFundsBalancePagination(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void findFundsMarkupPagination(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void findFundsReceiptPagination(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void findFundsSettlePagination(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void findFundsWriteBackPagination(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends org.apache.thrift.TServiceClient implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public TReportDetailPaginationVo findGoodsOutPagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException
    {
      send_findGoodsOutPagination(requestReportVo);
      return recv_findGoodsOutPagination();
    }

    public void send_findGoodsOutPagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException
    {
      findGoodsOutPagination_args args = new findGoodsOutPagination_args();
      args.setRequestReportVo(requestReportVo);
      sendBase("findGoodsOutPagination", args);
    }

    public TReportDetailPaginationVo recv_findGoodsOutPagination() throws org.apache.thrift.TException
    {
      findGoodsOutPagination_result result = new findGoodsOutPagination_result();
      receiveBase(result, "findGoodsOutPagination");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "findGoodsOutPagination failed: unknown result");
    }

    public TReportDetailPaginationVo findGoodsBalancePagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException
    {
      send_findGoodsBalancePagination(requestReportVo);
      return recv_findGoodsBalancePagination();
    }

    public void send_findGoodsBalancePagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException
    {
      findGoodsBalancePagination_args args = new findGoodsBalancePagination_args();
      args.setRequestReportVo(requestReportVo);
      sendBase("findGoodsBalancePagination", args);
    }

    public TReportDetailPaginationVo recv_findGoodsBalancePagination() throws org.apache.thrift.TException
    {
      findGoodsBalancePagination_result result = new findGoodsBalancePagination_result();
      receiveBase(result, "findGoodsBalancePagination");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "findGoodsBalancePagination failed: unknown result");
    }

    public TReportDetailPaginationVo findGoodsReceiptPagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException
    {
      send_findGoodsReceiptPagination(requestReportVo);
      return recv_findGoodsReceiptPagination();
    }

    public void send_findGoodsReceiptPagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException
    {
      findGoodsReceiptPagination_args args = new findGoodsReceiptPagination_args();
      args.setRequestReportVo(requestReportVo);
      sendBase("findGoodsReceiptPagination", args);
    }

    public TReportDetailPaginationVo recv_findGoodsReceiptPagination() throws org.apache.thrift.TException
    {
      findGoodsReceiptPagination_result result = new findGoodsReceiptPagination_result();
      receiveBase(result, "findGoodsReceiptPagination");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "findGoodsReceiptPagination failed: unknown result");
    }

    public TReportDetailPaginationVo findGoodsRefundPagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException
    {
      send_findGoodsRefundPagination(requestReportVo);
      return recv_findGoodsRefundPagination();
    }

    public void send_findGoodsRefundPagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException
    {
      findGoodsRefundPagination_args args = new findGoodsRefundPagination_args();
      args.setRequestReportVo(requestReportVo);
      sendBase("findGoodsRefundPagination", args);
    }

    public TReportDetailPaginationVo recv_findGoodsRefundPagination() throws org.apache.thrift.TException
    {
      findGoodsRefundPagination_result result = new findGoodsRefundPagination_result();
      receiveBase(result, "findGoodsRefundPagination");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "findGoodsRefundPagination failed: unknown result");
    }

    public TReportDetailPaginationVo findFundsBalancePagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException
    {
      send_findFundsBalancePagination(requestReportVo);
      return recv_findFundsBalancePagination();
    }

    public void send_findFundsBalancePagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException
    {
      findFundsBalancePagination_args args = new findFundsBalancePagination_args();
      args.setRequestReportVo(requestReportVo);
      sendBase("findFundsBalancePagination", args);
    }

    public TReportDetailPaginationVo recv_findFundsBalancePagination() throws org.apache.thrift.TException
    {
      findFundsBalancePagination_result result = new findFundsBalancePagination_result();
      receiveBase(result, "findFundsBalancePagination");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "findFundsBalancePagination failed: unknown result");
    }

    public TReportDetailPaginationVo findFundsMarkupPagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException
    {
      send_findFundsMarkupPagination(requestReportVo);
      return recv_findFundsMarkupPagination();
    }

    public void send_findFundsMarkupPagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException
    {
      findFundsMarkupPagination_args args = new findFundsMarkupPagination_args();
      args.setRequestReportVo(requestReportVo);
      sendBase("findFundsMarkupPagination", args);
    }

    public TReportDetailPaginationVo recv_findFundsMarkupPagination() throws org.apache.thrift.TException
    {
      findFundsMarkupPagination_result result = new findFundsMarkupPagination_result();
      receiveBase(result, "findFundsMarkupPagination");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "findFundsMarkupPagination failed: unknown result");
    }

    public TReportDetailPaginationVo findFundsReceiptPagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException
    {
      send_findFundsReceiptPagination(requestReportVo);
      return recv_findFundsReceiptPagination();
    }

    public void send_findFundsReceiptPagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException
    {
      findFundsReceiptPagination_args args = new findFundsReceiptPagination_args();
      args.setRequestReportVo(requestReportVo);
      sendBase("findFundsReceiptPagination", args);
    }

    public TReportDetailPaginationVo recv_findFundsReceiptPagination() throws org.apache.thrift.TException
    {
      findFundsReceiptPagination_result result = new findFundsReceiptPagination_result();
      receiveBase(result, "findFundsReceiptPagination");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "findFundsReceiptPagination failed: unknown result");
    }

    public TReportDetailPaginationVo findFundsSettlePagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException
    {
      send_findFundsSettlePagination(requestReportVo);
      return recv_findFundsSettlePagination();
    }

    public void send_findFundsSettlePagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException
    {
      findFundsSettlePagination_args args = new findFundsSettlePagination_args();
      args.setRequestReportVo(requestReportVo);
      sendBase("findFundsSettlePagination", args);
    }

    public TReportDetailPaginationVo recv_findFundsSettlePagination() throws org.apache.thrift.TException
    {
      findFundsSettlePagination_result result = new findFundsSettlePagination_result();
      receiveBase(result, "findFundsSettlePagination");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "findFundsSettlePagination failed: unknown result");
    }

    public TReportDetailPaginationVo findFundsWriteBackPagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException
    {
      send_findFundsWriteBackPagination(requestReportVo);
      return recv_findFundsWriteBackPagination();
    }

    public void send_findFundsWriteBackPagination(TRequestReportDetailVo requestReportVo) throws org.apache.thrift.TException
    {
      findFundsWriteBackPagination_args args = new findFundsWriteBackPagination_args();
      args.setRequestReportVo(requestReportVo);
      sendBase("findFundsWriteBackPagination", args);
    }

    public TReportDetailPaginationVo recv_findFundsWriteBackPagination() throws org.apache.thrift.TException
    {
      findFundsWriteBackPagination_result result = new findFundsWriteBackPagination_result();
      receiveBase(result, "findFundsWriteBackPagination");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "findFundsWriteBackPagination failed: unknown result");
    }

  }
  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void findGoodsOutPagination(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      findGoodsOutPagination_call method_call = new findGoodsOutPagination_call(requestReportVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class findGoodsOutPagination_call extends org.apache.thrift.async.TAsyncMethodCall {
      private TRequestReportDetailVo requestReportVo;
      public findGoodsOutPagination_call(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.requestReportVo = requestReportVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("findGoodsOutPagination", org.apache.thrift.protocol.TMessageType.CALL, 0));
        findGoodsOutPagination_args args = new findGoodsOutPagination_args();
        args.setRequestReportVo(requestReportVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public TReportDetailPaginationVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_findGoodsOutPagination();
      }
    }

    public void findGoodsBalancePagination(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      findGoodsBalancePagination_call method_call = new findGoodsBalancePagination_call(requestReportVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class findGoodsBalancePagination_call extends org.apache.thrift.async.TAsyncMethodCall {
      private TRequestReportDetailVo requestReportVo;
      public findGoodsBalancePagination_call(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.requestReportVo = requestReportVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("findGoodsBalancePagination", org.apache.thrift.protocol.TMessageType.CALL, 0));
        findGoodsBalancePagination_args args = new findGoodsBalancePagination_args();
        args.setRequestReportVo(requestReportVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public TReportDetailPaginationVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_findGoodsBalancePagination();
      }
    }

    public void findGoodsReceiptPagination(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      findGoodsReceiptPagination_call method_call = new findGoodsReceiptPagination_call(requestReportVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class findGoodsReceiptPagination_call extends org.apache.thrift.async.TAsyncMethodCall {
      private TRequestReportDetailVo requestReportVo;
      public findGoodsReceiptPagination_call(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.requestReportVo = requestReportVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("findGoodsReceiptPagination", org.apache.thrift.protocol.TMessageType.CALL, 0));
        findGoodsReceiptPagination_args args = new findGoodsReceiptPagination_args();
        args.setRequestReportVo(requestReportVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public TReportDetailPaginationVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_findGoodsReceiptPagination();
      }
    }

    public void findGoodsRefundPagination(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      findGoodsRefundPagination_call method_call = new findGoodsRefundPagination_call(requestReportVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class findGoodsRefundPagination_call extends org.apache.thrift.async.TAsyncMethodCall {
      private TRequestReportDetailVo requestReportVo;
      public findGoodsRefundPagination_call(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.requestReportVo = requestReportVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("findGoodsRefundPagination", org.apache.thrift.protocol.TMessageType.CALL, 0));
        findGoodsRefundPagination_args args = new findGoodsRefundPagination_args();
        args.setRequestReportVo(requestReportVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public TReportDetailPaginationVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_findGoodsRefundPagination();
      }
    }

    public void findFundsBalancePagination(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      findFundsBalancePagination_call method_call = new findFundsBalancePagination_call(requestReportVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class findFundsBalancePagination_call extends org.apache.thrift.async.TAsyncMethodCall {
      private TRequestReportDetailVo requestReportVo;
      public findFundsBalancePagination_call(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.requestReportVo = requestReportVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("findFundsBalancePagination", org.apache.thrift.protocol.TMessageType.CALL, 0));
        findFundsBalancePagination_args args = new findFundsBalancePagination_args();
        args.setRequestReportVo(requestReportVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public TReportDetailPaginationVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_findFundsBalancePagination();
      }
    }

    public void findFundsMarkupPagination(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      findFundsMarkupPagination_call method_call = new findFundsMarkupPagination_call(requestReportVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class findFundsMarkupPagination_call extends org.apache.thrift.async.TAsyncMethodCall {
      private TRequestReportDetailVo requestReportVo;
      public findFundsMarkupPagination_call(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.requestReportVo = requestReportVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("findFundsMarkupPagination", org.apache.thrift.protocol.TMessageType.CALL, 0));
        findFundsMarkupPagination_args args = new findFundsMarkupPagination_args();
        args.setRequestReportVo(requestReportVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public TReportDetailPaginationVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_findFundsMarkupPagination();
      }
    }

    public void findFundsReceiptPagination(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      findFundsReceiptPagination_call method_call = new findFundsReceiptPagination_call(requestReportVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class findFundsReceiptPagination_call extends org.apache.thrift.async.TAsyncMethodCall {
      private TRequestReportDetailVo requestReportVo;
      public findFundsReceiptPagination_call(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.requestReportVo = requestReportVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("findFundsReceiptPagination", org.apache.thrift.protocol.TMessageType.CALL, 0));
        findFundsReceiptPagination_args args = new findFundsReceiptPagination_args();
        args.setRequestReportVo(requestReportVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public TReportDetailPaginationVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_findFundsReceiptPagination();
      }
    }

    public void findFundsSettlePagination(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      findFundsSettlePagination_call method_call = new findFundsSettlePagination_call(requestReportVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class findFundsSettlePagination_call extends org.apache.thrift.async.TAsyncMethodCall {
      private TRequestReportDetailVo requestReportVo;
      public findFundsSettlePagination_call(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.requestReportVo = requestReportVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("findFundsSettlePagination", org.apache.thrift.protocol.TMessageType.CALL, 0));
        findFundsSettlePagination_args args = new findFundsSettlePagination_args();
        args.setRequestReportVo(requestReportVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public TReportDetailPaginationVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_findFundsSettlePagination();
      }
    }

    public void findFundsWriteBackPagination(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      findFundsWriteBackPagination_call method_call = new findFundsWriteBackPagination_call(requestReportVo, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class findFundsWriteBackPagination_call extends org.apache.thrift.async.TAsyncMethodCall {
      private TRequestReportDetailVo requestReportVo;
      public findFundsWriteBackPagination_call(TRequestReportDetailVo requestReportVo, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.requestReportVo = requestReportVo;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("findFundsWriteBackPagination", org.apache.thrift.protocol.TMessageType.CALL, 0));
        findFundsWriteBackPagination_args args = new findFundsWriteBackPagination_args();
        args.setRequestReportVo(requestReportVo);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public TReportDetailPaginationVo getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_findFundsWriteBackPagination();
      }
    }

  }

  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
    private static final Logger LOGGER = LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> getProcessMap(Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("findGoodsOutPagination", new findGoodsOutPagination());
      processMap.put("findGoodsBalancePagination", new findGoodsBalancePagination());
      processMap.put("findGoodsReceiptPagination", new findGoodsReceiptPagination());
      processMap.put("findGoodsRefundPagination", new findGoodsRefundPagination());
      processMap.put("findFundsBalancePagination", new findFundsBalancePagination());
      processMap.put("findFundsMarkupPagination", new findFundsMarkupPagination());
      processMap.put("findFundsReceiptPagination", new findFundsReceiptPagination());
      processMap.put("findFundsSettlePagination", new findFundsSettlePagination());
      processMap.put("findFundsWriteBackPagination", new findFundsWriteBackPagination());
      return processMap;
    }

    public static class findGoodsOutPagination<I extends Iface> extends org.apache.thrift.ProcessFunction<I, findGoodsOutPagination_args> {
      public findGoodsOutPagination() {
        super("findGoodsOutPagination");
      }

      public findGoodsOutPagination_args getEmptyArgsInstance() {
        return new findGoodsOutPagination_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public findGoodsOutPagination_result getResult(I iface, findGoodsOutPagination_args args) throws org.apache.thrift.TException {
        findGoodsOutPagination_result result = new findGoodsOutPagination_result();
        result.success = iface.findGoodsOutPagination(args.requestReportVo);
        return result;
      }
    }

    public static class findGoodsBalancePagination<I extends Iface> extends org.apache.thrift.ProcessFunction<I, findGoodsBalancePagination_args> {
      public findGoodsBalancePagination() {
        super("findGoodsBalancePagination");
      }

      public findGoodsBalancePagination_args getEmptyArgsInstance() {
        return new findGoodsBalancePagination_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public findGoodsBalancePagination_result getResult(I iface, findGoodsBalancePagination_args args) throws org.apache.thrift.TException {
        findGoodsBalancePagination_result result = new findGoodsBalancePagination_result();
        result.success = iface.findGoodsBalancePagination(args.requestReportVo);
        return result;
      }
    }

    public static class findGoodsReceiptPagination<I extends Iface> extends org.apache.thrift.ProcessFunction<I, findGoodsReceiptPagination_args> {
      public findGoodsReceiptPagination() {
        super("findGoodsReceiptPagination");
      }

      public findGoodsReceiptPagination_args getEmptyArgsInstance() {
        return new findGoodsReceiptPagination_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public findGoodsReceiptPagination_result getResult(I iface, findGoodsReceiptPagination_args args) throws org.apache.thrift.TException {
        findGoodsReceiptPagination_result result = new findGoodsReceiptPagination_result();
        result.success = iface.findGoodsReceiptPagination(args.requestReportVo);
        return result;
      }
    }

    public static class findGoodsRefundPagination<I extends Iface> extends org.apache.thrift.ProcessFunction<I, findGoodsRefundPagination_args> {
      public findGoodsRefundPagination() {
        super("findGoodsRefundPagination");
      }

      public findGoodsRefundPagination_args getEmptyArgsInstance() {
        return new findGoodsRefundPagination_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public findGoodsRefundPagination_result getResult(I iface, findGoodsRefundPagination_args args) throws org.apache.thrift.TException {
        findGoodsRefundPagination_result result = new findGoodsRefundPagination_result();
        result.success = iface.findGoodsRefundPagination(args.requestReportVo);
        return result;
      }
    }

    public static class findFundsBalancePagination<I extends Iface> extends org.apache.thrift.ProcessFunction<I, findFundsBalancePagination_args> {
      public findFundsBalancePagination() {
        super("findFundsBalancePagination");
      }

      public findFundsBalancePagination_args getEmptyArgsInstance() {
        return new findFundsBalancePagination_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public findFundsBalancePagination_result getResult(I iface, findFundsBalancePagination_args args) throws org.apache.thrift.TException {
        findFundsBalancePagination_result result = new findFundsBalancePagination_result();
        result.success = iface.findFundsBalancePagination(args.requestReportVo);
        return result;
      }
    }

    public static class findFundsMarkupPagination<I extends Iface> extends org.apache.thrift.ProcessFunction<I, findFundsMarkupPagination_args> {
      public findFundsMarkupPagination() {
        super("findFundsMarkupPagination");
      }

      public findFundsMarkupPagination_args getEmptyArgsInstance() {
        return new findFundsMarkupPagination_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public findFundsMarkupPagination_result getResult(I iface, findFundsMarkupPagination_args args) throws org.apache.thrift.TException {
        findFundsMarkupPagination_result result = new findFundsMarkupPagination_result();
        result.success = iface.findFundsMarkupPagination(args.requestReportVo);
        return result;
      }
    }

    public static class findFundsReceiptPagination<I extends Iface> extends org.apache.thrift.ProcessFunction<I, findFundsReceiptPagination_args> {
      public findFundsReceiptPagination() {
        super("findFundsReceiptPagination");
      }

      public findFundsReceiptPagination_args getEmptyArgsInstance() {
        return new findFundsReceiptPagination_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public findFundsReceiptPagination_result getResult(I iface, findFundsReceiptPagination_args args) throws org.apache.thrift.TException {
        findFundsReceiptPagination_result result = new findFundsReceiptPagination_result();
        result.success = iface.findFundsReceiptPagination(args.requestReportVo);
        return result;
      }
    }

    public static class findFundsSettlePagination<I extends Iface> extends org.apache.thrift.ProcessFunction<I, findFundsSettlePagination_args> {
      public findFundsSettlePagination() {
        super("findFundsSettlePagination");
      }

      public findFundsSettlePagination_args getEmptyArgsInstance() {
        return new findFundsSettlePagination_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public findFundsSettlePagination_result getResult(I iface, findFundsSettlePagination_args args) throws org.apache.thrift.TException {
        findFundsSettlePagination_result result = new findFundsSettlePagination_result();
        result.success = iface.findFundsSettlePagination(args.requestReportVo);
        return result;
      }
    }

    public static class findFundsWriteBackPagination<I extends Iface> extends org.apache.thrift.ProcessFunction<I, findFundsWriteBackPagination_args> {
      public findFundsWriteBackPagination() {
        super("findFundsWriteBackPagination");
      }

      public findFundsWriteBackPagination_args getEmptyArgsInstance() {
        return new findFundsWriteBackPagination_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public findFundsWriteBackPagination_result getResult(I iface, findFundsWriteBackPagination_args args) throws org.apache.thrift.TException {
        findFundsWriteBackPagination_result result = new findFundsWriteBackPagination_result();
        result.success = iface.findFundsWriteBackPagination(args.requestReportVo);
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
    private static final Logger LOGGER = LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("findGoodsOutPagination", new findGoodsOutPagination());
      processMap.put("findGoodsBalancePagination", new findGoodsBalancePagination());
      processMap.put("findGoodsReceiptPagination", new findGoodsReceiptPagination());
      processMap.put("findGoodsRefundPagination", new findGoodsRefundPagination());
      processMap.put("findFundsBalancePagination", new findFundsBalancePagination());
      processMap.put("findFundsMarkupPagination", new findFundsMarkupPagination());
      processMap.put("findFundsReceiptPagination", new findFundsReceiptPagination());
      processMap.put("findFundsSettlePagination", new findFundsSettlePagination());
      processMap.put("findFundsWriteBackPagination", new findFundsWriteBackPagination());
      return processMap;
    }

    public static class findGoodsOutPagination<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, findGoodsOutPagination_args, TReportDetailPaginationVo> {
      public findGoodsOutPagination() {
        super("findGoodsOutPagination");
      }

      public findGoodsOutPagination_args getEmptyArgsInstance() {
        return new findGoodsOutPagination_args();
      }

      public AsyncMethodCallback<TReportDetailPaginationVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<TReportDetailPaginationVo>() { 
          public void onComplete(TReportDetailPaginationVo o) {
            findGoodsOutPagination_result result = new findGoodsOutPagination_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            findGoodsOutPagination_result result = new findGoodsOutPagination_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, findGoodsOutPagination_args args, org.apache.thrift.async.AsyncMethodCallback<TReportDetailPaginationVo> resultHandler) throws TException {
        iface.findGoodsOutPagination(args.requestReportVo,resultHandler);
      }
    }

    public static class findGoodsBalancePagination<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, findGoodsBalancePagination_args, TReportDetailPaginationVo> {
      public findGoodsBalancePagination() {
        super("findGoodsBalancePagination");
      }

      public findGoodsBalancePagination_args getEmptyArgsInstance() {
        return new findGoodsBalancePagination_args();
      }

      public AsyncMethodCallback<TReportDetailPaginationVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<TReportDetailPaginationVo>() { 
          public void onComplete(TReportDetailPaginationVo o) {
            findGoodsBalancePagination_result result = new findGoodsBalancePagination_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            findGoodsBalancePagination_result result = new findGoodsBalancePagination_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, findGoodsBalancePagination_args args, org.apache.thrift.async.AsyncMethodCallback<TReportDetailPaginationVo> resultHandler) throws TException {
        iface.findGoodsBalancePagination(args.requestReportVo,resultHandler);
      }
    }

    public static class findGoodsReceiptPagination<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, findGoodsReceiptPagination_args, TReportDetailPaginationVo> {
      public findGoodsReceiptPagination() {
        super("findGoodsReceiptPagination");
      }

      public findGoodsReceiptPagination_args getEmptyArgsInstance() {
        return new findGoodsReceiptPagination_args();
      }

      public AsyncMethodCallback<TReportDetailPaginationVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<TReportDetailPaginationVo>() { 
          public void onComplete(TReportDetailPaginationVo o) {
            findGoodsReceiptPagination_result result = new findGoodsReceiptPagination_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            findGoodsReceiptPagination_result result = new findGoodsReceiptPagination_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, findGoodsReceiptPagination_args args, org.apache.thrift.async.AsyncMethodCallback<TReportDetailPaginationVo> resultHandler) throws TException {
        iface.findGoodsReceiptPagination(args.requestReportVo,resultHandler);
      }
    }

    public static class findGoodsRefundPagination<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, findGoodsRefundPagination_args, TReportDetailPaginationVo> {
      public findGoodsRefundPagination() {
        super("findGoodsRefundPagination");
      }

      public findGoodsRefundPagination_args getEmptyArgsInstance() {
        return new findGoodsRefundPagination_args();
      }

      public AsyncMethodCallback<TReportDetailPaginationVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<TReportDetailPaginationVo>() { 
          public void onComplete(TReportDetailPaginationVo o) {
            findGoodsRefundPagination_result result = new findGoodsRefundPagination_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            findGoodsRefundPagination_result result = new findGoodsRefundPagination_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, findGoodsRefundPagination_args args, org.apache.thrift.async.AsyncMethodCallback<TReportDetailPaginationVo> resultHandler) throws TException {
        iface.findGoodsRefundPagination(args.requestReportVo,resultHandler);
      }
    }

    public static class findFundsBalancePagination<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, findFundsBalancePagination_args, TReportDetailPaginationVo> {
      public findFundsBalancePagination() {
        super("findFundsBalancePagination");
      }

      public findFundsBalancePagination_args getEmptyArgsInstance() {
        return new findFundsBalancePagination_args();
      }

      public AsyncMethodCallback<TReportDetailPaginationVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<TReportDetailPaginationVo>() { 
          public void onComplete(TReportDetailPaginationVo o) {
            findFundsBalancePagination_result result = new findFundsBalancePagination_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            findFundsBalancePagination_result result = new findFundsBalancePagination_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, findFundsBalancePagination_args args, org.apache.thrift.async.AsyncMethodCallback<TReportDetailPaginationVo> resultHandler) throws TException {
        iface.findFundsBalancePagination(args.requestReportVo,resultHandler);
      }
    }

    public static class findFundsMarkupPagination<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, findFundsMarkupPagination_args, TReportDetailPaginationVo> {
      public findFundsMarkupPagination() {
        super("findFundsMarkupPagination");
      }

      public findFundsMarkupPagination_args getEmptyArgsInstance() {
        return new findFundsMarkupPagination_args();
      }

      public AsyncMethodCallback<TReportDetailPaginationVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<TReportDetailPaginationVo>() { 
          public void onComplete(TReportDetailPaginationVo o) {
            findFundsMarkupPagination_result result = new findFundsMarkupPagination_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            findFundsMarkupPagination_result result = new findFundsMarkupPagination_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, findFundsMarkupPagination_args args, org.apache.thrift.async.AsyncMethodCallback<TReportDetailPaginationVo> resultHandler) throws TException {
        iface.findFundsMarkupPagination(args.requestReportVo,resultHandler);
      }
    }

    public static class findFundsReceiptPagination<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, findFundsReceiptPagination_args, TReportDetailPaginationVo> {
      public findFundsReceiptPagination() {
        super("findFundsReceiptPagination");
      }

      public findFundsReceiptPagination_args getEmptyArgsInstance() {
        return new findFundsReceiptPagination_args();
      }

      public AsyncMethodCallback<TReportDetailPaginationVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<TReportDetailPaginationVo>() { 
          public void onComplete(TReportDetailPaginationVo o) {
            findFundsReceiptPagination_result result = new findFundsReceiptPagination_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            findFundsReceiptPagination_result result = new findFundsReceiptPagination_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, findFundsReceiptPagination_args args, org.apache.thrift.async.AsyncMethodCallback<TReportDetailPaginationVo> resultHandler) throws TException {
        iface.findFundsReceiptPagination(args.requestReportVo,resultHandler);
      }
    }

    public static class findFundsSettlePagination<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, findFundsSettlePagination_args, TReportDetailPaginationVo> {
      public findFundsSettlePagination() {
        super("findFundsSettlePagination");
      }

      public findFundsSettlePagination_args getEmptyArgsInstance() {
        return new findFundsSettlePagination_args();
      }

      public AsyncMethodCallback<TReportDetailPaginationVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<TReportDetailPaginationVo>() { 
          public void onComplete(TReportDetailPaginationVo o) {
            findFundsSettlePagination_result result = new findFundsSettlePagination_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            findFundsSettlePagination_result result = new findFundsSettlePagination_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, findFundsSettlePagination_args args, org.apache.thrift.async.AsyncMethodCallback<TReportDetailPaginationVo> resultHandler) throws TException {
        iface.findFundsSettlePagination(args.requestReportVo,resultHandler);
      }
    }

    public static class findFundsWriteBackPagination<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, findFundsWriteBackPagination_args, TReportDetailPaginationVo> {
      public findFundsWriteBackPagination() {
        super("findFundsWriteBackPagination");
      }

      public findFundsWriteBackPagination_args getEmptyArgsInstance() {
        return new findFundsWriteBackPagination_args();
      }

      public AsyncMethodCallback<TReportDetailPaginationVo> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<TReportDetailPaginationVo>() { 
          public void onComplete(TReportDetailPaginationVo o) {
            findFundsWriteBackPagination_result result = new findFundsWriteBackPagination_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            findFundsWriteBackPagination_result result = new findFundsWriteBackPagination_result();
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, findFundsWriteBackPagination_args args, org.apache.thrift.async.AsyncMethodCallback<TReportDetailPaginationVo> resultHandler) throws TException {
        iface.findFundsWriteBackPagination(args.requestReportVo,resultHandler);
      }
    }

  }

  public static class findGoodsOutPagination_args implements org.apache.thrift.TBase<findGoodsOutPagination_args, findGoodsOutPagination_args._Fields>, java.io.Serializable, Cloneable, Comparable<findGoodsOutPagination_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findGoodsOutPagination_args");

    private static final org.apache.thrift.protocol.TField REQUEST_REPORT_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("requestReportVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findGoodsOutPagination_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findGoodsOutPagination_argsTupleSchemeFactory());
    }

    public TRequestReportDetailVo requestReportVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      REQUEST_REPORT_VO((short)1, "requestReportVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // REQUEST_REPORT_VO
            return REQUEST_REPORT_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.REQUEST_REPORT_VO, new org.apache.thrift.meta_data.FieldMetaData("requestReportVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TRequestReportDetailVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findGoodsOutPagination_args.class, metaDataMap);
    }

    public findGoodsOutPagination_args() {
    }

    public findGoodsOutPagination_args(
      TRequestReportDetailVo requestReportVo)
    {
      this();
      this.requestReportVo = requestReportVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findGoodsOutPagination_args(findGoodsOutPagination_args other) {
      if (other.isSetRequestReportVo()) {
        this.requestReportVo = new TRequestReportDetailVo(other.requestReportVo);
      }
    }

    public findGoodsOutPagination_args deepCopy() {
      return new findGoodsOutPagination_args(this);
    }

    @Override
    public void clear() {
      this.requestReportVo = null;
    }

    public TRequestReportDetailVo getRequestReportVo() {
      return this.requestReportVo;
    }

    public findGoodsOutPagination_args setRequestReportVo(TRequestReportDetailVo requestReportVo) {
      this.requestReportVo = requestReportVo;
      return this;
    }

    public void unsetRequestReportVo() {
      this.requestReportVo = null;
    }

    /** Returns true if field requestReportVo is set (has been assigned a value) and false otherwise */
    public boolean isSetRequestReportVo() {
      return this.requestReportVo != null;
    }

    public void setRequestReportVoIsSet(boolean value) {
      if (!value) {
        this.requestReportVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case REQUEST_REPORT_VO:
        if (value == null) {
          unsetRequestReportVo();
        } else {
          setRequestReportVo((TRequestReportDetailVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case REQUEST_REPORT_VO:
        return getRequestReportVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case REQUEST_REPORT_VO:
        return isSetRequestReportVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findGoodsOutPagination_args)
        return this.equals((findGoodsOutPagination_args)that);
      return false;
    }

    public boolean equals(findGoodsOutPagination_args that) {
      if (that == null)
        return false;

      boolean this_present_requestReportVo = true && this.isSetRequestReportVo();
      boolean that_present_requestReportVo = true && that.isSetRequestReportVo();
      if (this_present_requestReportVo || that_present_requestReportVo) {
        if (!(this_present_requestReportVo && that_present_requestReportVo))
          return false;
        if (!this.requestReportVo.equals(that.requestReportVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_requestReportVo = true && (isSetRequestReportVo());
      list.add(present_requestReportVo);
      if (present_requestReportVo)
        list.add(requestReportVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(findGoodsOutPagination_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetRequestReportVo()).compareTo(other.isSetRequestReportVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRequestReportVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestReportVo, other.requestReportVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findGoodsOutPagination_args(");
      boolean first = true;

      sb.append("requestReportVo:");
      if (this.requestReportVo == null) {
        sb.append("null");
      } else {
        sb.append(this.requestReportVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (requestReportVo != null) {
        requestReportVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findGoodsOutPagination_argsStandardSchemeFactory implements SchemeFactory {
      public findGoodsOutPagination_argsStandardScheme getScheme() {
        return new findGoodsOutPagination_argsStandardScheme();
      }
    }

    private static class findGoodsOutPagination_argsStandardScheme extends StandardScheme<findGoodsOutPagination_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findGoodsOutPagination_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // REQUEST_REPORT_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.requestReportVo = new TRequestReportDetailVo();
                struct.requestReportVo.read(iprot);
                struct.setRequestReportVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findGoodsOutPagination_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.requestReportVo != null) {
          oprot.writeFieldBegin(REQUEST_REPORT_VO_FIELD_DESC);
          struct.requestReportVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findGoodsOutPagination_argsTupleSchemeFactory implements SchemeFactory {
      public findGoodsOutPagination_argsTupleScheme getScheme() {
        return new findGoodsOutPagination_argsTupleScheme();
      }
    }

    private static class findGoodsOutPagination_argsTupleScheme extends TupleScheme<findGoodsOutPagination_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findGoodsOutPagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetRequestReportVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetRequestReportVo()) {
          struct.requestReportVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findGoodsOutPagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.requestReportVo = new TRequestReportDetailVo();
          struct.requestReportVo.read(iprot);
          struct.setRequestReportVoIsSet(true);
        }
      }
    }

  }

  public static class findGoodsOutPagination_result implements org.apache.thrift.TBase<findGoodsOutPagination_result, findGoodsOutPagination_result._Fields>, java.io.Serializable, Cloneable, Comparable<findGoodsOutPagination_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findGoodsOutPagination_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findGoodsOutPagination_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findGoodsOutPagination_resultTupleSchemeFactory());
    }

    public TReportDetailPaginationVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TReportDetailPaginationVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findGoodsOutPagination_result.class, metaDataMap);
    }

    public findGoodsOutPagination_result() {
    }

    public findGoodsOutPagination_result(
      TReportDetailPaginationVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findGoodsOutPagination_result(findGoodsOutPagination_result other) {
      if (other.isSetSuccess()) {
        this.success = new TReportDetailPaginationVo(other.success);
      }
    }

    public findGoodsOutPagination_result deepCopy() {
      return new findGoodsOutPagination_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public TReportDetailPaginationVo getSuccess() {
      return this.success;
    }

    public findGoodsOutPagination_result setSuccess(TReportDetailPaginationVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((TReportDetailPaginationVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findGoodsOutPagination_result)
        return this.equals((findGoodsOutPagination_result)that);
      return false;
    }

    public boolean equals(findGoodsOutPagination_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(findGoodsOutPagination_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findGoodsOutPagination_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findGoodsOutPagination_resultStandardSchemeFactory implements SchemeFactory {
      public findGoodsOutPagination_resultStandardScheme getScheme() {
        return new findGoodsOutPagination_resultStandardScheme();
      }
    }

    private static class findGoodsOutPagination_resultStandardScheme extends StandardScheme<findGoodsOutPagination_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findGoodsOutPagination_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new TReportDetailPaginationVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findGoodsOutPagination_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findGoodsOutPagination_resultTupleSchemeFactory implements SchemeFactory {
      public findGoodsOutPagination_resultTupleScheme getScheme() {
        return new findGoodsOutPagination_resultTupleScheme();
      }
    }

    private static class findGoodsOutPagination_resultTupleScheme extends TupleScheme<findGoodsOutPagination_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findGoodsOutPagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findGoodsOutPagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new TReportDetailPaginationVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class findGoodsBalancePagination_args implements org.apache.thrift.TBase<findGoodsBalancePagination_args, findGoodsBalancePagination_args._Fields>, java.io.Serializable, Cloneable, Comparable<findGoodsBalancePagination_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findGoodsBalancePagination_args");

    private static final org.apache.thrift.protocol.TField REQUEST_REPORT_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("requestReportVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findGoodsBalancePagination_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findGoodsBalancePagination_argsTupleSchemeFactory());
    }

    public TRequestReportDetailVo requestReportVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      REQUEST_REPORT_VO((short)1, "requestReportVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // REQUEST_REPORT_VO
            return REQUEST_REPORT_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.REQUEST_REPORT_VO, new org.apache.thrift.meta_data.FieldMetaData("requestReportVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TRequestReportDetailVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findGoodsBalancePagination_args.class, metaDataMap);
    }

    public findGoodsBalancePagination_args() {
    }

    public findGoodsBalancePagination_args(
      TRequestReportDetailVo requestReportVo)
    {
      this();
      this.requestReportVo = requestReportVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findGoodsBalancePagination_args(findGoodsBalancePagination_args other) {
      if (other.isSetRequestReportVo()) {
        this.requestReportVo = new TRequestReportDetailVo(other.requestReportVo);
      }
    }

    public findGoodsBalancePagination_args deepCopy() {
      return new findGoodsBalancePagination_args(this);
    }

    @Override
    public void clear() {
      this.requestReportVo = null;
    }

    public TRequestReportDetailVo getRequestReportVo() {
      return this.requestReportVo;
    }

    public findGoodsBalancePagination_args setRequestReportVo(TRequestReportDetailVo requestReportVo) {
      this.requestReportVo = requestReportVo;
      return this;
    }

    public void unsetRequestReportVo() {
      this.requestReportVo = null;
    }

    /** Returns true if field requestReportVo is set (has been assigned a value) and false otherwise */
    public boolean isSetRequestReportVo() {
      return this.requestReportVo != null;
    }

    public void setRequestReportVoIsSet(boolean value) {
      if (!value) {
        this.requestReportVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case REQUEST_REPORT_VO:
        if (value == null) {
          unsetRequestReportVo();
        } else {
          setRequestReportVo((TRequestReportDetailVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case REQUEST_REPORT_VO:
        return getRequestReportVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case REQUEST_REPORT_VO:
        return isSetRequestReportVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findGoodsBalancePagination_args)
        return this.equals((findGoodsBalancePagination_args)that);
      return false;
    }

    public boolean equals(findGoodsBalancePagination_args that) {
      if (that == null)
        return false;

      boolean this_present_requestReportVo = true && this.isSetRequestReportVo();
      boolean that_present_requestReportVo = true && that.isSetRequestReportVo();
      if (this_present_requestReportVo || that_present_requestReportVo) {
        if (!(this_present_requestReportVo && that_present_requestReportVo))
          return false;
        if (!this.requestReportVo.equals(that.requestReportVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_requestReportVo = true && (isSetRequestReportVo());
      list.add(present_requestReportVo);
      if (present_requestReportVo)
        list.add(requestReportVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(findGoodsBalancePagination_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetRequestReportVo()).compareTo(other.isSetRequestReportVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRequestReportVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestReportVo, other.requestReportVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findGoodsBalancePagination_args(");
      boolean first = true;

      sb.append("requestReportVo:");
      if (this.requestReportVo == null) {
        sb.append("null");
      } else {
        sb.append(this.requestReportVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (requestReportVo != null) {
        requestReportVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findGoodsBalancePagination_argsStandardSchemeFactory implements SchemeFactory {
      public findGoodsBalancePagination_argsStandardScheme getScheme() {
        return new findGoodsBalancePagination_argsStandardScheme();
      }
    }

    private static class findGoodsBalancePagination_argsStandardScheme extends StandardScheme<findGoodsBalancePagination_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findGoodsBalancePagination_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // REQUEST_REPORT_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.requestReportVo = new TRequestReportDetailVo();
                struct.requestReportVo.read(iprot);
                struct.setRequestReportVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findGoodsBalancePagination_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.requestReportVo != null) {
          oprot.writeFieldBegin(REQUEST_REPORT_VO_FIELD_DESC);
          struct.requestReportVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findGoodsBalancePagination_argsTupleSchemeFactory implements SchemeFactory {
      public findGoodsBalancePagination_argsTupleScheme getScheme() {
        return new findGoodsBalancePagination_argsTupleScheme();
      }
    }

    private static class findGoodsBalancePagination_argsTupleScheme extends TupleScheme<findGoodsBalancePagination_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findGoodsBalancePagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetRequestReportVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetRequestReportVo()) {
          struct.requestReportVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findGoodsBalancePagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.requestReportVo = new TRequestReportDetailVo();
          struct.requestReportVo.read(iprot);
          struct.setRequestReportVoIsSet(true);
        }
      }
    }

  }

  public static class findGoodsBalancePagination_result implements org.apache.thrift.TBase<findGoodsBalancePagination_result, findGoodsBalancePagination_result._Fields>, java.io.Serializable, Cloneable, Comparable<findGoodsBalancePagination_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findGoodsBalancePagination_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findGoodsBalancePagination_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findGoodsBalancePagination_resultTupleSchemeFactory());
    }

    public TReportDetailPaginationVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TReportDetailPaginationVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findGoodsBalancePagination_result.class, metaDataMap);
    }

    public findGoodsBalancePagination_result() {
    }

    public findGoodsBalancePagination_result(
      TReportDetailPaginationVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findGoodsBalancePagination_result(findGoodsBalancePagination_result other) {
      if (other.isSetSuccess()) {
        this.success = new TReportDetailPaginationVo(other.success);
      }
    }

    public findGoodsBalancePagination_result deepCopy() {
      return new findGoodsBalancePagination_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public TReportDetailPaginationVo getSuccess() {
      return this.success;
    }

    public findGoodsBalancePagination_result setSuccess(TReportDetailPaginationVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((TReportDetailPaginationVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findGoodsBalancePagination_result)
        return this.equals((findGoodsBalancePagination_result)that);
      return false;
    }

    public boolean equals(findGoodsBalancePagination_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(findGoodsBalancePagination_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findGoodsBalancePagination_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findGoodsBalancePagination_resultStandardSchemeFactory implements SchemeFactory {
      public findGoodsBalancePagination_resultStandardScheme getScheme() {
        return new findGoodsBalancePagination_resultStandardScheme();
      }
    }

    private static class findGoodsBalancePagination_resultStandardScheme extends StandardScheme<findGoodsBalancePagination_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findGoodsBalancePagination_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new TReportDetailPaginationVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findGoodsBalancePagination_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findGoodsBalancePagination_resultTupleSchemeFactory implements SchemeFactory {
      public findGoodsBalancePagination_resultTupleScheme getScheme() {
        return new findGoodsBalancePagination_resultTupleScheme();
      }
    }

    private static class findGoodsBalancePagination_resultTupleScheme extends TupleScheme<findGoodsBalancePagination_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findGoodsBalancePagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findGoodsBalancePagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new TReportDetailPaginationVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class findGoodsReceiptPagination_args implements org.apache.thrift.TBase<findGoodsReceiptPagination_args, findGoodsReceiptPagination_args._Fields>, java.io.Serializable, Cloneable, Comparable<findGoodsReceiptPagination_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findGoodsReceiptPagination_args");

    private static final org.apache.thrift.protocol.TField REQUEST_REPORT_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("requestReportVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findGoodsReceiptPagination_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findGoodsReceiptPagination_argsTupleSchemeFactory());
    }

    public TRequestReportDetailVo requestReportVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      REQUEST_REPORT_VO((short)1, "requestReportVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // REQUEST_REPORT_VO
            return REQUEST_REPORT_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.REQUEST_REPORT_VO, new org.apache.thrift.meta_data.FieldMetaData("requestReportVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TRequestReportDetailVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findGoodsReceiptPagination_args.class, metaDataMap);
    }

    public findGoodsReceiptPagination_args() {
    }

    public findGoodsReceiptPagination_args(
      TRequestReportDetailVo requestReportVo)
    {
      this();
      this.requestReportVo = requestReportVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findGoodsReceiptPagination_args(findGoodsReceiptPagination_args other) {
      if (other.isSetRequestReportVo()) {
        this.requestReportVo = new TRequestReportDetailVo(other.requestReportVo);
      }
    }

    public findGoodsReceiptPagination_args deepCopy() {
      return new findGoodsReceiptPagination_args(this);
    }

    @Override
    public void clear() {
      this.requestReportVo = null;
    }

    public TRequestReportDetailVo getRequestReportVo() {
      return this.requestReportVo;
    }

    public findGoodsReceiptPagination_args setRequestReportVo(TRequestReportDetailVo requestReportVo) {
      this.requestReportVo = requestReportVo;
      return this;
    }

    public void unsetRequestReportVo() {
      this.requestReportVo = null;
    }

    /** Returns true if field requestReportVo is set (has been assigned a value) and false otherwise */
    public boolean isSetRequestReportVo() {
      return this.requestReportVo != null;
    }

    public void setRequestReportVoIsSet(boolean value) {
      if (!value) {
        this.requestReportVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case REQUEST_REPORT_VO:
        if (value == null) {
          unsetRequestReportVo();
        } else {
          setRequestReportVo((TRequestReportDetailVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case REQUEST_REPORT_VO:
        return getRequestReportVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case REQUEST_REPORT_VO:
        return isSetRequestReportVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findGoodsReceiptPagination_args)
        return this.equals((findGoodsReceiptPagination_args)that);
      return false;
    }

    public boolean equals(findGoodsReceiptPagination_args that) {
      if (that == null)
        return false;

      boolean this_present_requestReportVo = true && this.isSetRequestReportVo();
      boolean that_present_requestReportVo = true && that.isSetRequestReportVo();
      if (this_present_requestReportVo || that_present_requestReportVo) {
        if (!(this_present_requestReportVo && that_present_requestReportVo))
          return false;
        if (!this.requestReportVo.equals(that.requestReportVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_requestReportVo = true && (isSetRequestReportVo());
      list.add(present_requestReportVo);
      if (present_requestReportVo)
        list.add(requestReportVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(findGoodsReceiptPagination_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetRequestReportVo()).compareTo(other.isSetRequestReportVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRequestReportVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestReportVo, other.requestReportVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findGoodsReceiptPagination_args(");
      boolean first = true;

      sb.append("requestReportVo:");
      if (this.requestReportVo == null) {
        sb.append("null");
      } else {
        sb.append(this.requestReportVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (requestReportVo != null) {
        requestReportVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findGoodsReceiptPagination_argsStandardSchemeFactory implements SchemeFactory {
      public findGoodsReceiptPagination_argsStandardScheme getScheme() {
        return new findGoodsReceiptPagination_argsStandardScheme();
      }
    }

    private static class findGoodsReceiptPagination_argsStandardScheme extends StandardScheme<findGoodsReceiptPagination_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findGoodsReceiptPagination_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // REQUEST_REPORT_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.requestReportVo = new TRequestReportDetailVo();
                struct.requestReportVo.read(iprot);
                struct.setRequestReportVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findGoodsReceiptPagination_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.requestReportVo != null) {
          oprot.writeFieldBegin(REQUEST_REPORT_VO_FIELD_DESC);
          struct.requestReportVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findGoodsReceiptPagination_argsTupleSchemeFactory implements SchemeFactory {
      public findGoodsReceiptPagination_argsTupleScheme getScheme() {
        return new findGoodsReceiptPagination_argsTupleScheme();
      }
    }

    private static class findGoodsReceiptPagination_argsTupleScheme extends TupleScheme<findGoodsReceiptPagination_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findGoodsReceiptPagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetRequestReportVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetRequestReportVo()) {
          struct.requestReportVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findGoodsReceiptPagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.requestReportVo = new TRequestReportDetailVo();
          struct.requestReportVo.read(iprot);
          struct.setRequestReportVoIsSet(true);
        }
      }
    }

  }

  public static class findGoodsReceiptPagination_result implements org.apache.thrift.TBase<findGoodsReceiptPagination_result, findGoodsReceiptPagination_result._Fields>, java.io.Serializable, Cloneable, Comparable<findGoodsReceiptPagination_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findGoodsReceiptPagination_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findGoodsReceiptPagination_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findGoodsReceiptPagination_resultTupleSchemeFactory());
    }

    public TReportDetailPaginationVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TReportDetailPaginationVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findGoodsReceiptPagination_result.class, metaDataMap);
    }

    public findGoodsReceiptPagination_result() {
    }

    public findGoodsReceiptPagination_result(
      TReportDetailPaginationVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findGoodsReceiptPagination_result(findGoodsReceiptPagination_result other) {
      if (other.isSetSuccess()) {
        this.success = new TReportDetailPaginationVo(other.success);
      }
    }

    public findGoodsReceiptPagination_result deepCopy() {
      return new findGoodsReceiptPagination_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public TReportDetailPaginationVo getSuccess() {
      return this.success;
    }

    public findGoodsReceiptPagination_result setSuccess(TReportDetailPaginationVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((TReportDetailPaginationVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findGoodsReceiptPagination_result)
        return this.equals((findGoodsReceiptPagination_result)that);
      return false;
    }

    public boolean equals(findGoodsReceiptPagination_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(findGoodsReceiptPagination_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findGoodsReceiptPagination_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findGoodsReceiptPagination_resultStandardSchemeFactory implements SchemeFactory {
      public findGoodsReceiptPagination_resultStandardScheme getScheme() {
        return new findGoodsReceiptPagination_resultStandardScheme();
      }
    }

    private static class findGoodsReceiptPagination_resultStandardScheme extends StandardScheme<findGoodsReceiptPagination_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findGoodsReceiptPagination_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new TReportDetailPaginationVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findGoodsReceiptPagination_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findGoodsReceiptPagination_resultTupleSchemeFactory implements SchemeFactory {
      public findGoodsReceiptPagination_resultTupleScheme getScheme() {
        return new findGoodsReceiptPagination_resultTupleScheme();
      }
    }

    private static class findGoodsReceiptPagination_resultTupleScheme extends TupleScheme<findGoodsReceiptPagination_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findGoodsReceiptPagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findGoodsReceiptPagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new TReportDetailPaginationVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class findGoodsRefundPagination_args implements org.apache.thrift.TBase<findGoodsRefundPagination_args, findGoodsRefundPagination_args._Fields>, java.io.Serializable, Cloneable, Comparable<findGoodsRefundPagination_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findGoodsRefundPagination_args");

    private static final org.apache.thrift.protocol.TField REQUEST_REPORT_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("requestReportVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findGoodsRefundPagination_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findGoodsRefundPagination_argsTupleSchemeFactory());
    }

    public TRequestReportDetailVo requestReportVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      REQUEST_REPORT_VO((short)1, "requestReportVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // REQUEST_REPORT_VO
            return REQUEST_REPORT_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.REQUEST_REPORT_VO, new org.apache.thrift.meta_data.FieldMetaData("requestReportVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TRequestReportDetailVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findGoodsRefundPagination_args.class, metaDataMap);
    }

    public findGoodsRefundPagination_args() {
    }

    public findGoodsRefundPagination_args(
      TRequestReportDetailVo requestReportVo)
    {
      this();
      this.requestReportVo = requestReportVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findGoodsRefundPagination_args(findGoodsRefundPagination_args other) {
      if (other.isSetRequestReportVo()) {
        this.requestReportVo = new TRequestReportDetailVo(other.requestReportVo);
      }
    }

    public findGoodsRefundPagination_args deepCopy() {
      return new findGoodsRefundPagination_args(this);
    }

    @Override
    public void clear() {
      this.requestReportVo = null;
    }

    public TRequestReportDetailVo getRequestReportVo() {
      return this.requestReportVo;
    }

    public findGoodsRefundPagination_args setRequestReportVo(TRequestReportDetailVo requestReportVo) {
      this.requestReportVo = requestReportVo;
      return this;
    }

    public void unsetRequestReportVo() {
      this.requestReportVo = null;
    }

    /** Returns true if field requestReportVo is set (has been assigned a value) and false otherwise */
    public boolean isSetRequestReportVo() {
      return this.requestReportVo != null;
    }

    public void setRequestReportVoIsSet(boolean value) {
      if (!value) {
        this.requestReportVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case REQUEST_REPORT_VO:
        if (value == null) {
          unsetRequestReportVo();
        } else {
          setRequestReportVo((TRequestReportDetailVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case REQUEST_REPORT_VO:
        return getRequestReportVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case REQUEST_REPORT_VO:
        return isSetRequestReportVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findGoodsRefundPagination_args)
        return this.equals((findGoodsRefundPagination_args)that);
      return false;
    }

    public boolean equals(findGoodsRefundPagination_args that) {
      if (that == null)
        return false;

      boolean this_present_requestReportVo = true && this.isSetRequestReportVo();
      boolean that_present_requestReportVo = true && that.isSetRequestReportVo();
      if (this_present_requestReportVo || that_present_requestReportVo) {
        if (!(this_present_requestReportVo && that_present_requestReportVo))
          return false;
        if (!this.requestReportVo.equals(that.requestReportVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_requestReportVo = true && (isSetRequestReportVo());
      list.add(present_requestReportVo);
      if (present_requestReportVo)
        list.add(requestReportVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(findGoodsRefundPagination_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetRequestReportVo()).compareTo(other.isSetRequestReportVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRequestReportVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestReportVo, other.requestReportVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findGoodsRefundPagination_args(");
      boolean first = true;

      sb.append("requestReportVo:");
      if (this.requestReportVo == null) {
        sb.append("null");
      } else {
        sb.append(this.requestReportVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (requestReportVo != null) {
        requestReportVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findGoodsRefundPagination_argsStandardSchemeFactory implements SchemeFactory {
      public findGoodsRefundPagination_argsStandardScheme getScheme() {
        return new findGoodsRefundPagination_argsStandardScheme();
      }
    }

    private static class findGoodsRefundPagination_argsStandardScheme extends StandardScheme<findGoodsRefundPagination_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findGoodsRefundPagination_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // REQUEST_REPORT_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.requestReportVo = new TRequestReportDetailVo();
                struct.requestReportVo.read(iprot);
                struct.setRequestReportVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findGoodsRefundPagination_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.requestReportVo != null) {
          oprot.writeFieldBegin(REQUEST_REPORT_VO_FIELD_DESC);
          struct.requestReportVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findGoodsRefundPagination_argsTupleSchemeFactory implements SchemeFactory {
      public findGoodsRefundPagination_argsTupleScheme getScheme() {
        return new findGoodsRefundPagination_argsTupleScheme();
      }
    }

    private static class findGoodsRefundPagination_argsTupleScheme extends TupleScheme<findGoodsRefundPagination_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findGoodsRefundPagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetRequestReportVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetRequestReportVo()) {
          struct.requestReportVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findGoodsRefundPagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.requestReportVo = new TRequestReportDetailVo();
          struct.requestReportVo.read(iprot);
          struct.setRequestReportVoIsSet(true);
        }
      }
    }

  }

  public static class findGoodsRefundPagination_result implements org.apache.thrift.TBase<findGoodsRefundPagination_result, findGoodsRefundPagination_result._Fields>, java.io.Serializable, Cloneable, Comparable<findGoodsRefundPagination_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findGoodsRefundPagination_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findGoodsRefundPagination_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findGoodsRefundPagination_resultTupleSchemeFactory());
    }

    public TReportDetailPaginationVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TReportDetailPaginationVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findGoodsRefundPagination_result.class, metaDataMap);
    }

    public findGoodsRefundPagination_result() {
    }

    public findGoodsRefundPagination_result(
      TReportDetailPaginationVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findGoodsRefundPagination_result(findGoodsRefundPagination_result other) {
      if (other.isSetSuccess()) {
        this.success = new TReportDetailPaginationVo(other.success);
      }
    }

    public findGoodsRefundPagination_result deepCopy() {
      return new findGoodsRefundPagination_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public TReportDetailPaginationVo getSuccess() {
      return this.success;
    }

    public findGoodsRefundPagination_result setSuccess(TReportDetailPaginationVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((TReportDetailPaginationVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findGoodsRefundPagination_result)
        return this.equals((findGoodsRefundPagination_result)that);
      return false;
    }

    public boolean equals(findGoodsRefundPagination_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(findGoodsRefundPagination_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findGoodsRefundPagination_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findGoodsRefundPagination_resultStandardSchemeFactory implements SchemeFactory {
      public findGoodsRefundPagination_resultStandardScheme getScheme() {
        return new findGoodsRefundPagination_resultStandardScheme();
      }
    }

    private static class findGoodsRefundPagination_resultStandardScheme extends StandardScheme<findGoodsRefundPagination_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findGoodsRefundPagination_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new TReportDetailPaginationVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findGoodsRefundPagination_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findGoodsRefundPagination_resultTupleSchemeFactory implements SchemeFactory {
      public findGoodsRefundPagination_resultTupleScheme getScheme() {
        return new findGoodsRefundPagination_resultTupleScheme();
      }
    }

    private static class findGoodsRefundPagination_resultTupleScheme extends TupleScheme<findGoodsRefundPagination_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findGoodsRefundPagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findGoodsRefundPagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new TReportDetailPaginationVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class findFundsBalancePagination_args implements org.apache.thrift.TBase<findFundsBalancePagination_args, findFundsBalancePagination_args._Fields>, java.io.Serializable, Cloneable, Comparable<findFundsBalancePagination_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findFundsBalancePagination_args");

    private static final org.apache.thrift.protocol.TField REQUEST_REPORT_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("requestReportVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findFundsBalancePagination_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findFundsBalancePagination_argsTupleSchemeFactory());
    }

    public TRequestReportDetailVo requestReportVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      REQUEST_REPORT_VO((short)1, "requestReportVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // REQUEST_REPORT_VO
            return REQUEST_REPORT_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.REQUEST_REPORT_VO, new org.apache.thrift.meta_data.FieldMetaData("requestReportVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TRequestReportDetailVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findFundsBalancePagination_args.class, metaDataMap);
    }

    public findFundsBalancePagination_args() {
    }

    public findFundsBalancePagination_args(
      TRequestReportDetailVo requestReportVo)
    {
      this();
      this.requestReportVo = requestReportVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findFundsBalancePagination_args(findFundsBalancePagination_args other) {
      if (other.isSetRequestReportVo()) {
        this.requestReportVo = new TRequestReportDetailVo(other.requestReportVo);
      }
    }

    public findFundsBalancePagination_args deepCopy() {
      return new findFundsBalancePagination_args(this);
    }

    @Override
    public void clear() {
      this.requestReportVo = null;
    }

    public TRequestReportDetailVo getRequestReportVo() {
      return this.requestReportVo;
    }

    public findFundsBalancePagination_args setRequestReportVo(TRequestReportDetailVo requestReportVo) {
      this.requestReportVo = requestReportVo;
      return this;
    }

    public void unsetRequestReportVo() {
      this.requestReportVo = null;
    }

    /** Returns true if field requestReportVo is set (has been assigned a value) and false otherwise */
    public boolean isSetRequestReportVo() {
      return this.requestReportVo != null;
    }

    public void setRequestReportVoIsSet(boolean value) {
      if (!value) {
        this.requestReportVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case REQUEST_REPORT_VO:
        if (value == null) {
          unsetRequestReportVo();
        } else {
          setRequestReportVo((TRequestReportDetailVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case REQUEST_REPORT_VO:
        return getRequestReportVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case REQUEST_REPORT_VO:
        return isSetRequestReportVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findFundsBalancePagination_args)
        return this.equals((findFundsBalancePagination_args)that);
      return false;
    }

    public boolean equals(findFundsBalancePagination_args that) {
      if (that == null)
        return false;

      boolean this_present_requestReportVo = true && this.isSetRequestReportVo();
      boolean that_present_requestReportVo = true && that.isSetRequestReportVo();
      if (this_present_requestReportVo || that_present_requestReportVo) {
        if (!(this_present_requestReportVo && that_present_requestReportVo))
          return false;
        if (!this.requestReportVo.equals(that.requestReportVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_requestReportVo = true && (isSetRequestReportVo());
      list.add(present_requestReportVo);
      if (present_requestReportVo)
        list.add(requestReportVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(findFundsBalancePagination_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetRequestReportVo()).compareTo(other.isSetRequestReportVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRequestReportVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestReportVo, other.requestReportVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findFundsBalancePagination_args(");
      boolean first = true;

      sb.append("requestReportVo:");
      if (this.requestReportVo == null) {
        sb.append("null");
      } else {
        sb.append(this.requestReportVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (requestReportVo != null) {
        requestReportVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findFundsBalancePagination_argsStandardSchemeFactory implements SchemeFactory {
      public findFundsBalancePagination_argsStandardScheme getScheme() {
        return new findFundsBalancePagination_argsStandardScheme();
      }
    }

    private static class findFundsBalancePagination_argsStandardScheme extends StandardScheme<findFundsBalancePagination_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findFundsBalancePagination_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // REQUEST_REPORT_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.requestReportVo = new TRequestReportDetailVo();
                struct.requestReportVo.read(iprot);
                struct.setRequestReportVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findFundsBalancePagination_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.requestReportVo != null) {
          oprot.writeFieldBegin(REQUEST_REPORT_VO_FIELD_DESC);
          struct.requestReportVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findFundsBalancePagination_argsTupleSchemeFactory implements SchemeFactory {
      public findFundsBalancePagination_argsTupleScheme getScheme() {
        return new findFundsBalancePagination_argsTupleScheme();
      }
    }

    private static class findFundsBalancePagination_argsTupleScheme extends TupleScheme<findFundsBalancePagination_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findFundsBalancePagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetRequestReportVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetRequestReportVo()) {
          struct.requestReportVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findFundsBalancePagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.requestReportVo = new TRequestReportDetailVo();
          struct.requestReportVo.read(iprot);
          struct.setRequestReportVoIsSet(true);
        }
      }
    }

  }

  public static class findFundsBalancePagination_result implements org.apache.thrift.TBase<findFundsBalancePagination_result, findFundsBalancePagination_result._Fields>, java.io.Serializable, Cloneable, Comparable<findFundsBalancePagination_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findFundsBalancePagination_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findFundsBalancePagination_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findFundsBalancePagination_resultTupleSchemeFactory());
    }

    public TReportDetailPaginationVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TReportDetailPaginationVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findFundsBalancePagination_result.class, metaDataMap);
    }

    public findFundsBalancePagination_result() {
    }

    public findFundsBalancePagination_result(
      TReportDetailPaginationVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findFundsBalancePagination_result(findFundsBalancePagination_result other) {
      if (other.isSetSuccess()) {
        this.success = new TReportDetailPaginationVo(other.success);
      }
    }

    public findFundsBalancePagination_result deepCopy() {
      return new findFundsBalancePagination_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public TReportDetailPaginationVo getSuccess() {
      return this.success;
    }

    public findFundsBalancePagination_result setSuccess(TReportDetailPaginationVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((TReportDetailPaginationVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findFundsBalancePagination_result)
        return this.equals((findFundsBalancePagination_result)that);
      return false;
    }

    public boolean equals(findFundsBalancePagination_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(findFundsBalancePagination_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findFundsBalancePagination_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findFundsBalancePagination_resultStandardSchemeFactory implements SchemeFactory {
      public findFundsBalancePagination_resultStandardScheme getScheme() {
        return new findFundsBalancePagination_resultStandardScheme();
      }
    }

    private static class findFundsBalancePagination_resultStandardScheme extends StandardScheme<findFundsBalancePagination_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findFundsBalancePagination_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new TReportDetailPaginationVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findFundsBalancePagination_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findFundsBalancePagination_resultTupleSchemeFactory implements SchemeFactory {
      public findFundsBalancePagination_resultTupleScheme getScheme() {
        return new findFundsBalancePagination_resultTupleScheme();
      }
    }

    private static class findFundsBalancePagination_resultTupleScheme extends TupleScheme<findFundsBalancePagination_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findFundsBalancePagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findFundsBalancePagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new TReportDetailPaginationVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class findFundsMarkupPagination_args implements org.apache.thrift.TBase<findFundsMarkupPagination_args, findFundsMarkupPagination_args._Fields>, java.io.Serializable, Cloneable, Comparable<findFundsMarkupPagination_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findFundsMarkupPagination_args");

    private static final org.apache.thrift.protocol.TField REQUEST_REPORT_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("requestReportVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findFundsMarkupPagination_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findFundsMarkupPagination_argsTupleSchemeFactory());
    }

    public TRequestReportDetailVo requestReportVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      REQUEST_REPORT_VO((short)1, "requestReportVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // REQUEST_REPORT_VO
            return REQUEST_REPORT_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.REQUEST_REPORT_VO, new org.apache.thrift.meta_data.FieldMetaData("requestReportVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TRequestReportDetailVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findFundsMarkupPagination_args.class, metaDataMap);
    }

    public findFundsMarkupPagination_args() {
    }

    public findFundsMarkupPagination_args(
      TRequestReportDetailVo requestReportVo)
    {
      this();
      this.requestReportVo = requestReportVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findFundsMarkupPagination_args(findFundsMarkupPagination_args other) {
      if (other.isSetRequestReportVo()) {
        this.requestReportVo = new TRequestReportDetailVo(other.requestReportVo);
      }
    }

    public findFundsMarkupPagination_args deepCopy() {
      return new findFundsMarkupPagination_args(this);
    }

    @Override
    public void clear() {
      this.requestReportVo = null;
    }

    public TRequestReportDetailVo getRequestReportVo() {
      return this.requestReportVo;
    }

    public findFundsMarkupPagination_args setRequestReportVo(TRequestReportDetailVo requestReportVo) {
      this.requestReportVo = requestReportVo;
      return this;
    }

    public void unsetRequestReportVo() {
      this.requestReportVo = null;
    }

    /** Returns true if field requestReportVo is set (has been assigned a value) and false otherwise */
    public boolean isSetRequestReportVo() {
      return this.requestReportVo != null;
    }

    public void setRequestReportVoIsSet(boolean value) {
      if (!value) {
        this.requestReportVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case REQUEST_REPORT_VO:
        if (value == null) {
          unsetRequestReportVo();
        } else {
          setRequestReportVo((TRequestReportDetailVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case REQUEST_REPORT_VO:
        return getRequestReportVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case REQUEST_REPORT_VO:
        return isSetRequestReportVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findFundsMarkupPagination_args)
        return this.equals((findFundsMarkupPagination_args)that);
      return false;
    }

    public boolean equals(findFundsMarkupPagination_args that) {
      if (that == null)
        return false;

      boolean this_present_requestReportVo = true && this.isSetRequestReportVo();
      boolean that_present_requestReportVo = true && that.isSetRequestReportVo();
      if (this_present_requestReportVo || that_present_requestReportVo) {
        if (!(this_present_requestReportVo && that_present_requestReportVo))
          return false;
        if (!this.requestReportVo.equals(that.requestReportVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_requestReportVo = true && (isSetRequestReportVo());
      list.add(present_requestReportVo);
      if (present_requestReportVo)
        list.add(requestReportVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(findFundsMarkupPagination_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetRequestReportVo()).compareTo(other.isSetRequestReportVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRequestReportVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestReportVo, other.requestReportVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findFundsMarkupPagination_args(");
      boolean first = true;

      sb.append("requestReportVo:");
      if (this.requestReportVo == null) {
        sb.append("null");
      } else {
        sb.append(this.requestReportVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (requestReportVo != null) {
        requestReportVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findFundsMarkupPagination_argsStandardSchemeFactory implements SchemeFactory {
      public findFundsMarkupPagination_argsStandardScheme getScheme() {
        return new findFundsMarkupPagination_argsStandardScheme();
      }
    }

    private static class findFundsMarkupPagination_argsStandardScheme extends StandardScheme<findFundsMarkupPagination_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findFundsMarkupPagination_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // REQUEST_REPORT_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.requestReportVo = new TRequestReportDetailVo();
                struct.requestReportVo.read(iprot);
                struct.setRequestReportVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findFundsMarkupPagination_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.requestReportVo != null) {
          oprot.writeFieldBegin(REQUEST_REPORT_VO_FIELD_DESC);
          struct.requestReportVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findFundsMarkupPagination_argsTupleSchemeFactory implements SchemeFactory {
      public findFundsMarkupPagination_argsTupleScheme getScheme() {
        return new findFundsMarkupPagination_argsTupleScheme();
      }
    }

    private static class findFundsMarkupPagination_argsTupleScheme extends TupleScheme<findFundsMarkupPagination_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findFundsMarkupPagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetRequestReportVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetRequestReportVo()) {
          struct.requestReportVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findFundsMarkupPagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.requestReportVo = new TRequestReportDetailVo();
          struct.requestReportVo.read(iprot);
          struct.setRequestReportVoIsSet(true);
        }
      }
    }

  }

  public static class findFundsMarkupPagination_result implements org.apache.thrift.TBase<findFundsMarkupPagination_result, findFundsMarkupPagination_result._Fields>, java.io.Serializable, Cloneable, Comparable<findFundsMarkupPagination_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findFundsMarkupPagination_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findFundsMarkupPagination_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findFundsMarkupPagination_resultTupleSchemeFactory());
    }

    public TReportDetailPaginationVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TReportDetailPaginationVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findFundsMarkupPagination_result.class, metaDataMap);
    }

    public findFundsMarkupPagination_result() {
    }

    public findFundsMarkupPagination_result(
      TReportDetailPaginationVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findFundsMarkupPagination_result(findFundsMarkupPagination_result other) {
      if (other.isSetSuccess()) {
        this.success = new TReportDetailPaginationVo(other.success);
      }
    }

    public findFundsMarkupPagination_result deepCopy() {
      return new findFundsMarkupPagination_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public TReportDetailPaginationVo getSuccess() {
      return this.success;
    }

    public findFundsMarkupPagination_result setSuccess(TReportDetailPaginationVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((TReportDetailPaginationVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findFundsMarkupPagination_result)
        return this.equals((findFundsMarkupPagination_result)that);
      return false;
    }

    public boolean equals(findFundsMarkupPagination_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(findFundsMarkupPagination_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findFundsMarkupPagination_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findFundsMarkupPagination_resultStandardSchemeFactory implements SchemeFactory {
      public findFundsMarkupPagination_resultStandardScheme getScheme() {
        return new findFundsMarkupPagination_resultStandardScheme();
      }
    }

    private static class findFundsMarkupPagination_resultStandardScheme extends StandardScheme<findFundsMarkupPagination_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findFundsMarkupPagination_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new TReportDetailPaginationVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findFundsMarkupPagination_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findFundsMarkupPagination_resultTupleSchemeFactory implements SchemeFactory {
      public findFundsMarkupPagination_resultTupleScheme getScheme() {
        return new findFundsMarkupPagination_resultTupleScheme();
      }
    }

    private static class findFundsMarkupPagination_resultTupleScheme extends TupleScheme<findFundsMarkupPagination_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findFundsMarkupPagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findFundsMarkupPagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new TReportDetailPaginationVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class findFundsReceiptPagination_args implements org.apache.thrift.TBase<findFundsReceiptPagination_args, findFundsReceiptPagination_args._Fields>, java.io.Serializable, Cloneable, Comparable<findFundsReceiptPagination_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findFundsReceiptPagination_args");

    private static final org.apache.thrift.protocol.TField REQUEST_REPORT_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("requestReportVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findFundsReceiptPagination_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findFundsReceiptPagination_argsTupleSchemeFactory());
    }

    public TRequestReportDetailVo requestReportVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      REQUEST_REPORT_VO((short)1, "requestReportVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // REQUEST_REPORT_VO
            return REQUEST_REPORT_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.REQUEST_REPORT_VO, new org.apache.thrift.meta_data.FieldMetaData("requestReportVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TRequestReportDetailVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findFundsReceiptPagination_args.class, metaDataMap);
    }

    public findFundsReceiptPagination_args() {
    }

    public findFundsReceiptPagination_args(
      TRequestReportDetailVo requestReportVo)
    {
      this();
      this.requestReportVo = requestReportVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findFundsReceiptPagination_args(findFundsReceiptPagination_args other) {
      if (other.isSetRequestReportVo()) {
        this.requestReportVo = new TRequestReportDetailVo(other.requestReportVo);
      }
    }

    public findFundsReceiptPagination_args deepCopy() {
      return new findFundsReceiptPagination_args(this);
    }

    @Override
    public void clear() {
      this.requestReportVo = null;
    }

    public TRequestReportDetailVo getRequestReportVo() {
      return this.requestReportVo;
    }

    public findFundsReceiptPagination_args setRequestReportVo(TRequestReportDetailVo requestReportVo) {
      this.requestReportVo = requestReportVo;
      return this;
    }

    public void unsetRequestReportVo() {
      this.requestReportVo = null;
    }

    /** Returns true if field requestReportVo is set (has been assigned a value) and false otherwise */
    public boolean isSetRequestReportVo() {
      return this.requestReportVo != null;
    }

    public void setRequestReportVoIsSet(boolean value) {
      if (!value) {
        this.requestReportVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case REQUEST_REPORT_VO:
        if (value == null) {
          unsetRequestReportVo();
        } else {
          setRequestReportVo((TRequestReportDetailVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case REQUEST_REPORT_VO:
        return getRequestReportVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case REQUEST_REPORT_VO:
        return isSetRequestReportVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findFundsReceiptPagination_args)
        return this.equals((findFundsReceiptPagination_args)that);
      return false;
    }

    public boolean equals(findFundsReceiptPagination_args that) {
      if (that == null)
        return false;

      boolean this_present_requestReportVo = true && this.isSetRequestReportVo();
      boolean that_present_requestReportVo = true && that.isSetRequestReportVo();
      if (this_present_requestReportVo || that_present_requestReportVo) {
        if (!(this_present_requestReportVo && that_present_requestReportVo))
          return false;
        if (!this.requestReportVo.equals(that.requestReportVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_requestReportVo = true && (isSetRequestReportVo());
      list.add(present_requestReportVo);
      if (present_requestReportVo)
        list.add(requestReportVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(findFundsReceiptPagination_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetRequestReportVo()).compareTo(other.isSetRequestReportVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRequestReportVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestReportVo, other.requestReportVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findFundsReceiptPagination_args(");
      boolean first = true;

      sb.append("requestReportVo:");
      if (this.requestReportVo == null) {
        sb.append("null");
      } else {
        sb.append(this.requestReportVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (requestReportVo != null) {
        requestReportVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findFundsReceiptPagination_argsStandardSchemeFactory implements SchemeFactory {
      public findFundsReceiptPagination_argsStandardScheme getScheme() {
        return new findFundsReceiptPagination_argsStandardScheme();
      }
    }

    private static class findFundsReceiptPagination_argsStandardScheme extends StandardScheme<findFundsReceiptPagination_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findFundsReceiptPagination_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // REQUEST_REPORT_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.requestReportVo = new TRequestReportDetailVo();
                struct.requestReportVo.read(iprot);
                struct.setRequestReportVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findFundsReceiptPagination_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.requestReportVo != null) {
          oprot.writeFieldBegin(REQUEST_REPORT_VO_FIELD_DESC);
          struct.requestReportVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findFundsReceiptPagination_argsTupleSchemeFactory implements SchemeFactory {
      public findFundsReceiptPagination_argsTupleScheme getScheme() {
        return new findFundsReceiptPagination_argsTupleScheme();
      }
    }

    private static class findFundsReceiptPagination_argsTupleScheme extends TupleScheme<findFundsReceiptPagination_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findFundsReceiptPagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetRequestReportVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetRequestReportVo()) {
          struct.requestReportVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findFundsReceiptPagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.requestReportVo = new TRequestReportDetailVo();
          struct.requestReportVo.read(iprot);
          struct.setRequestReportVoIsSet(true);
        }
      }
    }

  }

  public static class findFundsReceiptPagination_result implements org.apache.thrift.TBase<findFundsReceiptPagination_result, findFundsReceiptPagination_result._Fields>, java.io.Serializable, Cloneable, Comparable<findFundsReceiptPagination_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findFundsReceiptPagination_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findFundsReceiptPagination_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findFundsReceiptPagination_resultTupleSchemeFactory());
    }

    public TReportDetailPaginationVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TReportDetailPaginationVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findFundsReceiptPagination_result.class, metaDataMap);
    }

    public findFundsReceiptPagination_result() {
    }

    public findFundsReceiptPagination_result(
      TReportDetailPaginationVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findFundsReceiptPagination_result(findFundsReceiptPagination_result other) {
      if (other.isSetSuccess()) {
        this.success = new TReportDetailPaginationVo(other.success);
      }
    }

    public findFundsReceiptPagination_result deepCopy() {
      return new findFundsReceiptPagination_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public TReportDetailPaginationVo getSuccess() {
      return this.success;
    }

    public findFundsReceiptPagination_result setSuccess(TReportDetailPaginationVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((TReportDetailPaginationVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findFundsReceiptPagination_result)
        return this.equals((findFundsReceiptPagination_result)that);
      return false;
    }

    public boolean equals(findFundsReceiptPagination_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(findFundsReceiptPagination_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findFundsReceiptPagination_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findFundsReceiptPagination_resultStandardSchemeFactory implements SchemeFactory {
      public findFundsReceiptPagination_resultStandardScheme getScheme() {
        return new findFundsReceiptPagination_resultStandardScheme();
      }
    }

    private static class findFundsReceiptPagination_resultStandardScheme extends StandardScheme<findFundsReceiptPagination_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findFundsReceiptPagination_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new TReportDetailPaginationVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findFundsReceiptPagination_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findFundsReceiptPagination_resultTupleSchemeFactory implements SchemeFactory {
      public findFundsReceiptPagination_resultTupleScheme getScheme() {
        return new findFundsReceiptPagination_resultTupleScheme();
      }
    }

    private static class findFundsReceiptPagination_resultTupleScheme extends TupleScheme<findFundsReceiptPagination_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findFundsReceiptPagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findFundsReceiptPagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new TReportDetailPaginationVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class findFundsSettlePagination_args implements org.apache.thrift.TBase<findFundsSettlePagination_args, findFundsSettlePagination_args._Fields>, java.io.Serializable, Cloneable, Comparable<findFundsSettlePagination_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findFundsSettlePagination_args");

    private static final org.apache.thrift.protocol.TField REQUEST_REPORT_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("requestReportVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findFundsSettlePagination_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findFundsSettlePagination_argsTupleSchemeFactory());
    }

    public TRequestReportDetailVo requestReportVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      REQUEST_REPORT_VO((short)1, "requestReportVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // REQUEST_REPORT_VO
            return REQUEST_REPORT_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.REQUEST_REPORT_VO, new org.apache.thrift.meta_data.FieldMetaData("requestReportVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TRequestReportDetailVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findFundsSettlePagination_args.class, metaDataMap);
    }

    public findFundsSettlePagination_args() {
    }

    public findFundsSettlePagination_args(
      TRequestReportDetailVo requestReportVo)
    {
      this();
      this.requestReportVo = requestReportVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findFundsSettlePagination_args(findFundsSettlePagination_args other) {
      if (other.isSetRequestReportVo()) {
        this.requestReportVo = new TRequestReportDetailVo(other.requestReportVo);
      }
    }

    public findFundsSettlePagination_args deepCopy() {
      return new findFundsSettlePagination_args(this);
    }

    @Override
    public void clear() {
      this.requestReportVo = null;
    }

    public TRequestReportDetailVo getRequestReportVo() {
      return this.requestReportVo;
    }

    public findFundsSettlePagination_args setRequestReportVo(TRequestReportDetailVo requestReportVo) {
      this.requestReportVo = requestReportVo;
      return this;
    }

    public void unsetRequestReportVo() {
      this.requestReportVo = null;
    }

    /** Returns true if field requestReportVo is set (has been assigned a value) and false otherwise */
    public boolean isSetRequestReportVo() {
      return this.requestReportVo != null;
    }

    public void setRequestReportVoIsSet(boolean value) {
      if (!value) {
        this.requestReportVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case REQUEST_REPORT_VO:
        if (value == null) {
          unsetRequestReportVo();
        } else {
          setRequestReportVo((TRequestReportDetailVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case REQUEST_REPORT_VO:
        return getRequestReportVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case REQUEST_REPORT_VO:
        return isSetRequestReportVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findFundsSettlePagination_args)
        return this.equals((findFundsSettlePagination_args)that);
      return false;
    }

    public boolean equals(findFundsSettlePagination_args that) {
      if (that == null)
        return false;

      boolean this_present_requestReportVo = true && this.isSetRequestReportVo();
      boolean that_present_requestReportVo = true && that.isSetRequestReportVo();
      if (this_present_requestReportVo || that_present_requestReportVo) {
        if (!(this_present_requestReportVo && that_present_requestReportVo))
          return false;
        if (!this.requestReportVo.equals(that.requestReportVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_requestReportVo = true && (isSetRequestReportVo());
      list.add(present_requestReportVo);
      if (present_requestReportVo)
        list.add(requestReportVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(findFundsSettlePagination_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetRequestReportVo()).compareTo(other.isSetRequestReportVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRequestReportVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestReportVo, other.requestReportVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findFundsSettlePagination_args(");
      boolean first = true;

      sb.append("requestReportVo:");
      if (this.requestReportVo == null) {
        sb.append("null");
      } else {
        sb.append(this.requestReportVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (requestReportVo != null) {
        requestReportVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findFundsSettlePagination_argsStandardSchemeFactory implements SchemeFactory {
      public findFundsSettlePagination_argsStandardScheme getScheme() {
        return new findFundsSettlePagination_argsStandardScheme();
      }
    }

    private static class findFundsSettlePagination_argsStandardScheme extends StandardScheme<findFundsSettlePagination_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findFundsSettlePagination_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // REQUEST_REPORT_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.requestReportVo = new TRequestReportDetailVo();
                struct.requestReportVo.read(iprot);
                struct.setRequestReportVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findFundsSettlePagination_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.requestReportVo != null) {
          oprot.writeFieldBegin(REQUEST_REPORT_VO_FIELD_DESC);
          struct.requestReportVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findFundsSettlePagination_argsTupleSchemeFactory implements SchemeFactory {
      public findFundsSettlePagination_argsTupleScheme getScheme() {
        return new findFundsSettlePagination_argsTupleScheme();
      }
    }

    private static class findFundsSettlePagination_argsTupleScheme extends TupleScheme<findFundsSettlePagination_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findFundsSettlePagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetRequestReportVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetRequestReportVo()) {
          struct.requestReportVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findFundsSettlePagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.requestReportVo = new TRequestReportDetailVo();
          struct.requestReportVo.read(iprot);
          struct.setRequestReportVoIsSet(true);
        }
      }
    }

  }

  public static class findFundsSettlePagination_result implements org.apache.thrift.TBase<findFundsSettlePagination_result, findFundsSettlePagination_result._Fields>, java.io.Serializable, Cloneable, Comparable<findFundsSettlePagination_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findFundsSettlePagination_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findFundsSettlePagination_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findFundsSettlePagination_resultTupleSchemeFactory());
    }

    public TReportDetailPaginationVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TReportDetailPaginationVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findFundsSettlePagination_result.class, metaDataMap);
    }

    public findFundsSettlePagination_result() {
    }

    public findFundsSettlePagination_result(
      TReportDetailPaginationVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findFundsSettlePagination_result(findFundsSettlePagination_result other) {
      if (other.isSetSuccess()) {
        this.success = new TReportDetailPaginationVo(other.success);
      }
    }

    public findFundsSettlePagination_result deepCopy() {
      return new findFundsSettlePagination_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public TReportDetailPaginationVo getSuccess() {
      return this.success;
    }

    public findFundsSettlePagination_result setSuccess(TReportDetailPaginationVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((TReportDetailPaginationVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findFundsSettlePagination_result)
        return this.equals((findFundsSettlePagination_result)that);
      return false;
    }

    public boolean equals(findFundsSettlePagination_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(findFundsSettlePagination_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findFundsSettlePagination_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findFundsSettlePagination_resultStandardSchemeFactory implements SchemeFactory {
      public findFundsSettlePagination_resultStandardScheme getScheme() {
        return new findFundsSettlePagination_resultStandardScheme();
      }
    }

    private static class findFundsSettlePagination_resultStandardScheme extends StandardScheme<findFundsSettlePagination_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findFundsSettlePagination_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new TReportDetailPaginationVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findFundsSettlePagination_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findFundsSettlePagination_resultTupleSchemeFactory implements SchemeFactory {
      public findFundsSettlePagination_resultTupleScheme getScheme() {
        return new findFundsSettlePagination_resultTupleScheme();
      }
    }

    private static class findFundsSettlePagination_resultTupleScheme extends TupleScheme<findFundsSettlePagination_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findFundsSettlePagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findFundsSettlePagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new TReportDetailPaginationVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

  public static class findFundsWriteBackPagination_args implements org.apache.thrift.TBase<findFundsWriteBackPagination_args, findFundsWriteBackPagination_args._Fields>, java.io.Serializable, Cloneable, Comparable<findFundsWriteBackPagination_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findFundsWriteBackPagination_args");

    private static final org.apache.thrift.protocol.TField REQUEST_REPORT_VO_FIELD_DESC = new org.apache.thrift.protocol.TField("requestReportVo", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findFundsWriteBackPagination_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findFundsWriteBackPagination_argsTupleSchemeFactory());
    }

    public TRequestReportDetailVo requestReportVo; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      REQUEST_REPORT_VO((short)1, "requestReportVo");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // REQUEST_REPORT_VO
            return REQUEST_REPORT_VO;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.REQUEST_REPORT_VO, new org.apache.thrift.meta_data.FieldMetaData("requestReportVo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TRequestReportDetailVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findFundsWriteBackPagination_args.class, metaDataMap);
    }

    public findFundsWriteBackPagination_args() {
    }

    public findFundsWriteBackPagination_args(
      TRequestReportDetailVo requestReportVo)
    {
      this();
      this.requestReportVo = requestReportVo;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findFundsWriteBackPagination_args(findFundsWriteBackPagination_args other) {
      if (other.isSetRequestReportVo()) {
        this.requestReportVo = new TRequestReportDetailVo(other.requestReportVo);
      }
    }

    public findFundsWriteBackPagination_args deepCopy() {
      return new findFundsWriteBackPagination_args(this);
    }

    @Override
    public void clear() {
      this.requestReportVo = null;
    }

    public TRequestReportDetailVo getRequestReportVo() {
      return this.requestReportVo;
    }

    public findFundsWriteBackPagination_args setRequestReportVo(TRequestReportDetailVo requestReportVo) {
      this.requestReportVo = requestReportVo;
      return this;
    }

    public void unsetRequestReportVo() {
      this.requestReportVo = null;
    }

    /** Returns true if field requestReportVo is set (has been assigned a value) and false otherwise */
    public boolean isSetRequestReportVo() {
      return this.requestReportVo != null;
    }

    public void setRequestReportVoIsSet(boolean value) {
      if (!value) {
        this.requestReportVo = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case REQUEST_REPORT_VO:
        if (value == null) {
          unsetRequestReportVo();
        } else {
          setRequestReportVo((TRequestReportDetailVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case REQUEST_REPORT_VO:
        return getRequestReportVo();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case REQUEST_REPORT_VO:
        return isSetRequestReportVo();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findFundsWriteBackPagination_args)
        return this.equals((findFundsWriteBackPagination_args)that);
      return false;
    }

    public boolean equals(findFundsWriteBackPagination_args that) {
      if (that == null)
        return false;

      boolean this_present_requestReportVo = true && this.isSetRequestReportVo();
      boolean that_present_requestReportVo = true && that.isSetRequestReportVo();
      if (this_present_requestReportVo || that_present_requestReportVo) {
        if (!(this_present_requestReportVo && that_present_requestReportVo))
          return false;
        if (!this.requestReportVo.equals(that.requestReportVo))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_requestReportVo = true && (isSetRequestReportVo());
      list.add(present_requestReportVo);
      if (present_requestReportVo)
        list.add(requestReportVo);

      return list.hashCode();
    }

    @Override
    public int compareTo(findFundsWriteBackPagination_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetRequestReportVo()).compareTo(other.isSetRequestReportVo());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRequestReportVo()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestReportVo, other.requestReportVo);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findFundsWriteBackPagination_args(");
      boolean first = true;

      sb.append("requestReportVo:");
      if (this.requestReportVo == null) {
        sb.append("null");
      } else {
        sb.append(this.requestReportVo);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (requestReportVo != null) {
        requestReportVo.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findFundsWriteBackPagination_argsStandardSchemeFactory implements SchemeFactory {
      public findFundsWriteBackPagination_argsStandardScheme getScheme() {
        return new findFundsWriteBackPagination_argsStandardScheme();
      }
    }

    private static class findFundsWriteBackPagination_argsStandardScheme extends StandardScheme<findFundsWriteBackPagination_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findFundsWriteBackPagination_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // REQUEST_REPORT_VO
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.requestReportVo = new TRequestReportDetailVo();
                struct.requestReportVo.read(iprot);
                struct.setRequestReportVoIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findFundsWriteBackPagination_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.requestReportVo != null) {
          oprot.writeFieldBegin(REQUEST_REPORT_VO_FIELD_DESC);
          struct.requestReportVo.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findFundsWriteBackPagination_argsTupleSchemeFactory implements SchemeFactory {
      public findFundsWriteBackPagination_argsTupleScheme getScheme() {
        return new findFundsWriteBackPagination_argsTupleScheme();
      }
    }

    private static class findFundsWriteBackPagination_argsTupleScheme extends TupleScheme<findFundsWriteBackPagination_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findFundsWriteBackPagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetRequestReportVo()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetRequestReportVo()) {
          struct.requestReportVo.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findFundsWriteBackPagination_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.requestReportVo = new TRequestReportDetailVo();
          struct.requestReportVo.read(iprot);
          struct.setRequestReportVoIsSet(true);
        }
      }
    }

  }

  public static class findFundsWriteBackPagination_result implements org.apache.thrift.TBase<findFundsWriteBackPagination_result, findFundsWriteBackPagination_result._Fields>, java.io.Serializable, Cloneable, Comparable<findFundsWriteBackPagination_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("findFundsWriteBackPagination_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new findFundsWriteBackPagination_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new findFundsWriteBackPagination_resultTupleSchemeFactory());
    }

    public TReportDetailPaginationVo success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TReportDetailPaginationVo.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(findFundsWriteBackPagination_result.class, metaDataMap);
    }

    public findFundsWriteBackPagination_result() {
    }

    public findFundsWriteBackPagination_result(
      TReportDetailPaginationVo success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public findFundsWriteBackPagination_result(findFundsWriteBackPagination_result other) {
      if (other.isSetSuccess()) {
        this.success = new TReportDetailPaginationVo(other.success);
      }
    }

    public findFundsWriteBackPagination_result deepCopy() {
      return new findFundsWriteBackPagination_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public TReportDetailPaginationVo getSuccess() {
      return this.success;
    }

    public findFundsWriteBackPagination_result setSuccess(TReportDetailPaginationVo success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((TReportDetailPaginationVo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof findFundsWriteBackPagination_result)
        return this.equals((findFundsWriteBackPagination_result)that);
      return false;
    }

    public boolean equals(findFundsWriteBackPagination_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      List<Object> list = new ArrayList<Object>();

      boolean present_success = true && (isSetSuccess());
      list.add(present_success);
      if (present_success)
        list.add(success);

      return list.hashCode();
    }

    @Override
    public int compareTo(findFundsWriteBackPagination_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("findFundsWriteBackPagination_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class findFundsWriteBackPagination_resultStandardSchemeFactory implements SchemeFactory {
      public findFundsWriteBackPagination_resultStandardScheme getScheme() {
        return new findFundsWriteBackPagination_resultStandardScheme();
      }
    }

    private static class findFundsWriteBackPagination_resultStandardScheme extends StandardScheme<findFundsWriteBackPagination_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, findFundsWriteBackPagination_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new TReportDetailPaginationVo();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, findFundsWriteBackPagination_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class findFundsWriteBackPagination_resultTupleSchemeFactory implements SchemeFactory {
      public findFundsWriteBackPagination_resultTupleScheme getScheme() {
        return new findFundsWriteBackPagination_resultTupleScheme();
      }
    }

    private static class findFundsWriteBackPagination_resultTupleScheme extends TupleScheme<findFundsWriteBackPagination_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, findFundsWriteBackPagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, findFundsWriteBackPagination_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new TReportDetailPaginationVo();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

  }

}
