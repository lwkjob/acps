/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.yjy.apcs.rpc.server.report;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2016-07-06")
public class TResponseReportDetail implements org.apache.thrift.TBase<TResponseReportDetail, TResponseReportDetail._Fields>, java.io.Serializable, Cloneable, Comparable<TResponseReportDetail> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TResponseReportDetail");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField INVOICETYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("invoicetype", org.apache.thrift.protocol.TType.BYTE, (short)2);
  private static final org.apache.thrift.protocol.TField PARENTID_FIELD_DESC = new org.apache.thrift.protocol.TField("parentid", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField INVOICENUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("invoicenumber", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField BUYERID_FIELD_DESC = new org.apache.thrift.protocol.TField("buyerid", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField BUYER_COMPANYNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("buyerCompanyname", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField BUYER_LINKMAN_FIELD_DESC = new org.apache.thrift.protocol.TField("buyerLinkman", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField SALERID_FIELD_DESC = new org.apache.thrift.protocol.TField("salerid", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField HAPPENTIME_FIELD_DESC = new org.apache.thrift.protocol.TField("happentime", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField TOTALGOODSPRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("totalgoodsprice", org.apache.thrift.protocol.TType.DOUBLE, (short)10);
  private static final org.apache.thrift.protocol.TField TOTALPOSTPRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("totalpostprice", org.apache.thrift.protocol.TType.DOUBLE, (short)11);
  private static final org.apache.thrift.protocol.TField ACCGOODSPRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("accgoodsprice", org.apache.thrift.protocol.TType.DOUBLE, (short)12);
  private static final org.apache.thrift.protocol.TField ACCPOSTPRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("accpostprice", org.apache.thrift.protocol.TType.DOUBLE, (short)13);
  private static final org.apache.thrift.protocol.TField REDPACKETGOODSPRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("redpacketgoodsprice", org.apache.thrift.protocol.TType.DOUBLE, (short)14);
  private static final org.apache.thrift.protocol.TField REDPACKETPOSTPRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("redpacketpostprice", org.apache.thrift.protocol.TType.DOUBLE, (short)15);
  private static final org.apache.thrift.protocol.TField PLATFORMCOUPONPRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("platformcouponprice", org.apache.thrift.protocol.TType.DOUBLE, (short)16);
  private static final org.apache.thrift.protocol.TField SALERCOUPONPRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("salercouponprice", org.apache.thrift.protocol.TType.DOUBLE, (short)17);
  private static final org.apache.thrift.protocol.TField SALERSPECIALPRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("salerspecialprice", org.apache.thrift.protocol.TType.DOUBLE, (short)18);
  private static final org.apache.thrift.protocol.TField SALERAGIOPRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("saleragioprice", org.apache.thrift.protocol.TType.DOUBLE, (short)19);
  private static final org.apache.thrift.protocol.TField SALERFULLAMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("salerfullamount", org.apache.thrift.protocol.TType.DOUBLE, (short)20);
  private static final org.apache.thrift.protocol.TField SALERCHANGEGOODSPRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("salerchangegoodsprice", org.apache.thrift.protocol.TType.DOUBLE, (short)21);
  private static final org.apache.thrift.protocol.TField SALERCHANGEPOSTPRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("salerchangepostprice", org.apache.thrift.protocol.TType.DOUBLE, (short)22);
  private static final org.apache.thrift.protocol.TField CHANGEPOSTPRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("changepostprice", org.apache.thrift.protocol.TType.DOUBLE, (short)23);
  private static final org.apache.thrift.protocol.TField BALANCE_FIELD_DESC = new org.apache.thrift.protocol.TField("balance", org.apache.thrift.protocol.TType.DOUBLE, (short)24);
  private static final org.apache.thrift.protocol.TField ACCRETURNPOSTPRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("accreturnpostprice", org.apache.thrift.protocol.TType.DOUBLE, (short)25);
  private static final org.apache.thrift.protocol.TField REDPACKETRETURNPOSTPRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("redpacketreturnpostprice", org.apache.thrift.protocol.TType.DOUBLE, (short)26);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TResponseReportDetailStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TResponseReportDetailTupleSchemeFactory());
  }

  public long id; // optional
  public byte invoicetype; // optional
  public int parentid; // optional
  public String invoicenumber; // optional
  public int buyerid; // optional
  public String buyerCompanyname; // optional
  public String buyerLinkman; // optional
  public int salerid; // optional
  public long happentime; // optional
  public double totalgoodsprice; // optional
  public double totalpostprice; // optional
  public double accgoodsprice; // optional
  public double accpostprice; // optional
  public double redpacketgoodsprice; // optional
  public double redpacketpostprice; // optional
  public double platformcouponprice; // optional
  public double salercouponprice; // optional
  public double salerspecialprice; // optional
  public double saleragioprice; // optional
  public double salerfullamount; // optional
  public double salerchangegoodsprice; // optional
  public double salerchangepostprice; // optional
  public double changepostprice; // optional
  public double balance; // optional
  public double accreturnpostprice; // optional
  public double redpacketreturnpostprice; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    INVOICETYPE((short)2, "invoicetype"),
    PARENTID((short)3, "parentid"),
    INVOICENUMBER((short)4, "invoicenumber"),
    BUYERID((short)5, "buyerid"),
    BUYER_COMPANYNAME((short)6, "buyerCompanyname"),
    BUYER_LINKMAN((short)7, "buyerLinkman"),
    SALERID((short)8, "salerid"),
    HAPPENTIME((short)9, "happentime"),
    TOTALGOODSPRICE((short)10, "totalgoodsprice"),
    TOTALPOSTPRICE((short)11, "totalpostprice"),
    ACCGOODSPRICE((short)12, "accgoodsprice"),
    ACCPOSTPRICE((short)13, "accpostprice"),
    REDPACKETGOODSPRICE((short)14, "redpacketgoodsprice"),
    REDPACKETPOSTPRICE((short)15, "redpacketpostprice"),
    PLATFORMCOUPONPRICE((short)16, "platformcouponprice"),
    SALERCOUPONPRICE((short)17, "salercouponprice"),
    SALERSPECIALPRICE((short)18, "salerspecialprice"),
    SALERAGIOPRICE((short)19, "saleragioprice"),
    SALERFULLAMOUNT((short)20, "salerfullamount"),
    SALERCHANGEGOODSPRICE((short)21, "salerchangegoodsprice"),
    SALERCHANGEPOSTPRICE((short)22, "salerchangepostprice"),
    CHANGEPOSTPRICE((short)23, "changepostprice"),
    BALANCE((short)24, "balance"),
    ACCRETURNPOSTPRICE((short)25, "accreturnpostprice"),
    REDPACKETRETURNPOSTPRICE((short)26, "redpacketreturnpostprice");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // INVOICETYPE
          return INVOICETYPE;
        case 3: // PARENTID
          return PARENTID;
        case 4: // INVOICENUMBER
          return INVOICENUMBER;
        case 5: // BUYERID
          return BUYERID;
        case 6: // BUYER_COMPANYNAME
          return BUYER_COMPANYNAME;
        case 7: // BUYER_LINKMAN
          return BUYER_LINKMAN;
        case 8: // SALERID
          return SALERID;
        case 9: // HAPPENTIME
          return HAPPENTIME;
        case 10: // TOTALGOODSPRICE
          return TOTALGOODSPRICE;
        case 11: // TOTALPOSTPRICE
          return TOTALPOSTPRICE;
        case 12: // ACCGOODSPRICE
          return ACCGOODSPRICE;
        case 13: // ACCPOSTPRICE
          return ACCPOSTPRICE;
        case 14: // REDPACKETGOODSPRICE
          return REDPACKETGOODSPRICE;
        case 15: // REDPACKETPOSTPRICE
          return REDPACKETPOSTPRICE;
        case 16: // PLATFORMCOUPONPRICE
          return PLATFORMCOUPONPRICE;
        case 17: // SALERCOUPONPRICE
          return SALERCOUPONPRICE;
        case 18: // SALERSPECIALPRICE
          return SALERSPECIALPRICE;
        case 19: // SALERAGIOPRICE
          return SALERAGIOPRICE;
        case 20: // SALERFULLAMOUNT
          return SALERFULLAMOUNT;
        case 21: // SALERCHANGEGOODSPRICE
          return SALERCHANGEGOODSPRICE;
        case 22: // SALERCHANGEPOSTPRICE
          return SALERCHANGEPOSTPRICE;
        case 23: // CHANGEPOSTPRICE
          return CHANGEPOSTPRICE;
        case 24: // BALANCE
          return BALANCE;
        case 25: // ACCRETURNPOSTPRICE
          return ACCRETURNPOSTPRICE;
        case 26: // REDPACKETRETURNPOSTPRICE
          return REDPACKETRETURNPOSTPRICE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __INVOICETYPE_ISSET_ID = 1;
  private static final int __PARENTID_ISSET_ID = 2;
  private static final int __BUYERID_ISSET_ID = 3;
  private static final int __SALERID_ISSET_ID = 4;
  private static final int __HAPPENTIME_ISSET_ID = 5;
  private static final int __TOTALGOODSPRICE_ISSET_ID = 6;
  private static final int __TOTALPOSTPRICE_ISSET_ID = 7;
  private static final int __ACCGOODSPRICE_ISSET_ID = 8;
  private static final int __ACCPOSTPRICE_ISSET_ID = 9;
  private static final int __REDPACKETGOODSPRICE_ISSET_ID = 10;
  private static final int __REDPACKETPOSTPRICE_ISSET_ID = 11;
  private static final int __PLATFORMCOUPONPRICE_ISSET_ID = 12;
  private static final int __SALERCOUPONPRICE_ISSET_ID = 13;
  private static final int __SALERSPECIALPRICE_ISSET_ID = 14;
  private static final int __SALERAGIOPRICE_ISSET_ID = 15;
  private static final int __SALERFULLAMOUNT_ISSET_ID = 16;
  private static final int __SALERCHANGEGOODSPRICE_ISSET_ID = 17;
  private static final int __SALERCHANGEPOSTPRICE_ISSET_ID = 18;
  private static final int __CHANGEPOSTPRICE_ISSET_ID = 19;
  private static final int __BALANCE_ISSET_ID = 20;
  private static final int __ACCRETURNPOSTPRICE_ISSET_ID = 21;
  private static final int __REDPACKETRETURNPOSTPRICE_ISSET_ID = 22;
  private int __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.INVOICETYPE,_Fields.PARENTID,_Fields.INVOICENUMBER,_Fields.BUYERID,_Fields.BUYER_COMPANYNAME,_Fields.BUYER_LINKMAN,_Fields.SALERID,_Fields.HAPPENTIME,_Fields.TOTALGOODSPRICE,_Fields.TOTALPOSTPRICE,_Fields.ACCGOODSPRICE,_Fields.ACCPOSTPRICE,_Fields.REDPACKETGOODSPRICE,_Fields.REDPACKETPOSTPRICE,_Fields.PLATFORMCOUPONPRICE,_Fields.SALERCOUPONPRICE,_Fields.SALERSPECIALPRICE,_Fields.SALERAGIOPRICE,_Fields.SALERFULLAMOUNT,_Fields.SALERCHANGEGOODSPRICE,_Fields.SALERCHANGEPOSTPRICE,_Fields.CHANGEPOSTPRICE,_Fields.BALANCE,_Fields.ACCRETURNPOSTPRICE,_Fields.REDPACKETRETURNPOSTPRICE};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.INVOICETYPE, new org.apache.thrift.meta_data.FieldMetaData("invoicetype", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.PARENTID, new org.apache.thrift.meta_data.FieldMetaData("parentid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.INVOICENUMBER, new org.apache.thrift.meta_data.FieldMetaData("invoicenumber", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUYERID, new org.apache.thrift.meta_data.FieldMetaData("buyerid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BUYER_COMPANYNAME, new org.apache.thrift.meta_data.FieldMetaData("buyerCompanyname", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUYER_LINKMAN, new org.apache.thrift.meta_data.FieldMetaData("buyerLinkman", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SALERID, new org.apache.thrift.meta_data.FieldMetaData("salerid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HAPPENTIME, new org.apache.thrift.meta_data.FieldMetaData("happentime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TOTALGOODSPRICE, new org.apache.thrift.meta_data.FieldMetaData("totalgoodsprice", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.TOTALPOSTPRICE, new org.apache.thrift.meta_data.FieldMetaData("totalpostprice", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ACCGOODSPRICE, new org.apache.thrift.meta_data.FieldMetaData("accgoodsprice", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ACCPOSTPRICE, new org.apache.thrift.meta_data.FieldMetaData("accpostprice", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.REDPACKETGOODSPRICE, new org.apache.thrift.meta_data.FieldMetaData("redpacketgoodsprice", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.REDPACKETPOSTPRICE, new org.apache.thrift.meta_data.FieldMetaData("redpacketpostprice", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.PLATFORMCOUPONPRICE, new org.apache.thrift.meta_data.FieldMetaData("platformcouponprice", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SALERCOUPONPRICE, new org.apache.thrift.meta_data.FieldMetaData("salercouponprice", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SALERSPECIALPRICE, new org.apache.thrift.meta_data.FieldMetaData("salerspecialprice", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SALERAGIOPRICE, new org.apache.thrift.meta_data.FieldMetaData("saleragioprice", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SALERFULLAMOUNT, new org.apache.thrift.meta_data.FieldMetaData("salerfullamount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SALERCHANGEGOODSPRICE, new org.apache.thrift.meta_data.FieldMetaData("salerchangegoodsprice", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SALERCHANGEPOSTPRICE, new org.apache.thrift.meta_data.FieldMetaData("salerchangepostprice", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CHANGEPOSTPRICE, new org.apache.thrift.meta_data.FieldMetaData("changepostprice", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.BALANCE, new org.apache.thrift.meta_data.FieldMetaData("balance", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ACCRETURNPOSTPRICE, new org.apache.thrift.meta_data.FieldMetaData("accreturnpostprice", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.REDPACKETRETURNPOSTPRICE, new org.apache.thrift.meta_data.FieldMetaData("redpacketreturnpostprice", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TResponseReportDetail.class, metaDataMap);
  }

  public TResponseReportDetail() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TResponseReportDetail(TResponseReportDetail other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.invoicetype = other.invoicetype;
    this.parentid = other.parentid;
    if (other.isSetInvoicenumber()) {
      this.invoicenumber = other.invoicenumber;
    }
    this.buyerid = other.buyerid;
    if (other.isSetBuyerCompanyname()) {
      this.buyerCompanyname = other.buyerCompanyname;
    }
    if (other.isSetBuyerLinkman()) {
      this.buyerLinkman = other.buyerLinkman;
    }
    this.salerid = other.salerid;
    this.happentime = other.happentime;
    this.totalgoodsprice = other.totalgoodsprice;
    this.totalpostprice = other.totalpostprice;
    this.accgoodsprice = other.accgoodsprice;
    this.accpostprice = other.accpostprice;
    this.redpacketgoodsprice = other.redpacketgoodsprice;
    this.redpacketpostprice = other.redpacketpostprice;
    this.platformcouponprice = other.platformcouponprice;
    this.salercouponprice = other.salercouponprice;
    this.salerspecialprice = other.salerspecialprice;
    this.saleragioprice = other.saleragioprice;
    this.salerfullamount = other.salerfullamount;
    this.salerchangegoodsprice = other.salerchangegoodsprice;
    this.salerchangepostprice = other.salerchangepostprice;
    this.changepostprice = other.changepostprice;
    this.balance = other.balance;
    this.accreturnpostprice = other.accreturnpostprice;
    this.redpacketreturnpostprice = other.redpacketreturnpostprice;
  }

  public TResponseReportDetail deepCopy() {
    return new TResponseReportDetail(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setInvoicetypeIsSet(false);
    this.invoicetype = 0;
    setParentidIsSet(false);
    this.parentid = 0;
    this.invoicenumber = null;
    setBuyeridIsSet(false);
    this.buyerid = 0;
    this.buyerCompanyname = null;
    this.buyerLinkman = null;
    setSaleridIsSet(false);
    this.salerid = 0;
    setHappentimeIsSet(false);
    this.happentime = 0;
    setTotalgoodspriceIsSet(false);
    this.totalgoodsprice = 0.0;
    setTotalpostpriceIsSet(false);
    this.totalpostprice = 0.0;
    setAccgoodspriceIsSet(false);
    this.accgoodsprice = 0.0;
    setAccpostpriceIsSet(false);
    this.accpostprice = 0.0;
    setRedpacketgoodspriceIsSet(false);
    this.redpacketgoodsprice = 0.0;
    setRedpacketpostpriceIsSet(false);
    this.redpacketpostprice = 0.0;
    setPlatformcouponpriceIsSet(false);
    this.platformcouponprice = 0.0;
    setSalercouponpriceIsSet(false);
    this.salercouponprice = 0.0;
    setSalerspecialpriceIsSet(false);
    this.salerspecialprice = 0.0;
    setSaleragiopriceIsSet(false);
    this.saleragioprice = 0.0;
    setSalerfullamountIsSet(false);
    this.salerfullamount = 0.0;
    setSalerchangegoodspriceIsSet(false);
    this.salerchangegoodsprice = 0.0;
    setSalerchangepostpriceIsSet(false);
    this.salerchangepostprice = 0.0;
    setChangepostpriceIsSet(false);
    this.changepostprice = 0.0;
    setBalanceIsSet(false);
    this.balance = 0.0;
    setAccreturnpostpriceIsSet(false);
    this.accreturnpostprice = 0.0;
    setRedpacketreturnpostpriceIsSet(false);
    this.redpacketreturnpostprice = 0.0;
  }

  public long getId() {
    return this.id;
  }

  public TResponseReportDetail setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public byte getInvoicetype() {
    return this.invoicetype;
  }

  public TResponseReportDetail setInvoicetype(byte invoicetype) {
    this.invoicetype = invoicetype;
    setInvoicetypeIsSet(true);
    return this;
  }

  public void unsetInvoicetype() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __INVOICETYPE_ISSET_ID);
  }

  /** Returns true if field invoicetype is set (has been assigned a value) and false otherwise */
  public boolean isSetInvoicetype() {
    return EncodingUtils.testBit(__isset_bitfield, __INVOICETYPE_ISSET_ID);
  }

  public void setInvoicetypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __INVOICETYPE_ISSET_ID, value);
  }

  public int getParentid() {
    return this.parentid;
  }

  public TResponseReportDetail setParentid(int parentid) {
    this.parentid = parentid;
    setParentidIsSet(true);
    return this;
  }

  public void unsetParentid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PARENTID_ISSET_ID);
  }

  /** Returns true if field parentid is set (has been assigned a value) and false otherwise */
  public boolean isSetParentid() {
    return EncodingUtils.testBit(__isset_bitfield, __PARENTID_ISSET_ID);
  }

  public void setParentidIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PARENTID_ISSET_ID, value);
  }

  public String getInvoicenumber() {
    return this.invoicenumber;
  }

  public TResponseReportDetail setInvoicenumber(String invoicenumber) {
    this.invoicenumber = invoicenumber;
    return this;
  }

  public void unsetInvoicenumber() {
    this.invoicenumber = null;
  }

  /** Returns true if field invoicenumber is set (has been assigned a value) and false otherwise */
  public boolean isSetInvoicenumber() {
    return this.invoicenumber != null;
  }

  public void setInvoicenumberIsSet(boolean value) {
    if (!value) {
      this.invoicenumber = null;
    }
  }

  public int getBuyerid() {
    return this.buyerid;
  }

  public TResponseReportDetail setBuyerid(int buyerid) {
    this.buyerid = buyerid;
    setBuyeridIsSet(true);
    return this;
  }

  public void unsetBuyerid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BUYERID_ISSET_ID);
  }

  /** Returns true if field buyerid is set (has been assigned a value) and false otherwise */
  public boolean isSetBuyerid() {
    return EncodingUtils.testBit(__isset_bitfield, __BUYERID_ISSET_ID);
  }

  public void setBuyeridIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BUYERID_ISSET_ID, value);
  }

  public String getBuyerCompanyname() {
    return this.buyerCompanyname;
  }

  public TResponseReportDetail setBuyerCompanyname(String buyerCompanyname) {
    this.buyerCompanyname = buyerCompanyname;
    return this;
  }

  public void unsetBuyerCompanyname() {
    this.buyerCompanyname = null;
  }

  /** Returns true if field buyerCompanyname is set (has been assigned a value) and false otherwise */
  public boolean isSetBuyerCompanyname() {
    return this.buyerCompanyname != null;
  }

  public void setBuyerCompanynameIsSet(boolean value) {
    if (!value) {
      this.buyerCompanyname = null;
    }
  }

  public String getBuyerLinkman() {
    return this.buyerLinkman;
  }

  public TResponseReportDetail setBuyerLinkman(String buyerLinkman) {
    this.buyerLinkman = buyerLinkman;
    return this;
  }

  public void unsetBuyerLinkman() {
    this.buyerLinkman = null;
  }

  /** Returns true if field buyerLinkman is set (has been assigned a value) and false otherwise */
  public boolean isSetBuyerLinkman() {
    return this.buyerLinkman != null;
  }

  public void setBuyerLinkmanIsSet(boolean value) {
    if (!value) {
      this.buyerLinkman = null;
    }
  }

  public int getSalerid() {
    return this.salerid;
  }

  public TResponseReportDetail setSalerid(int salerid) {
    this.salerid = salerid;
    setSaleridIsSet(true);
    return this;
  }

  public void unsetSalerid() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SALERID_ISSET_ID);
  }

  /** Returns true if field salerid is set (has been assigned a value) and false otherwise */
  public boolean isSetSalerid() {
    return EncodingUtils.testBit(__isset_bitfield, __SALERID_ISSET_ID);
  }

  public void setSaleridIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SALERID_ISSET_ID, value);
  }

  public long getHappentime() {
    return this.happentime;
  }

  public TResponseReportDetail setHappentime(long happentime) {
    this.happentime = happentime;
    setHappentimeIsSet(true);
    return this;
  }

  public void unsetHappentime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HAPPENTIME_ISSET_ID);
  }

  /** Returns true if field happentime is set (has been assigned a value) and false otherwise */
  public boolean isSetHappentime() {
    return EncodingUtils.testBit(__isset_bitfield, __HAPPENTIME_ISSET_ID);
  }

  public void setHappentimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HAPPENTIME_ISSET_ID, value);
  }

  public double getTotalgoodsprice() {
    return this.totalgoodsprice;
  }

  public TResponseReportDetail setTotalgoodsprice(double totalgoodsprice) {
    this.totalgoodsprice = totalgoodsprice;
    setTotalgoodspriceIsSet(true);
    return this;
  }

  public void unsetTotalgoodsprice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALGOODSPRICE_ISSET_ID);
  }

  /** Returns true if field totalgoodsprice is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalgoodsprice() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALGOODSPRICE_ISSET_ID);
  }

  public void setTotalgoodspriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALGOODSPRICE_ISSET_ID, value);
  }

  public double getTotalpostprice() {
    return this.totalpostprice;
  }

  public TResponseReportDetail setTotalpostprice(double totalpostprice) {
    this.totalpostprice = totalpostprice;
    setTotalpostpriceIsSet(true);
    return this;
  }

  public void unsetTotalpostprice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALPOSTPRICE_ISSET_ID);
  }

  /** Returns true if field totalpostprice is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalpostprice() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALPOSTPRICE_ISSET_ID);
  }

  public void setTotalpostpriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALPOSTPRICE_ISSET_ID, value);
  }

  public double getAccgoodsprice() {
    return this.accgoodsprice;
  }

  public TResponseReportDetail setAccgoodsprice(double accgoodsprice) {
    this.accgoodsprice = accgoodsprice;
    setAccgoodspriceIsSet(true);
    return this;
  }

  public void unsetAccgoodsprice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ACCGOODSPRICE_ISSET_ID);
  }

  /** Returns true if field accgoodsprice is set (has been assigned a value) and false otherwise */
  public boolean isSetAccgoodsprice() {
    return EncodingUtils.testBit(__isset_bitfield, __ACCGOODSPRICE_ISSET_ID);
  }

  public void setAccgoodspriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ACCGOODSPRICE_ISSET_ID, value);
  }

  public double getAccpostprice() {
    return this.accpostprice;
  }

  public TResponseReportDetail setAccpostprice(double accpostprice) {
    this.accpostprice = accpostprice;
    setAccpostpriceIsSet(true);
    return this;
  }

  public void unsetAccpostprice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ACCPOSTPRICE_ISSET_ID);
  }

  /** Returns true if field accpostprice is set (has been assigned a value) and false otherwise */
  public boolean isSetAccpostprice() {
    return EncodingUtils.testBit(__isset_bitfield, __ACCPOSTPRICE_ISSET_ID);
  }

  public void setAccpostpriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ACCPOSTPRICE_ISSET_ID, value);
  }

  public double getRedpacketgoodsprice() {
    return this.redpacketgoodsprice;
  }

  public TResponseReportDetail setRedpacketgoodsprice(double redpacketgoodsprice) {
    this.redpacketgoodsprice = redpacketgoodsprice;
    setRedpacketgoodspriceIsSet(true);
    return this;
  }

  public void unsetRedpacketgoodsprice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REDPACKETGOODSPRICE_ISSET_ID);
  }

  /** Returns true if field redpacketgoodsprice is set (has been assigned a value) and false otherwise */
  public boolean isSetRedpacketgoodsprice() {
    return EncodingUtils.testBit(__isset_bitfield, __REDPACKETGOODSPRICE_ISSET_ID);
  }

  public void setRedpacketgoodspriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REDPACKETGOODSPRICE_ISSET_ID, value);
  }

  public double getRedpacketpostprice() {
    return this.redpacketpostprice;
  }

  public TResponseReportDetail setRedpacketpostprice(double redpacketpostprice) {
    this.redpacketpostprice = redpacketpostprice;
    setRedpacketpostpriceIsSet(true);
    return this;
  }

  public void unsetRedpacketpostprice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REDPACKETPOSTPRICE_ISSET_ID);
  }

  /** Returns true if field redpacketpostprice is set (has been assigned a value) and false otherwise */
  public boolean isSetRedpacketpostprice() {
    return EncodingUtils.testBit(__isset_bitfield, __REDPACKETPOSTPRICE_ISSET_ID);
  }

  public void setRedpacketpostpriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REDPACKETPOSTPRICE_ISSET_ID, value);
  }

  public double getPlatformcouponprice() {
    return this.platformcouponprice;
  }

  public TResponseReportDetail setPlatformcouponprice(double platformcouponprice) {
    this.platformcouponprice = platformcouponprice;
    setPlatformcouponpriceIsSet(true);
    return this;
  }

  public void unsetPlatformcouponprice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PLATFORMCOUPONPRICE_ISSET_ID);
  }

  /** Returns true if field platformcouponprice is set (has been assigned a value) and false otherwise */
  public boolean isSetPlatformcouponprice() {
    return EncodingUtils.testBit(__isset_bitfield, __PLATFORMCOUPONPRICE_ISSET_ID);
  }

  public void setPlatformcouponpriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PLATFORMCOUPONPRICE_ISSET_ID, value);
  }

  public double getSalercouponprice() {
    return this.salercouponprice;
  }

  public TResponseReportDetail setSalercouponprice(double salercouponprice) {
    this.salercouponprice = salercouponprice;
    setSalercouponpriceIsSet(true);
    return this;
  }

  public void unsetSalercouponprice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SALERCOUPONPRICE_ISSET_ID);
  }

  /** Returns true if field salercouponprice is set (has been assigned a value) and false otherwise */
  public boolean isSetSalercouponprice() {
    return EncodingUtils.testBit(__isset_bitfield, __SALERCOUPONPRICE_ISSET_ID);
  }

  public void setSalercouponpriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SALERCOUPONPRICE_ISSET_ID, value);
  }

  public double getSalerspecialprice() {
    return this.salerspecialprice;
  }

  public TResponseReportDetail setSalerspecialprice(double salerspecialprice) {
    this.salerspecialprice = salerspecialprice;
    setSalerspecialpriceIsSet(true);
    return this;
  }

  public void unsetSalerspecialprice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SALERSPECIALPRICE_ISSET_ID);
  }

  /** Returns true if field salerspecialprice is set (has been assigned a value) and false otherwise */
  public boolean isSetSalerspecialprice() {
    return EncodingUtils.testBit(__isset_bitfield, __SALERSPECIALPRICE_ISSET_ID);
  }

  public void setSalerspecialpriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SALERSPECIALPRICE_ISSET_ID, value);
  }

  public double getSaleragioprice() {
    return this.saleragioprice;
  }

  public TResponseReportDetail setSaleragioprice(double saleragioprice) {
    this.saleragioprice = saleragioprice;
    setSaleragiopriceIsSet(true);
    return this;
  }

  public void unsetSaleragioprice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SALERAGIOPRICE_ISSET_ID);
  }

  /** Returns true if field saleragioprice is set (has been assigned a value) and false otherwise */
  public boolean isSetSaleragioprice() {
    return EncodingUtils.testBit(__isset_bitfield, __SALERAGIOPRICE_ISSET_ID);
  }

  public void setSaleragiopriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SALERAGIOPRICE_ISSET_ID, value);
  }

  public double getSalerfullamount() {
    return this.salerfullamount;
  }

  public TResponseReportDetail setSalerfullamount(double salerfullamount) {
    this.salerfullamount = salerfullamount;
    setSalerfullamountIsSet(true);
    return this;
  }

  public void unsetSalerfullamount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SALERFULLAMOUNT_ISSET_ID);
  }

  /** Returns true if field salerfullamount is set (has been assigned a value) and false otherwise */
  public boolean isSetSalerfullamount() {
    return EncodingUtils.testBit(__isset_bitfield, __SALERFULLAMOUNT_ISSET_ID);
  }

  public void setSalerfullamountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SALERFULLAMOUNT_ISSET_ID, value);
  }

  public double getSalerchangegoodsprice() {
    return this.salerchangegoodsprice;
  }

  public TResponseReportDetail setSalerchangegoodsprice(double salerchangegoodsprice) {
    this.salerchangegoodsprice = salerchangegoodsprice;
    setSalerchangegoodspriceIsSet(true);
    return this;
  }

  public void unsetSalerchangegoodsprice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SALERCHANGEGOODSPRICE_ISSET_ID);
  }

  /** Returns true if field salerchangegoodsprice is set (has been assigned a value) and false otherwise */
  public boolean isSetSalerchangegoodsprice() {
    return EncodingUtils.testBit(__isset_bitfield, __SALERCHANGEGOODSPRICE_ISSET_ID);
  }

  public void setSalerchangegoodspriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SALERCHANGEGOODSPRICE_ISSET_ID, value);
  }

  public double getSalerchangepostprice() {
    return this.salerchangepostprice;
  }

  public TResponseReportDetail setSalerchangepostprice(double salerchangepostprice) {
    this.salerchangepostprice = salerchangepostprice;
    setSalerchangepostpriceIsSet(true);
    return this;
  }

  public void unsetSalerchangepostprice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SALERCHANGEPOSTPRICE_ISSET_ID);
  }

  /** Returns true if field salerchangepostprice is set (has been assigned a value) and false otherwise */
  public boolean isSetSalerchangepostprice() {
    return EncodingUtils.testBit(__isset_bitfield, __SALERCHANGEPOSTPRICE_ISSET_ID);
  }

  public void setSalerchangepostpriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SALERCHANGEPOSTPRICE_ISSET_ID, value);
  }

  public double getChangepostprice() {
    return this.changepostprice;
  }

  public TResponseReportDetail setChangepostprice(double changepostprice) {
    this.changepostprice = changepostprice;
    setChangepostpriceIsSet(true);
    return this;
  }

  public void unsetChangepostprice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CHANGEPOSTPRICE_ISSET_ID);
  }

  /** Returns true if field changepostprice is set (has been assigned a value) and false otherwise */
  public boolean isSetChangepostprice() {
    return EncodingUtils.testBit(__isset_bitfield, __CHANGEPOSTPRICE_ISSET_ID);
  }

  public void setChangepostpriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CHANGEPOSTPRICE_ISSET_ID, value);
  }

  public double getBalance() {
    return this.balance;
  }

  public TResponseReportDetail setBalance(double balance) {
    this.balance = balance;
    setBalanceIsSet(true);
    return this;
  }

  public void unsetBalance() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BALANCE_ISSET_ID);
  }

  /** Returns true if field balance is set (has been assigned a value) and false otherwise */
  public boolean isSetBalance() {
    return EncodingUtils.testBit(__isset_bitfield, __BALANCE_ISSET_ID);
  }

  public void setBalanceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BALANCE_ISSET_ID, value);
  }

  public double getAccreturnpostprice() {
    return this.accreturnpostprice;
  }

  public TResponseReportDetail setAccreturnpostprice(double accreturnpostprice) {
    this.accreturnpostprice = accreturnpostprice;
    setAccreturnpostpriceIsSet(true);
    return this;
  }

  public void unsetAccreturnpostprice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ACCRETURNPOSTPRICE_ISSET_ID);
  }

  /** Returns true if field accreturnpostprice is set (has been assigned a value) and false otherwise */
  public boolean isSetAccreturnpostprice() {
    return EncodingUtils.testBit(__isset_bitfield, __ACCRETURNPOSTPRICE_ISSET_ID);
  }

  public void setAccreturnpostpriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ACCRETURNPOSTPRICE_ISSET_ID, value);
  }

  public double getRedpacketreturnpostprice() {
    return this.redpacketreturnpostprice;
  }

  public TResponseReportDetail setRedpacketreturnpostprice(double redpacketreturnpostprice) {
    this.redpacketreturnpostprice = redpacketreturnpostprice;
    setRedpacketreturnpostpriceIsSet(true);
    return this;
  }

  public void unsetRedpacketreturnpostprice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REDPACKETRETURNPOSTPRICE_ISSET_ID);
  }

  /** Returns true if field redpacketreturnpostprice is set (has been assigned a value) and false otherwise */
  public boolean isSetRedpacketreturnpostprice() {
    return EncodingUtils.testBit(__isset_bitfield, __REDPACKETRETURNPOSTPRICE_ISSET_ID);
  }

  public void setRedpacketreturnpostpriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REDPACKETRETURNPOSTPRICE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case INVOICETYPE:
      if (value == null) {
        unsetInvoicetype();
      } else {
        setInvoicetype((Byte)value);
      }
      break;

    case PARENTID:
      if (value == null) {
        unsetParentid();
      } else {
        setParentid((Integer)value);
      }
      break;

    case INVOICENUMBER:
      if (value == null) {
        unsetInvoicenumber();
      } else {
        setInvoicenumber((String)value);
      }
      break;

    case BUYERID:
      if (value == null) {
        unsetBuyerid();
      } else {
        setBuyerid((Integer)value);
      }
      break;

    case BUYER_COMPANYNAME:
      if (value == null) {
        unsetBuyerCompanyname();
      } else {
        setBuyerCompanyname((String)value);
      }
      break;

    case BUYER_LINKMAN:
      if (value == null) {
        unsetBuyerLinkman();
      } else {
        setBuyerLinkman((String)value);
      }
      break;

    case SALERID:
      if (value == null) {
        unsetSalerid();
      } else {
        setSalerid((Integer)value);
      }
      break;

    case HAPPENTIME:
      if (value == null) {
        unsetHappentime();
      } else {
        setHappentime((Long)value);
      }
      break;

    case TOTALGOODSPRICE:
      if (value == null) {
        unsetTotalgoodsprice();
      } else {
        setTotalgoodsprice((Double)value);
      }
      break;

    case TOTALPOSTPRICE:
      if (value == null) {
        unsetTotalpostprice();
      } else {
        setTotalpostprice((Double)value);
      }
      break;

    case ACCGOODSPRICE:
      if (value == null) {
        unsetAccgoodsprice();
      } else {
        setAccgoodsprice((Double)value);
      }
      break;

    case ACCPOSTPRICE:
      if (value == null) {
        unsetAccpostprice();
      } else {
        setAccpostprice((Double)value);
      }
      break;

    case REDPACKETGOODSPRICE:
      if (value == null) {
        unsetRedpacketgoodsprice();
      } else {
        setRedpacketgoodsprice((Double)value);
      }
      break;

    case REDPACKETPOSTPRICE:
      if (value == null) {
        unsetRedpacketpostprice();
      } else {
        setRedpacketpostprice((Double)value);
      }
      break;

    case PLATFORMCOUPONPRICE:
      if (value == null) {
        unsetPlatformcouponprice();
      } else {
        setPlatformcouponprice((Double)value);
      }
      break;

    case SALERCOUPONPRICE:
      if (value == null) {
        unsetSalercouponprice();
      } else {
        setSalercouponprice((Double)value);
      }
      break;

    case SALERSPECIALPRICE:
      if (value == null) {
        unsetSalerspecialprice();
      } else {
        setSalerspecialprice((Double)value);
      }
      break;

    case SALERAGIOPRICE:
      if (value == null) {
        unsetSaleragioprice();
      } else {
        setSaleragioprice((Double)value);
      }
      break;

    case SALERFULLAMOUNT:
      if (value == null) {
        unsetSalerfullamount();
      } else {
        setSalerfullamount((Double)value);
      }
      break;

    case SALERCHANGEGOODSPRICE:
      if (value == null) {
        unsetSalerchangegoodsprice();
      } else {
        setSalerchangegoodsprice((Double)value);
      }
      break;

    case SALERCHANGEPOSTPRICE:
      if (value == null) {
        unsetSalerchangepostprice();
      } else {
        setSalerchangepostprice((Double)value);
      }
      break;

    case CHANGEPOSTPRICE:
      if (value == null) {
        unsetChangepostprice();
      } else {
        setChangepostprice((Double)value);
      }
      break;

    case BALANCE:
      if (value == null) {
        unsetBalance();
      } else {
        setBalance((Double)value);
      }
      break;

    case ACCRETURNPOSTPRICE:
      if (value == null) {
        unsetAccreturnpostprice();
      } else {
        setAccreturnpostprice((Double)value);
      }
      break;

    case REDPACKETRETURNPOSTPRICE:
      if (value == null) {
        unsetRedpacketreturnpostprice();
      } else {
        setRedpacketreturnpostprice((Double)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case INVOICETYPE:
      return getInvoicetype();

    case PARENTID:
      return getParentid();

    case INVOICENUMBER:
      return getInvoicenumber();

    case BUYERID:
      return getBuyerid();

    case BUYER_COMPANYNAME:
      return getBuyerCompanyname();

    case BUYER_LINKMAN:
      return getBuyerLinkman();

    case SALERID:
      return getSalerid();

    case HAPPENTIME:
      return getHappentime();

    case TOTALGOODSPRICE:
      return getTotalgoodsprice();

    case TOTALPOSTPRICE:
      return getTotalpostprice();

    case ACCGOODSPRICE:
      return getAccgoodsprice();

    case ACCPOSTPRICE:
      return getAccpostprice();

    case REDPACKETGOODSPRICE:
      return getRedpacketgoodsprice();

    case REDPACKETPOSTPRICE:
      return getRedpacketpostprice();

    case PLATFORMCOUPONPRICE:
      return getPlatformcouponprice();

    case SALERCOUPONPRICE:
      return getSalercouponprice();

    case SALERSPECIALPRICE:
      return getSalerspecialprice();

    case SALERAGIOPRICE:
      return getSaleragioprice();

    case SALERFULLAMOUNT:
      return getSalerfullamount();

    case SALERCHANGEGOODSPRICE:
      return getSalerchangegoodsprice();

    case SALERCHANGEPOSTPRICE:
      return getSalerchangepostprice();

    case CHANGEPOSTPRICE:
      return getChangepostprice();

    case BALANCE:
      return getBalance();

    case ACCRETURNPOSTPRICE:
      return getAccreturnpostprice();

    case REDPACKETRETURNPOSTPRICE:
      return getRedpacketreturnpostprice();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case INVOICETYPE:
      return isSetInvoicetype();
    case PARENTID:
      return isSetParentid();
    case INVOICENUMBER:
      return isSetInvoicenumber();
    case BUYERID:
      return isSetBuyerid();
    case BUYER_COMPANYNAME:
      return isSetBuyerCompanyname();
    case BUYER_LINKMAN:
      return isSetBuyerLinkman();
    case SALERID:
      return isSetSalerid();
    case HAPPENTIME:
      return isSetHappentime();
    case TOTALGOODSPRICE:
      return isSetTotalgoodsprice();
    case TOTALPOSTPRICE:
      return isSetTotalpostprice();
    case ACCGOODSPRICE:
      return isSetAccgoodsprice();
    case ACCPOSTPRICE:
      return isSetAccpostprice();
    case REDPACKETGOODSPRICE:
      return isSetRedpacketgoodsprice();
    case REDPACKETPOSTPRICE:
      return isSetRedpacketpostprice();
    case PLATFORMCOUPONPRICE:
      return isSetPlatformcouponprice();
    case SALERCOUPONPRICE:
      return isSetSalercouponprice();
    case SALERSPECIALPRICE:
      return isSetSalerspecialprice();
    case SALERAGIOPRICE:
      return isSetSaleragioprice();
    case SALERFULLAMOUNT:
      return isSetSalerfullamount();
    case SALERCHANGEGOODSPRICE:
      return isSetSalerchangegoodsprice();
    case SALERCHANGEPOSTPRICE:
      return isSetSalerchangepostprice();
    case CHANGEPOSTPRICE:
      return isSetChangepostprice();
    case BALANCE:
      return isSetBalance();
    case ACCRETURNPOSTPRICE:
      return isSetAccreturnpostprice();
    case REDPACKETRETURNPOSTPRICE:
      return isSetRedpacketreturnpostprice();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TResponseReportDetail)
      return this.equals((TResponseReportDetail)that);
    return false;
  }

  public boolean equals(TResponseReportDetail that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_invoicetype = true && this.isSetInvoicetype();
    boolean that_present_invoicetype = true && that.isSetInvoicetype();
    if (this_present_invoicetype || that_present_invoicetype) {
      if (!(this_present_invoicetype && that_present_invoicetype))
        return false;
      if (this.invoicetype != that.invoicetype)
        return false;
    }

    boolean this_present_parentid = true && this.isSetParentid();
    boolean that_present_parentid = true && that.isSetParentid();
    if (this_present_parentid || that_present_parentid) {
      if (!(this_present_parentid && that_present_parentid))
        return false;
      if (this.parentid != that.parentid)
        return false;
    }

    boolean this_present_invoicenumber = true && this.isSetInvoicenumber();
    boolean that_present_invoicenumber = true && that.isSetInvoicenumber();
    if (this_present_invoicenumber || that_present_invoicenumber) {
      if (!(this_present_invoicenumber && that_present_invoicenumber))
        return false;
      if (!this.invoicenumber.equals(that.invoicenumber))
        return false;
    }

    boolean this_present_buyerid = true && this.isSetBuyerid();
    boolean that_present_buyerid = true && that.isSetBuyerid();
    if (this_present_buyerid || that_present_buyerid) {
      if (!(this_present_buyerid && that_present_buyerid))
        return false;
      if (this.buyerid != that.buyerid)
        return false;
    }

    boolean this_present_buyerCompanyname = true && this.isSetBuyerCompanyname();
    boolean that_present_buyerCompanyname = true && that.isSetBuyerCompanyname();
    if (this_present_buyerCompanyname || that_present_buyerCompanyname) {
      if (!(this_present_buyerCompanyname && that_present_buyerCompanyname))
        return false;
      if (!this.buyerCompanyname.equals(that.buyerCompanyname))
        return false;
    }

    boolean this_present_buyerLinkman = true && this.isSetBuyerLinkman();
    boolean that_present_buyerLinkman = true && that.isSetBuyerLinkman();
    if (this_present_buyerLinkman || that_present_buyerLinkman) {
      if (!(this_present_buyerLinkman && that_present_buyerLinkman))
        return false;
      if (!this.buyerLinkman.equals(that.buyerLinkman))
        return false;
    }

    boolean this_present_salerid = true && this.isSetSalerid();
    boolean that_present_salerid = true && that.isSetSalerid();
    if (this_present_salerid || that_present_salerid) {
      if (!(this_present_salerid && that_present_salerid))
        return false;
      if (this.salerid != that.salerid)
        return false;
    }

    boolean this_present_happentime = true && this.isSetHappentime();
    boolean that_present_happentime = true && that.isSetHappentime();
    if (this_present_happentime || that_present_happentime) {
      if (!(this_present_happentime && that_present_happentime))
        return false;
      if (this.happentime != that.happentime)
        return false;
    }

    boolean this_present_totalgoodsprice = true && this.isSetTotalgoodsprice();
    boolean that_present_totalgoodsprice = true && that.isSetTotalgoodsprice();
    if (this_present_totalgoodsprice || that_present_totalgoodsprice) {
      if (!(this_present_totalgoodsprice && that_present_totalgoodsprice))
        return false;
      if (this.totalgoodsprice != that.totalgoodsprice)
        return false;
    }

    boolean this_present_totalpostprice = true && this.isSetTotalpostprice();
    boolean that_present_totalpostprice = true && that.isSetTotalpostprice();
    if (this_present_totalpostprice || that_present_totalpostprice) {
      if (!(this_present_totalpostprice && that_present_totalpostprice))
        return false;
      if (this.totalpostprice != that.totalpostprice)
        return false;
    }

    boolean this_present_accgoodsprice = true && this.isSetAccgoodsprice();
    boolean that_present_accgoodsprice = true && that.isSetAccgoodsprice();
    if (this_present_accgoodsprice || that_present_accgoodsprice) {
      if (!(this_present_accgoodsprice && that_present_accgoodsprice))
        return false;
      if (this.accgoodsprice != that.accgoodsprice)
        return false;
    }

    boolean this_present_accpostprice = true && this.isSetAccpostprice();
    boolean that_present_accpostprice = true && that.isSetAccpostprice();
    if (this_present_accpostprice || that_present_accpostprice) {
      if (!(this_present_accpostprice && that_present_accpostprice))
        return false;
      if (this.accpostprice != that.accpostprice)
        return false;
    }

    boolean this_present_redpacketgoodsprice = true && this.isSetRedpacketgoodsprice();
    boolean that_present_redpacketgoodsprice = true && that.isSetRedpacketgoodsprice();
    if (this_present_redpacketgoodsprice || that_present_redpacketgoodsprice) {
      if (!(this_present_redpacketgoodsprice && that_present_redpacketgoodsprice))
        return false;
      if (this.redpacketgoodsprice != that.redpacketgoodsprice)
        return false;
    }

    boolean this_present_redpacketpostprice = true && this.isSetRedpacketpostprice();
    boolean that_present_redpacketpostprice = true && that.isSetRedpacketpostprice();
    if (this_present_redpacketpostprice || that_present_redpacketpostprice) {
      if (!(this_present_redpacketpostprice && that_present_redpacketpostprice))
        return false;
      if (this.redpacketpostprice != that.redpacketpostprice)
        return false;
    }

    boolean this_present_platformcouponprice = true && this.isSetPlatformcouponprice();
    boolean that_present_platformcouponprice = true && that.isSetPlatformcouponprice();
    if (this_present_platformcouponprice || that_present_platformcouponprice) {
      if (!(this_present_platformcouponprice && that_present_platformcouponprice))
        return false;
      if (this.platformcouponprice != that.platformcouponprice)
        return false;
    }

    boolean this_present_salercouponprice = true && this.isSetSalercouponprice();
    boolean that_present_salercouponprice = true && that.isSetSalercouponprice();
    if (this_present_salercouponprice || that_present_salercouponprice) {
      if (!(this_present_salercouponprice && that_present_salercouponprice))
        return false;
      if (this.salercouponprice != that.salercouponprice)
        return false;
    }

    boolean this_present_salerspecialprice = true && this.isSetSalerspecialprice();
    boolean that_present_salerspecialprice = true && that.isSetSalerspecialprice();
    if (this_present_salerspecialprice || that_present_salerspecialprice) {
      if (!(this_present_salerspecialprice && that_present_salerspecialprice))
        return false;
      if (this.salerspecialprice != that.salerspecialprice)
        return false;
    }

    boolean this_present_saleragioprice = true && this.isSetSaleragioprice();
    boolean that_present_saleragioprice = true && that.isSetSaleragioprice();
    if (this_present_saleragioprice || that_present_saleragioprice) {
      if (!(this_present_saleragioprice && that_present_saleragioprice))
        return false;
      if (this.saleragioprice != that.saleragioprice)
        return false;
    }

    boolean this_present_salerfullamount = true && this.isSetSalerfullamount();
    boolean that_present_salerfullamount = true && that.isSetSalerfullamount();
    if (this_present_salerfullamount || that_present_salerfullamount) {
      if (!(this_present_salerfullamount && that_present_salerfullamount))
        return false;
      if (this.salerfullamount != that.salerfullamount)
        return false;
    }

    boolean this_present_salerchangegoodsprice = true && this.isSetSalerchangegoodsprice();
    boolean that_present_salerchangegoodsprice = true && that.isSetSalerchangegoodsprice();
    if (this_present_salerchangegoodsprice || that_present_salerchangegoodsprice) {
      if (!(this_present_salerchangegoodsprice && that_present_salerchangegoodsprice))
        return false;
      if (this.salerchangegoodsprice != that.salerchangegoodsprice)
        return false;
    }

    boolean this_present_salerchangepostprice = true && this.isSetSalerchangepostprice();
    boolean that_present_salerchangepostprice = true && that.isSetSalerchangepostprice();
    if (this_present_salerchangepostprice || that_present_salerchangepostprice) {
      if (!(this_present_salerchangepostprice && that_present_salerchangepostprice))
        return false;
      if (this.salerchangepostprice != that.salerchangepostprice)
        return false;
    }

    boolean this_present_changepostprice = true && this.isSetChangepostprice();
    boolean that_present_changepostprice = true && that.isSetChangepostprice();
    if (this_present_changepostprice || that_present_changepostprice) {
      if (!(this_present_changepostprice && that_present_changepostprice))
        return false;
      if (this.changepostprice != that.changepostprice)
        return false;
    }

    boolean this_present_balance = true && this.isSetBalance();
    boolean that_present_balance = true && that.isSetBalance();
    if (this_present_balance || that_present_balance) {
      if (!(this_present_balance && that_present_balance))
        return false;
      if (this.balance != that.balance)
        return false;
    }

    boolean this_present_accreturnpostprice = true && this.isSetAccreturnpostprice();
    boolean that_present_accreturnpostprice = true && that.isSetAccreturnpostprice();
    if (this_present_accreturnpostprice || that_present_accreturnpostprice) {
      if (!(this_present_accreturnpostprice && that_present_accreturnpostprice))
        return false;
      if (this.accreturnpostprice != that.accreturnpostprice)
        return false;
    }

    boolean this_present_redpacketreturnpostprice = true && this.isSetRedpacketreturnpostprice();
    boolean that_present_redpacketreturnpostprice = true && that.isSetRedpacketreturnpostprice();
    if (this_present_redpacketreturnpostprice || that_present_redpacketreturnpostprice) {
      if (!(this_present_redpacketreturnpostprice && that_present_redpacketreturnpostprice))
        return false;
      if (this.redpacketreturnpostprice != that.redpacketreturnpostprice)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true && (isSetId());
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_invoicetype = true && (isSetInvoicetype());
    list.add(present_invoicetype);
    if (present_invoicetype)
      list.add(invoicetype);

    boolean present_parentid = true && (isSetParentid());
    list.add(present_parentid);
    if (present_parentid)
      list.add(parentid);

    boolean present_invoicenumber = true && (isSetInvoicenumber());
    list.add(present_invoicenumber);
    if (present_invoicenumber)
      list.add(invoicenumber);

    boolean present_buyerid = true && (isSetBuyerid());
    list.add(present_buyerid);
    if (present_buyerid)
      list.add(buyerid);

    boolean present_buyerCompanyname = true && (isSetBuyerCompanyname());
    list.add(present_buyerCompanyname);
    if (present_buyerCompanyname)
      list.add(buyerCompanyname);

    boolean present_buyerLinkman = true && (isSetBuyerLinkman());
    list.add(present_buyerLinkman);
    if (present_buyerLinkman)
      list.add(buyerLinkman);

    boolean present_salerid = true && (isSetSalerid());
    list.add(present_salerid);
    if (present_salerid)
      list.add(salerid);

    boolean present_happentime = true && (isSetHappentime());
    list.add(present_happentime);
    if (present_happentime)
      list.add(happentime);

    boolean present_totalgoodsprice = true && (isSetTotalgoodsprice());
    list.add(present_totalgoodsprice);
    if (present_totalgoodsprice)
      list.add(totalgoodsprice);

    boolean present_totalpostprice = true && (isSetTotalpostprice());
    list.add(present_totalpostprice);
    if (present_totalpostprice)
      list.add(totalpostprice);

    boolean present_accgoodsprice = true && (isSetAccgoodsprice());
    list.add(present_accgoodsprice);
    if (present_accgoodsprice)
      list.add(accgoodsprice);

    boolean present_accpostprice = true && (isSetAccpostprice());
    list.add(present_accpostprice);
    if (present_accpostprice)
      list.add(accpostprice);

    boolean present_redpacketgoodsprice = true && (isSetRedpacketgoodsprice());
    list.add(present_redpacketgoodsprice);
    if (present_redpacketgoodsprice)
      list.add(redpacketgoodsprice);

    boolean present_redpacketpostprice = true && (isSetRedpacketpostprice());
    list.add(present_redpacketpostprice);
    if (present_redpacketpostprice)
      list.add(redpacketpostprice);

    boolean present_platformcouponprice = true && (isSetPlatformcouponprice());
    list.add(present_platformcouponprice);
    if (present_platformcouponprice)
      list.add(platformcouponprice);

    boolean present_salercouponprice = true && (isSetSalercouponprice());
    list.add(present_salercouponprice);
    if (present_salercouponprice)
      list.add(salercouponprice);

    boolean present_salerspecialprice = true && (isSetSalerspecialprice());
    list.add(present_salerspecialprice);
    if (present_salerspecialprice)
      list.add(salerspecialprice);

    boolean present_saleragioprice = true && (isSetSaleragioprice());
    list.add(present_saleragioprice);
    if (present_saleragioprice)
      list.add(saleragioprice);

    boolean present_salerfullamount = true && (isSetSalerfullamount());
    list.add(present_salerfullamount);
    if (present_salerfullamount)
      list.add(salerfullamount);

    boolean present_salerchangegoodsprice = true && (isSetSalerchangegoodsprice());
    list.add(present_salerchangegoodsprice);
    if (present_salerchangegoodsprice)
      list.add(salerchangegoodsprice);

    boolean present_salerchangepostprice = true && (isSetSalerchangepostprice());
    list.add(present_salerchangepostprice);
    if (present_salerchangepostprice)
      list.add(salerchangepostprice);

    boolean present_changepostprice = true && (isSetChangepostprice());
    list.add(present_changepostprice);
    if (present_changepostprice)
      list.add(changepostprice);

    boolean present_balance = true && (isSetBalance());
    list.add(present_balance);
    if (present_balance)
      list.add(balance);

    boolean present_accreturnpostprice = true && (isSetAccreturnpostprice());
    list.add(present_accreturnpostprice);
    if (present_accreturnpostprice)
      list.add(accreturnpostprice);

    boolean present_redpacketreturnpostprice = true && (isSetRedpacketreturnpostprice());
    list.add(present_redpacketreturnpostprice);
    if (present_redpacketreturnpostprice)
      list.add(redpacketreturnpostprice);

    return list.hashCode();
  }

  @Override
  public int compareTo(TResponseReportDetail other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInvoicetype()).compareTo(other.isSetInvoicetype());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInvoicetype()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.invoicetype, other.invoicetype);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetParentid()).compareTo(other.isSetParentid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetParentid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.parentid, other.parentid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInvoicenumber()).compareTo(other.isSetInvoicenumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInvoicenumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.invoicenumber, other.invoicenumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBuyerid()).compareTo(other.isSetBuyerid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuyerid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buyerid, other.buyerid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBuyerCompanyname()).compareTo(other.isSetBuyerCompanyname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuyerCompanyname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buyerCompanyname, other.buyerCompanyname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBuyerLinkman()).compareTo(other.isSetBuyerLinkman());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBuyerLinkman()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.buyerLinkman, other.buyerLinkman);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSalerid()).compareTo(other.isSetSalerid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalerid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salerid, other.salerid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHappentime()).compareTo(other.isSetHappentime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHappentime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.happentime, other.happentime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalgoodsprice()).compareTo(other.isSetTotalgoodsprice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalgoodsprice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalgoodsprice, other.totalgoodsprice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalpostprice()).compareTo(other.isSetTotalpostprice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalpostprice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalpostprice, other.totalpostprice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccgoodsprice()).compareTo(other.isSetAccgoodsprice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccgoodsprice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accgoodsprice, other.accgoodsprice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccpostprice()).compareTo(other.isSetAccpostprice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccpostprice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accpostprice, other.accpostprice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRedpacketgoodsprice()).compareTo(other.isSetRedpacketgoodsprice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRedpacketgoodsprice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.redpacketgoodsprice, other.redpacketgoodsprice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRedpacketpostprice()).compareTo(other.isSetRedpacketpostprice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRedpacketpostprice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.redpacketpostprice, other.redpacketpostprice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlatformcouponprice()).compareTo(other.isSetPlatformcouponprice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlatformcouponprice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platformcouponprice, other.platformcouponprice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSalercouponprice()).compareTo(other.isSetSalercouponprice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalercouponprice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salercouponprice, other.salercouponprice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSalerspecialprice()).compareTo(other.isSetSalerspecialprice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalerspecialprice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salerspecialprice, other.salerspecialprice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSaleragioprice()).compareTo(other.isSetSaleragioprice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSaleragioprice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.saleragioprice, other.saleragioprice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSalerfullamount()).compareTo(other.isSetSalerfullamount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalerfullamount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salerfullamount, other.salerfullamount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSalerchangegoodsprice()).compareTo(other.isSetSalerchangegoodsprice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalerchangegoodsprice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salerchangegoodsprice, other.salerchangegoodsprice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSalerchangepostprice()).compareTo(other.isSetSalerchangepostprice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalerchangepostprice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salerchangepostprice, other.salerchangepostprice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChangepostprice()).compareTo(other.isSetChangepostprice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChangepostprice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.changepostprice, other.changepostprice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBalance()).compareTo(other.isSetBalance());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBalance()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.balance, other.balance);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccreturnpostprice()).compareTo(other.isSetAccreturnpostprice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccreturnpostprice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accreturnpostprice, other.accreturnpostprice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRedpacketreturnpostprice()).compareTo(other.isSetRedpacketreturnpostprice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRedpacketreturnpostprice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.redpacketreturnpostprice, other.redpacketreturnpostprice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TResponseReportDetail(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetInvoicetype()) {
      if (!first) sb.append(", ");
      sb.append("invoicetype:");
      sb.append(this.invoicetype);
      first = false;
    }
    if (isSetParentid()) {
      if (!first) sb.append(", ");
      sb.append("parentid:");
      sb.append(this.parentid);
      first = false;
    }
    if (isSetInvoicenumber()) {
      if (!first) sb.append(", ");
      sb.append("invoicenumber:");
      if (this.invoicenumber == null) {
        sb.append("null");
      } else {
        sb.append(this.invoicenumber);
      }
      first = false;
    }
    if (isSetBuyerid()) {
      if (!first) sb.append(", ");
      sb.append("buyerid:");
      sb.append(this.buyerid);
      first = false;
    }
    if (isSetBuyerCompanyname()) {
      if (!first) sb.append(", ");
      sb.append("buyerCompanyname:");
      if (this.buyerCompanyname == null) {
        sb.append("null");
      } else {
        sb.append(this.buyerCompanyname);
      }
      first = false;
    }
    if (isSetBuyerLinkman()) {
      if (!first) sb.append(", ");
      sb.append("buyerLinkman:");
      if (this.buyerLinkman == null) {
        sb.append("null");
      } else {
        sb.append(this.buyerLinkman);
      }
      first = false;
    }
    if (isSetSalerid()) {
      if (!first) sb.append(", ");
      sb.append("salerid:");
      sb.append(this.salerid);
      first = false;
    }
    if (isSetHappentime()) {
      if (!first) sb.append(", ");
      sb.append("happentime:");
      sb.append(this.happentime);
      first = false;
    }
    if (isSetTotalgoodsprice()) {
      if (!first) sb.append(", ");
      sb.append("totalgoodsprice:");
      sb.append(this.totalgoodsprice);
      first = false;
    }
    if (isSetTotalpostprice()) {
      if (!first) sb.append(", ");
      sb.append("totalpostprice:");
      sb.append(this.totalpostprice);
      first = false;
    }
    if (isSetAccgoodsprice()) {
      if (!first) sb.append(", ");
      sb.append("accgoodsprice:");
      sb.append(this.accgoodsprice);
      first = false;
    }
    if (isSetAccpostprice()) {
      if (!first) sb.append(", ");
      sb.append("accpostprice:");
      sb.append(this.accpostprice);
      first = false;
    }
    if (isSetRedpacketgoodsprice()) {
      if (!first) sb.append(", ");
      sb.append("redpacketgoodsprice:");
      sb.append(this.redpacketgoodsprice);
      first = false;
    }
    if (isSetRedpacketpostprice()) {
      if (!first) sb.append(", ");
      sb.append("redpacketpostprice:");
      sb.append(this.redpacketpostprice);
      first = false;
    }
    if (isSetPlatformcouponprice()) {
      if (!first) sb.append(", ");
      sb.append("platformcouponprice:");
      sb.append(this.platformcouponprice);
      first = false;
    }
    if (isSetSalercouponprice()) {
      if (!first) sb.append(", ");
      sb.append("salercouponprice:");
      sb.append(this.salercouponprice);
      first = false;
    }
    if (isSetSalerspecialprice()) {
      if (!first) sb.append(", ");
      sb.append("salerspecialprice:");
      sb.append(this.salerspecialprice);
      first = false;
    }
    if (isSetSaleragioprice()) {
      if (!first) sb.append(", ");
      sb.append("saleragioprice:");
      sb.append(this.saleragioprice);
      first = false;
    }
    if (isSetSalerfullamount()) {
      if (!first) sb.append(", ");
      sb.append("salerfullamount:");
      sb.append(this.salerfullamount);
      first = false;
    }
    if (isSetSalerchangegoodsprice()) {
      if (!first) sb.append(", ");
      sb.append("salerchangegoodsprice:");
      sb.append(this.salerchangegoodsprice);
      first = false;
    }
    if (isSetSalerchangepostprice()) {
      if (!first) sb.append(", ");
      sb.append("salerchangepostprice:");
      sb.append(this.salerchangepostprice);
      first = false;
    }
    if (isSetChangepostprice()) {
      if (!first) sb.append(", ");
      sb.append("changepostprice:");
      sb.append(this.changepostprice);
      first = false;
    }
    if (isSetBalance()) {
      if (!first) sb.append(", ");
      sb.append("balance:");
      sb.append(this.balance);
      first = false;
    }
    if (isSetAccreturnpostprice()) {
      if (!first) sb.append(", ");
      sb.append("accreturnpostprice:");
      sb.append(this.accreturnpostprice);
      first = false;
    }
    if (isSetRedpacketreturnpostprice()) {
      if (!first) sb.append(", ");
      sb.append("redpacketreturnpostprice:");
      sb.append(this.redpacketreturnpostprice);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TResponseReportDetailStandardSchemeFactory implements SchemeFactory {
    public TResponseReportDetailStandardScheme getScheme() {
      return new TResponseReportDetailStandardScheme();
    }
  }

  private static class TResponseReportDetailStandardScheme extends StandardScheme<TResponseReportDetail> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TResponseReportDetail struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // INVOICETYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.invoicetype = iprot.readByte();
              struct.setInvoicetypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PARENTID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.parentid = iprot.readI32();
              struct.setParentidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // INVOICENUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.invoicenumber = iprot.readString();
              struct.setInvoicenumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // BUYERID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.buyerid = iprot.readI32();
              struct.setBuyeridIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // BUYER_COMPANYNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.buyerCompanyname = iprot.readString();
              struct.setBuyerCompanynameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // BUYER_LINKMAN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.buyerLinkman = iprot.readString();
              struct.setBuyerLinkmanIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // SALERID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.salerid = iprot.readI32();
              struct.setSaleridIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // HAPPENTIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.happentime = iprot.readI64();
              struct.setHappentimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // TOTALGOODSPRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.totalgoodsprice = iprot.readDouble();
              struct.setTotalgoodspriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // TOTALPOSTPRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.totalpostprice = iprot.readDouble();
              struct.setTotalpostpriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // ACCGOODSPRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.accgoodsprice = iprot.readDouble();
              struct.setAccgoodspriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // ACCPOSTPRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.accpostprice = iprot.readDouble();
              struct.setAccpostpriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // REDPACKETGOODSPRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.redpacketgoodsprice = iprot.readDouble();
              struct.setRedpacketgoodspriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // REDPACKETPOSTPRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.redpacketpostprice = iprot.readDouble();
              struct.setRedpacketpostpriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // PLATFORMCOUPONPRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.platformcouponprice = iprot.readDouble();
              struct.setPlatformcouponpriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // SALERCOUPONPRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.salercouponprice = iprot.readDouble();
              struct.setSalercouponpriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // SALERSPECIALPRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.salerspecialprice = iprot.readDouble();
              struct.setSalerspecialpriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // SALERAGIOPRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.saleragioprice = iprot.readDouble();
              struct.setSaleragiopriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // SALERFULLAMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.salerfullamount = iprot.readDouble();
              struct.setSalerfullamountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // SALERCHANGEGOODSPRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.salerchangegoodsprice = iprot.readDouble();
              struct.setSalerchangegoodspriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // SALERCHANGEPOSTPRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.salerchangepostprice = iprot.readDouble();
              struct.setSalerchangepostpriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // CHANGEPOSTPRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.changepostprice = iprot.readDouble();
              struct.setChangepostpriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // BALANCE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.balance = iprot.readDouble();
              struct.setBalanceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // ACCRETURNPOSTPRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.accreturnpostprice = iprot.readDouble();
              struct.setAccreturnpostpriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // REDPACKETRETURNPOSTPRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.redpacketreturnpostprice = iprot.readDouble();
              struct.setRedpacketreturnpostpriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TResponseReportDetail struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI64(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetInvoicetype()) {
        oprot.writeFieldBegin(INVOICETYPE_FIELD_DESC);
        oprot.writeByte(struct.invoicetype);
        oprot.writeFieldEnd();
      }
      if (struct.isSetParentid()) {
        oprot.writeFieldBegin(PARENTID_FIELD_DESC);
        oprot.writeI32(struct.parentid);
        oprot.writeFieldEnd();
      }
      if (struct.invoicenumber != null) {
        if (struct.isSetInvoicenumber()) {
          oprot.writeFieldBegin(INVOICENUMBER_FIELD_DESC);
          oprot.writeString(struct.invoicenumber);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetBuyerid()) {
        oprot.writeFieldBegin(BUYERID_FIELD_DESC);
        oprot.writeI32(struct.buyerid);
        oprot.writeFieldEnd();
      }
      if (struct.buyerCompanyname != null) {
        if (struct.isSetBuyerCompanyname()) {
          oprot.writeFieldBegin(BUYER_COMPANYNAME_FIELD_DESC);
          oprot.writeString(struct.buyerCompanyname);
          oprot.writeFieldEnd();
        }
      }
      if (struct.buyerLinkman != null) {
        if (struct.isSetBuyerLinkman()) {
          oprot.writeFieldBegin(BUYER_LINKMAN_FIELD_DESC);
          oprot.writeString(struct.buyerLinkman);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetSalerid()) {
        oprot.writeFieldBegin(SALERID_FIELD_DESC);
        oprot.writeI32(struct.salerid);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHappentime()) {
        oprot.writeFieldBegin(HAPPENTIME_FIELD_DESC);
        oprot.writeI64(struct.happentime);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTotalgoodsprice()) {
        oprot.writeFieldBegin(TOTALGOODSPRICE_FIELD_DESC);
        oprot.writeDouble(struct.totalgoodsprice);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTotalpostprice()) {
        oprot.writeFieldBegin(TOTALPOSTPRICE_FIELD_DESC);
        oprot.writeDouble(struct.totalpostprice);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAccgoodsprice()) {
        oprot.writeFieldBegin(ACCGOODSPRICE_FIELD_DESC);
        oprot.writeDouble(struct.accgoodsprice);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAccpostprice()) {
        oprot.writeFieldBegin(ACCPOSTPRICE_FIELD_DESC);
        oprot.writeDouble(struct.accpostprice);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRedpacketgoodsprice()) {
        oprot.writeFieldBegin(REDPACKETGOODSPRICE_FIELD_DESC);
        oprot.writeDouble(struct.redpacketgoodsprice);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRedpacketpostprice()) {
        oprot.writeFieldBegin(REDPACKETPOSTPRICE_FIELD_DESC);
        oprot.writeDouble(struct.redpacketpostprice);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPlatformcouponprice()) {
        oprot.writeFieldBegin(PLATFORMCOUPONPRICE_FIELD_DESC);
        oprot.writeDouble(struct.platformcouponprice);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSalercouponprice()) {
        oprot.writeFieldBegin(SALERCOUPONPRICE_FIELD_DESC);
        oprot.writeDouble(struct.salercouponprice);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSalerspecialprice()) {
        oprot.writeFieldBegin(SALERSPECIALPRICE_FIELD_DESC);
        oprot.writeDouble(struct.salerspecialprice);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSaleragioprice()) {
        oprot.writeFieldBegin(SALERAGIOPRICE_FIELD_DESC);
        oprot.writeDouble(struct.saleragioprice);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSalerfullamount()) {
        oprot.writeFieldBegin(SALERFULLAMOUNT_FIELD_DESC);
        oprot.writeDouble(struct.salerfullamount);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSalerchangegoodsprice()) {
        oprot.writeFieldBegin(SALERCHANGEGOODSPRICE_FIELD_DESC);
        oprot.writeDouble(struct.salerchangegoodsprice);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSalerchangepostprice()) {
        oprot.writeFieldBegin(SALERCHANGEPOSTPRICE_FIELD_DESC);
        oprot.writeDouble(struct.salerchangepostprice);
        oprot.writeFieldEnd();
      }
      if (struct.isSetChangepostprice()) {
        oprot.writeFieldBegin(CHANGEPOSTPRICE_FIELD_DESC);
        oprot.writeDouble(struct.changepostprice);
        oprot.writeFieldEnd();
      }
      if (struct.isSetBalance()) {
        oprot.writeFieldBegin(BALANCE_FIELD_DESC);
        oprot.writeDouble(struct.balance);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAccreturnpostprice()) {
        oprot.writeFieldBegin(ACCRETURNPOSTPRICE_FIELD_DESC);
        oprot.writeDouble(struct.accreturnpostprice);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRedpacketreturnpostprice()) {
        oprot.writeFieldBegin(REDPACKETRETURNPOSTPRICE_FIELD_DESC);
        oprot.writeDouble(struct.redpacketreturnpostprice);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TResponseReportDetailTupleSchemeFactory implements SchemeFactory {
    public TResponseReportDetailTupleScheme getScheme() {
      return new TResponseReportDetailTupleScheme();
    }
  }

  private static class TResponseReportDetailTupleScheme extends TupleScheme<TResponseReportDetail> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TResponseReportDetail struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetInvoicetype()) {
        optionals.set(1);
      }
      if (struct.isSetParentid()) {
        optionals.set(2);
      }
      if (struct.isSetInvoicenumber()) {
        optionals.set(3);
      }
      if (struct.isSetBuyerid()) {
        optionals.set(4);
      }
      if (struct.isSetBuyerCompanyname()) {
        optionals.set(5);
      }
      if (struct.isSetBuyerLinkman()) {
        optionals.set(6);
      }
      if (struct.isSetSalerid()) {
        optionals.set(7);
      }
      if (struct.isSetHappentime()) {
        optionals.set(8);
      }
      if (struct.isSetTotalgoodsprice()) {
        optionals.set(9);
      }
      if (struct.isSetTotalpostprice()) {
        optionals.set(10);
      }
      if (struct.isSetAccgoodsprice()) {
        optionals.set(11);
      }
      if (struct.isSetAccpostprice()) {
        optionals.set(12);
      }
      if (struct.isSetRedpacketgoodsprice()) {
        optionals.set(13);
      }
      if (struct.isSetRedpacketpostprice()) {
        optionals.set(14);
      }
      if (struct.isSetPlatformcouponprice()) {
        optionals.set(15);
      }
      if (struct.isSetSalercouponprice()) {
        optionals.set(16);
      }
      if (struct.isSetSalerspecialprice()) {
        optionals.set(17);
      }
      if (struct.isSetSaleragioprice()) {
        optionals.set(18);
      }
      if (struct.isSetSalerfullamount()) {
        optionals.set(19);
      }
      if (struct.isSetSalerchangegoodsprice()) {
        optionals.set(20);
      }
      if (struct.isSetSalerchangepostprice()) {
        optionals.set(21);
      }
      if (struct.isSetChangepostprice()) {
        optionals.set(22);
      }
      if (struct.isSetBalance()) {
        optionals.set(23);
      }
      if (struct.isSetAccreturnpostprice()) {
        optionals.set(24);
      }
      if (struct.isSetRedpacketreturnpostprice()) {
        optionals.set(25);
      }
      oprot.writeBitSet(optionals, 26);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetInvoicetype()) {
        oprot.writeByte(struct.invoicetype);
      }
      if (struct.isSetParentid()) {
        oprot.writeI32(struct.parentid);
      }
      if (struct.isSetInvoicenumber()) {
        oprot.writeString(struct.invoicenumber);
      }
      if (struct.isSetBuyerid()) {
        oprot.writeI32(struct.buyerid);
      }
      if (struct.isSetBuyerCompanyname()) {
        oprot.writeString(struct.buyerCompanyname);
      }
      if (struct.isSetBuyerLinkman()) {
        oprot.writeString(struct.buyerLinkman);
      }
      if (struct.isSetSalerid()) {
        oprot.writeI32(struct.salerid);
      }
      if (struct.isSetHappentime()) {
        oprot.writeI64(struct.happentime);
      }
      if (struct.isSetTotalgoodsprice()) {
        oprot.writeDouble(struct.totalgoodsprice);
      }
      if (struct.isSetTotalpostprice()) {
        oprot.writeDouble(struct.totalpostprice);
      }
      if (struct.isSetAccgoodsprice()) {
        oprot.writeDouble(struct.accgoodsprice);
      }
      if (struct.isSetAccpostprice()) {
        oprot.writeDouble(struct.accpostprice);
      }
      if (struct.isSetRedpacketgoodsprice()) {
        oprot.writeDouble(struct.redpacketgoodsprice);
      }
      if (struct.isSetRedpacketpostprice()) {
        oprot.writeDouble(struct.redpacketpostprice);
      }
      if (struct.isSetPlatformcouponprice()) {
        oprot.writeDouble(struct.platformcouponprice);
      }
      if (struct.isSetSalercouponprice()) {
        oprot.writeDouble(struct.salercouponprice);
      }
      if (struct.isSetSalerspecialprice()) {
        oprot.writeDouble(struct.salerspecialprice);
      }
      if (struct.isSetSaleragioprice()) {
        oprot.writeDouble(struct.saleragioprice);
      }
      if (struct.isSetSalerfullamount()) {
        oprot.writeDouble(struct.salerfullamount);
      }
      if (struct.isSetSalerchangegoodsprice()) {
        oprot.writeDouble(struct.salerchangegoodsprice);
      }
      if (struct.isSetSalerchangepostprice()) {
        oprot.writeDouble(struct.salerchangepostprice);
      }
      if (struct.isSetChangepostprice()) {
        oprot.writeDouble(struct.changepostprice);
      }
      if (struct.isSetBalance()) {
        oprot.writeDouble(struct.balance);
      }
      if (struct.isSetAccreturnpostprice()) {
        oprot.writeDouble(struct.accreturnpostprice);
      }
      if (struct.isSetRedpacketreturnpostprice()) {
        oprot.writeDouble(struct.redpacketreturnpostprice);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TResponseReportDetail struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(26);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.invoicetype = iprot.readByte();
        struct.setInvoicetypeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.parentid = iprot.readI32();
        struct.setParentidIsSet(true);
      }
      if (incoming.get(3)) {
        struct.invoicenumber = iprot.readString();
        struct.setInvoicenumberIsSet(true);
      }
      if (incoming.get(4)) {
        struct.buyerid = iprot.readI32();
        struct.setBuyeridIsSet(true);
      }
      if (incoming.get(5)) {
        struct.buyerCompanyname = iprot.readString();
        struct.setBuyerCompanynameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.buyerLinkman = iprot.readString();
        struct.setBuyerLinkmanIsSet(true);
      }
      if (incoming.get(7)) {
        struct.salerid = iprot.readI32();
        struct.setSaleridIsSet(true);
      }
      if (incoming.get(8)) {
        struct.happentime = iprot.readI64();
        struct.setHappentimeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.totalgoodsprice = iprot.readDouble();
        struct.setTotalgoodspriceIsSet(true);
      }
      if (incoming.get(10)) {
        struct.totalpostprice = iprot.readDouble();
        struct.setTotalpostpriceIsSet(true);
      }
      if (incoming.get(11)) {
        struct.accgoodsprice = iprot.readDouble();
        struct.setAccgoodspriceIsSet(true);
      }
      if (incoming.get(12)) {
        struct.accpostprice = iprot.readDouble();
        struct.setAccpostpriceIsSet(true);
      }
      if (incoming.get(13)) {
        struct.redpacketgoodsprice = iprot.readDouble();
        struct.setRedpacketgoodspriceIsSet(true);
      }
      if (incoming.get(14)) {
        struct.redpacketpostprice = iprot.readDouble();
        struct.setRedpacketpostpriceIsSet(true);
      }
      if (incoming.get(15)) {
        struct.platformcouponprice = iprot.readDouble();
        struct.setPlatformcouponpriceIsSet(true);
      }
      if (incoming.get(16)) {
        struct.salercouponprice = iprot.readDouble();
        struct.setSalercouponpriceIsSet(true);
      }
      if (incoming.get(17)) {
        struct.salerspecialprice = iprot.readDouble();
        struct.setSalerspecialpriceIsSet(true);
      }
      if (incoming.get(18)) {
        struct.saleragioprice = iprot.readDouble();
        struct.setSaleragiopriceIsSet(true);
      }
      if (incoming.get(19)) {
        struct.salerfullamount = iprot.readDouble();
        struct.setSalerfullamountIsSet(true);
      }
      if (incoming.get(20)) {
        struct.salerchangegoodsprice = iprot.readDouble();
        struct.setSalerchangegoodspriceIsSet(true);
      }
      if (incoming.get(21)) {
        struct.salerchangepostprice = iprot.readDouble();
        struct.setSalerchangepostpriceIsSet(true);
      }
      if (incoming.get(22)) {
        struct.changepostprice = iprot.readDouble();
        struct.setChangepostpriceIsSet(true);
      }
      if (incoming.get(23)) {
        struct.balance = iprot.readDouble();
        struct.setBalanceIsSet(true);
      }
      if (incoming.get(24)) {
        struct.accreturnpostprice = iprot.readDouble();
        struct.setAccreturnpostpriceIsSet(true);
      }
      if (incoming.get(25)) {
        struct.redpacketreturnpostprice = iprot.readDouble();
        struct.setRedpacketreturnpostpriceIsSet(true);
      }
    }
  }

}

