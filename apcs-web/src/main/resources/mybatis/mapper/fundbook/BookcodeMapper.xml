<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yjy.repository.mapper.BookcodeMapper">
  <resultMap id="BaseResultMap" type="com.yjy.entity.Bookcode">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="fundtype" jdbcType="INTEGER" property="fundtype" />
    <result column="BookCodeOne" jdbcType="INTEGER" property="bookcodeone" />
    <result column="BookCodeTwo" jdbcType="INTEGER" property="bookcodetwo" />
    <result column="BookCodeThree" jdbcType="INTEGER" property="bookcodethree" />
    <result column="BookCodeOneDesc" jdbcType="VARCHAR" property="bookcodeonedesc" />
    <result column="BookCodeTwoDesc" jdbcType="VARCHAR" property="bookcodetwodesc" />
    <result column="BookCodeThreeDesc" jdbcType="VARCHAR" property="bookcodethreedesc" />
    <result column="Idx" jdbcType="INTEGER" property="idx" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, fundtype, BookCodeOne, BookCodeTwo, BookCodeThree, BookCodeOneDesc, BookCodeTwoDesc, 
    BookCodeThreeDesc, Idx
  </sql>
  <select id="selectByExample" parameterType="com.yjy.entity.BookcodeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bookcode
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yjy.entity.BookcodeExample">
    delete from bookcode
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.yjy.entity.Bookcode">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bookcode
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fundtype != null">
        fundtype,
      </if>
      <if test="bookcodeone != null">
        BookCodeOne,
      </if>
      <if test="bookcodetwo != null">
        BookCodeTwo,
      </if>
      <if test="bookcodethree != null">
        BookCodeThree,
      </if>
      <if test="bookcodeonedesc != null">
        BookCodeOneDesc,
      </if>
      <if test="bookcodetwodesc != null">
        BookCodeTwoDesc,
      </if>
      <if test="bookcodethreedesc != null">
        BookCodeThreeDesc,
      </if>
      <if test="idx != null">
        Idx,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fundtype != null">
        #{fundtype,jdbcType=INTEGER},
      </if>
      <if test="bookcodeone != null">
        #{bookcodeone,jdbcType=INTEGER},
      </if>
      <if test="bookcodetwo != null">
        #{bookcodetwo,jdbcType=INTEGER},
      </if>
      <if test="bookcodethree != null">
        #{bookcodethree,jdbcType=INTEGER},
      </if>
      <if test="bookcodeonedesc != null">
        #{bookcodeonedesc,jdbcType=VARCHAR},
      </if>
      <if test="bookcodetwodesc != null">
        #{bookcodetwodesc,jdbcType=VARCHAR},
      </if>
      <if test="bookcodethreedesc != null">
        #{bookcodethreedesc,jdbcType=VARCHAR},
      </if>
      <if test="idx != null">
        #{idx,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yjy.entity.BookcodeExample" resultType="java.lang.Integer">
    select count(*) from bookcode
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bookcode
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fundtype != null">
        fundtype = #{record.fundtype,jdbcType=INTEGER},
      </if>
      <if test="record.bookcodeone != null">
        BookCodeOne = #{record.bookcodeone,jdbcType=INTEGER},
      </if>
      <if test="record.bookcodetwo != null">
        BookCodeTwo = #{record.bookcodetwo,jdbcType=INTEGER},
      </if>
      <if test="record.bookcodethree != null">
        BookCodeThree = #{record.bookcodethree,jdbcType=INTEGER},
      </if>
      <if test="record.bookcodeonedesc != null">
        BookCodeOneDesc = #{record.bookcodeonedesc,jdbcType=VARCHAR},
      </if>
      <if test="record.bookcodetwodesc != null">
        BookCodeTwoDesc = #{record.bookcodetwodesc,jdbcType=VARCHAR},
      </if>
      <if test="record.bookcodethreedesc != null">
        BookCodeThreeDesc = #{record.bookcodethreedesc,jdbcType=VARCHAR},
      </if>
      <if test="record.idx != null">
        Idx = #{record.idx,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bookcode
    set Id = #{record.id,jdbcType=INTEGER},
      fundtype = #{record.fundtype,jdbcType=INTEGER},
      BookCodeOne = #{record.bookcodeone,jdbcType=INTEGER},
      BookCodeTwo = #{record.bookcodetwo,jdbcType=INTEGER},
      BookCodeThree = #{record.bookcodethree,jdbcType=INTEGER},
      BookCodeOneDesc = #{record.bookcodeonedesc,jdbcType=VARCHAR},
      BookCodeTwoDesc = #{record.bookcodetwodesc,jdbcType=VARCHAR},
      BookCodeThreeDesc = #{record.bookcodethreedesc,jdbcType=VARCHAR},
      Idx = #{record.idx,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yjy.entity.Bookcode">
    update bookcode
    <set>
      <if test="fundtype != null">
        fundtype = #{fundtype,jdbcType=INTEGER},
      </if>
      <if test="bookcodeone != null">
        BookCodeOne = #{bookcodeone,jdbcType=INTEGER},
      </if>
      <if test="bookcodetwo != null">
        BookCodeTwo = #{bookcodetwo,jdbcType=INTEGER},
      </if>
      <if test="bookcodethree != null">
        BookCodeThree = #{bookcodethree,jdbcType=INTEGER},
      </if>
      <if test="bookcodeonedesc != null">
        BookCodeOneDesc = #{bookcodeonedesc,jdbcType=VARCHAR},
      </if>
      <if test="bookcodetwodesc != null">
        BookCodeTwoDesc = #{bookcodetwodesc,jdbcType=VARCHAR},
      </if>
      <if test="bookcodethreedesc != null">
        BookCodeThreeDesc = #{bookcodethreedesc,jdbcType=VARCHAR},
      </if>
      <if test="idx != null">
        Idx = #{idx,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.yjy.entity.Bookcode">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="PlatFormRole" jdbcType="INTEGER" property="platformrole" />
    <result column="EntryUserRole" jdbcType="INTEGER" property="entryuserrole" />
    <result column="AccBookNumber" jdbcType="INTEGER" property="accbooknumber" />
    <result column="PName" jdbcType="VARCHAR" property="pname" />
    <result column="EName" jdbcType="VARCHAR" property="ename" />
    <result column="AName" jdbcType="VARCHAR" property="aname" />
    <result column="Idx" jdbcType="INTEGER" property="idx" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, PlatFormRole, EntryUserRole, AccBookNumber, PName, EName, AName, Idx
  </sql>
  <select id="selectByExample" parameterType="com.yjy.entity.BookcodeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bookcode
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yjy.entity.BookcodeExample">
    delete from bookcode
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.yjy.entity.Bookcode">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bookcode
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="platformrole != null">
        PlatFormRole,
      </if>
      <if test="entryuserrole != null">
        EntryUserRole,
      </if>
      <if test="accbooknumber != null">
        AccBookNumber,
      </if>
      <if test="pname != null">
        PName,
      </if>
      <if test="ename != null">
        EName,
      </if>
      <if test="aname != null">
        AName,
      </if>
      <if test="idx != null">
        Idx,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="platformrole != null">
        #{platformrole,jdbcType=INTEGER},
      </if>
      <if test="entryuserrole != null">
        #{entryuserrole,jdbcType=INTEGER},
      </if>
      <if test="accbooknumber != null">
        #{accbooknumber,jdbcType=INTEGER},
      </if>
      <if test="pname != null">
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="ename != null">
        #{ename,jdbcType=VARCHAR},
      </if>
      <if test="aname != null">
        #{aname,jdbcType=VARCHAR},
      </if>
      <if test="idx != null">
        #{idx,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yjy.entity.BookcodeExample" resultType="java.lang.Integer">
    select count(*) from bookcode
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bookcode
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.platformrole != null">
        PlatFormRole = #{record.platformrole,jdbcType=INTEGER},
      </if>
      <if test="record.entryuserrole != null">
        EntryUserRole = #{record.entryuserrole,jdbcType=INTEGER},
      </if>
      <if test="record.accbooknumber != null">
        AccBookNumber = #{record.accbooknumber,jdbcType=INTEGER},
      </if>
      <if test="record.pname != null">
        PName = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.ename != null">
        EName = #{record.ename,jdbcType=VARCHAR},
      </if>
      <if test="record.aname != null">
        AName = #{record.aname,jdbcType=VARCHAR},
      </if>
      <if test="record.idx != null">
        Idx = #{record.idx,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bookcode
    set Id = #{record.id,jdbcType=INTEGER},
      PlatFormRole = #{record.platformrole,jdbcType=INTEGER},
      EntryUserRole = #{record.entryuserrole,jdbcType=INTEGER},
      AccBookNumber = #{record.accbooknumber,jdbcType=INTEGER},
      PName = #{record.pname,jdbcType=VARCHAR},
      EName = #{record.ename,jdbcType=VARCHAR},
      AName = #{record.aname,jdbcType=VARCHAR},
      Idx = #{record.idx,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yjy.entity.Bookcode">
    update bookcode
    <set>
      <if test="platformrole != null">
        PlatFormRole = #{platformrole,jdbcType=INTEGER},
      </if>
      <if test="entryuserrole != null">
        EntryUserRole = #{entryuserrole,jdbcType=INTEGER},
      </if>
      <if test="accbooknumber != null">
        AccBookNumber = #{accbooknumber,jdbcType=INTEGER},
      </if>
      <if test="pname != null">
        PName = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="ename != null">
        EName = #{ename,jdbcType=VARCHAR},
      </if>
      <if test="aname != null">
        AName = #{aname,jdbcType=VARCHAR},
      </if>
      <if test="idx != null">
        Idx = #{idx,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>