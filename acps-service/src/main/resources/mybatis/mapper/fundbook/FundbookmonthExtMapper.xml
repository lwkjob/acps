<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yjy.repository.mapper.fundbook.FundbookMonthExtMapper" >
  <resultMap id="BaseResultMap" type="com.yjy.common.entity.fundbook.Fundbookmonth" >
    <id column="Id" property="id" jdbcType="BIGINT" />
    <result column="BookId" property="bookid" jdbcType="BIGINT" />
    <result column="BookCode" property="bookcode" jdbcType="VARCHAR" />
    <result column="UserId" property="userid" jdbcType="INTEGER" />
    <result column="AreaCode" property="areacode" jdbcType="INTEGER" />
    <result column="BookDate" property="bookdate" jdbcType="INTEGER" />
    <result column="PrevBalance" property="prevbalance" jdbcType="DECIMAL" />
    <result column="HappenDebit" property="happendebit" jdbcType="DECIMAL" />
    <result column="HappenCredit" property="happencredit" jdbcType="DECIMAL" />
    <result column="Balance" property="balance" jdbcType="DECIMAL" />
  </resultMap>


  <sql id="Base_Column_List" >
    Id, BookId, BookCode, UserId, AreaCode, BookDate, PrevBalance, HappenDebit, HappenCredit,
    Balance
  </sql>


  <delete id="deleteFundbookMonth" parameterType="map">
    DELETE  FROM ${tableName}
    <where>
      <if test="fundBookCodes !=null and fundBookCodes.size()!=0">
        AND BookCode IN
        <foreach collection="fundBookCodes" index="i" open="(" close=")" item="fundBookCode" separator=",">
            #{fundBookCode.bookcode}
        </foreach>
      </if>

      <if test="users !=null and users.size()!=0">
        AND userid in
        <foreach collection="users" index="i" open="(" close=")"  item="user" separator=",">
            #{user.userid}
        </foreach>
      </if>
    </where>
  </delete>

  <insert id="batchInsert" parameterType="map">
    INSERT  INTO ${tablename}
    (BookCode, UserId, AreaCode, BookDate, PrevBalance, HappenDebit, HappenCredit, Balance) VALUES
    <foreach collection="fundbookmonths" item="fundbookmonth" open="" close=""  separator="," >
      (#{fundbookmonth.bookcode},
      #{fundbookmonth.userid},
      #{fundbookmonth.areacode},
      #{fundbookmonth.bookdate},
      #{fundbookmonth.prevbalance},
      #{fundbookmonth.happendebit},
      #{fundbookmonth.happencredit},
      #{fundbookmonth.balance})
    </foreach>

  </insert>

  <delete id="deleteAll" parameterType="map">
    TRUNCATE TABLE ${tableName}

  </delete>


  <select id="selectByExample" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from ${tableName}

    <where>

      <if test="fundbookmonth.userid!=null and fundbookmonth.userid!=0">
        and userid=#{fundbookmonth.userid}
      </if>

      <if test="fundbookmonth.bookcode!=null">
        and bookcode=#{fundbookmonth.bookcode}
      </if>

    </where>

  </select>

  <select id="selectByExamplePage" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
     from ${tableName}

    <where>

      <if test="fundbookmonth.userid!=null and fundbookmonth.userid!=0">
        and userid=#{fundbookmonth.userid}
      </if>

      <if test="fundbookmonth.bookcode!=null">
        and bookcode=#{fundbookmonth.bookcode}
      </if>
      <if test="userids !=null and userids.size()!=0">
        AND userid in
        <foreach collection="userids"  open="(" close=")"  item="userid" separator=",">
          #{userid}
        </foreach>
      </if>
    </where>
  </select>

  <select id="loadMonthRrport" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
     from ${tableName}
    <where>
      <if test="userids !=null and userids.size()!=0">
        AND userid in
        <foreach collection="userids"  open="(" close=")"  item="userid" separator=",">
          #{userid}
        </foreach>
      </if>
      AND  Balance !=0
    </where>
  </select>


  <select id="findMonthTemp" resultMap="BaseResultMap" parameterType="map" >
    select
      BookCode, UserId,HappenDebit, HappenCredit,Balance
     from ${tableName}
  </select>


  <select id="createFundmonthtemp" resultMap="BaseResultMap" parameterType="map" >
       CREATE  TABLE ${fundmonthtemptableName} SELECT a.Debit happendebit,a.Credit happencredit,a.BookCode,a.UserId,b.Balance FROM (
        SELECT a.Debit,a.Credit, a.UserId,a.BookCode,a.HappenTime,MAX(b.BookId) AS BookId
        FROM (
            SELECT sum(Debit) Debit,sum(Credit) Credit,UserId,BookCode,max(HappenTime) HappenTime FROM ypzdw_fundcapital.${fundbooktableName}
            GROUP BY UserId,BookCode
        ) a
        JOIN ypzdw_fundcapital.${fundbooktableName} b ON a.UserId = b.UserId AND a.BookCode = b.BookCode AND a.HappenTime = b.HappenTime
        GROUP BY a.UserId,a.BookCode,a.HappenTime
    ) a
    JOIN ypzdw_fundcapital.${fundbooktableName} b ON a.UserId = b.UserId AND a.BookCode = b.BookCode AND a.HappenTime = b.HappenTime AND a.BookId = b.BookId
    ORDER BY BookCode,UserId
  </select>



</mapper>