<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yjy.repository.mapper.FundbookcodeMapper" >
  <resultMap id="BaseResultMap" type="com.yjy.entity.Fundbookcode" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="FundType" property="fundtype" jdbcType="INTEGER" />
    <result column="BookCodeOne" property="bookcodeone" jdbcType="INTEGER" />
    <result column="RoleCode" property="rolecode" jdbcType="INTEGER" />
    <result column="BookCodeTwo" property="bookcodetwo" jdbcType="INTEGER" />
    <result column="BookCodeThree" property="bookcodethree" jdbcType="INTEGER" />
    <result column="BookCode" property="bookcode" jdbcType="VARCHAR" />
    <result column="BookCodeDesc" property="bookcodedesc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Id, FundType, BookCodeOne, RoleCode, BookCodeTwo, BookCodeThree, BookCode, BookCodeDesc
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yjy.entity.FundbookcodeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fundbookcode
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yjy.entity.FundbookcodeExample" >
    delete from fundbookcode
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="com.yjy.entity.Fundbookcode" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fundbookcode
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fundtype != null" >
        FundType,
      </if>
      <if test="bookcodeone != null" >
        BookCodeOne,
      </if>
      <if test="rolecode != null" >
        RoleCode,
      </if>
      <if test="bookcodetwo != null" >
        BookCodeTwo,
      </if>
      <if test="bookcodethree != null" >
        BookCodeThree,
      </if>
      <if test="bookcode != null" >
        BookCode,
      </if>
      <if test="bookcodedesc != null" >
        BookCodeDesc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fundtype != null" >
        #{fundtype,jdbcType=INTEGER},
      </if>
      <if test="bookcodeone != null" >
        #{bookcodeone,jdbcType=INTEGER},
      </if>
      <if test="rolecode != null" >
        #{rolecode,jdbcType=INTEGER},
      </if>
      <if test="bookcodetwo != null" >
        #{bookcodetwo,jdbcType=INTEGER},
      </if>
      <if test="bookcodethree != null" >
        #{bookcodethree,jdbcType=INTEGER},
      </if>
      <if test="bookcode != null" >
        #{bookcode,jdbcType=VARCHAR},
      </if>
      <if test="bookcodedesc != null" >
        #{bookcodedesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yjy.entity.FundbookcodeExample" resultType="java.lang.Integer" >
    select count(*) from fundbookcode
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update fundbookcode
    <set >
      <if test="record.id != null" >
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fundtype != null" >
        FundType = #{record.fundtype,jdbcType=INTEGER},
      </if>
      <if test="record.bookcodeone != null" >
        BookCodeOne = #{record.bookcodeone,jdbcType=INTEGER},
      </if>
      <if test="record.rolecode != null" >
        RoleCode = #{record.rolecode,jdbcType=INTEGER},
      </if>
      <if test="record.bookcodetwo != null" >
        BookCodeTwo = #{record.bookcodetwo,jdbcType=INTEGER},
      </if>
      <if test="record.bookcodethree != null" >
        BookCodeThree = #{record.bookcodethree,jdbcType=INTEGER},
      </if>
      <if test="record.bookcode != null" >
        BookCode = #{record.bookcode,jdbcType=VARCHAR},
      </if>
      <if test="record.bookcodedesc != null" >
        BookCodeDesc = #{record.bookcodedesc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update fundbookcode
    set Id = #{record.id,jdbcType=INTEGER},
      FundType = #{record.fundtype,jdbcType=INTEGER},
      BookCodeOne = #{record.bookcodeone,jdbcType=INTEGER},
      RoleCode = #{record.rolecode,jdbcType=INTEGER},
      BookCodeTwo = #{record.bookcodetwo,jdbcType=INTEGER},
      BookCodeThree = #{record.bookcodethree,jdbcType=INTEGER},
      BookCode = #{record.bookcode,jdbcType=VARCHAR},
      BookCodeDesc = #{record.bookcodedesc,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yjy.entity.Fundbookcode" >
    update fundbookcode
    <set >
      <if test="fundtype != null" >
        FundType = #{fundtype,jdbcType=INTEGER},
      </if>
      <if test="bookcodeone != null" >
        BookCodeOne = #{bookcodeone,jdbcType=INTEGER},
      </if>
      <if test="rolecode != null" >
        RoleCode = #{rolecode,jdbcType=INTEGER},
      </if>
      <if test="bookcodetwo != null" >
        BookCodeTwo = #{bookcodetwo,jdbcType=INTEGER},
      </if>
      <if test="bookcodethree != null" >
        BookCodeThree = #{bookcodethree,jdbcType=INTEGER},
      </if>
      <if test="bookcode != null" >
        BookCode = #{bookcode,jdbcType=VARCHAR},
      </if>
      <if test="bookcodedesc != null" >
        BookCodeDesc = #{bookcodedesc,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>